{"version":3,"sources":["../../../src/coooders/bean/middler.js"],"names":["Middler","cm","pri","KEY","_","__","app","name","getConfigValue","ValueConfig","e","showException","val","setConfigValue","TypeConfig","MiddlerConfig","key","getValue","setValue","config","data","getType","Config","MiddlerConfigConvert","that","scripts","getScript","path","include","Configs","base","clearScript","type","assem","convertParas","params","defParam","pcm","paras","i","ref","index","indexOf","appName","substr","push","random","convertContainer","self","appsetting","AppSettings","middler","param","isArray","ret","getValueByName","convertCreater","v","method","spapath","host","isValid","pack","trim","constructorparalength","para","merge","getParas","cls1","create2","cls2","val2","apply","cls3","eval","cls4","callback","argument","hasset","func","args","arguments","call","cls5","val5","cls6","val6","mode","size","creater","obj","dispose","tryC","pool","convertApp","keys","needConfig","ConfigConvert","getMiddlerFromJS","getApplicationConfigManagerFromJS","getMiddlerFromObj","getApplicationConfigManagerFromObj","getMiddlerFromFile","getApplicationConfigManagerFromFile","getMiddlerFromDir","getApplicationConfigManagerFromDir","getObjectByAppName","___","randomid","getTypeByAppName","pris","setValueByName","getTypeByName"],"mappings":"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","file":"middler.js","sourcesContent":["import V from '../common/tool'\nimport C from '../io/config'\nimport { Pool } from '../collection/pool'\n/**\n * C.Configs = V.merge(C.Configs,{ConfigConverts:{Middler:{type:'MiddlerConfigConvert',path:'/com/coooders/bean/middler'}}});\n\tMiddler通过包装getConfigValue中的Key值实际调用MiddlerConfig特别定义的GetValueByAppName方法\n */\nexport const Middler = class {\n    constructor(cm) {\n        const { _, __ } = pri(this, { cm: cm, KEY: 'Middler' });\n    }\n    getObjectByAppName(app, name) {\n        const { _, __ } = pri(this);\n        try {\n            return __.cm.getConfigValue(__.KEY, new ValueConfig(app, name));\n        } catch (e) {\n            V.showException(app + \":\" + name, e);\n        }\n    }\n    setObjectByAppName(app, name, val) {\n        const { _, __ } = pri(this);\n        try {\n            return __.cm.setConfigValue(__.KEY, new ValueConfig(app, name), val);\n        } catch (e) {\n            V.showException(app + \":\" + name, e);\n        }\n    }\n    getTypeByAppName(app, name) {\n        const { _, __ } = pri(this);\n        try {\n            return __.cm.getConfigValue(__.KEY, new TypeConfig(app, name));\n        } catch (e) {\n            V.showException(app + \":\" + name, e);\n        }\n    }\n};\nexport const MiddlerConfig = class extends C.Config {\n    constructor() {\n        super();\n        pri(this);\n    }\n    getValue(key) {\n        return key.getValue(this);\n    }\n    setValue(key, val) {\n        return key.setValue(this, val);\n    }\n    merge(config) {\n        const { _ } = pri(this);\n        if (config.data) {\n            let {...data } = config.data;\n            _.data = data;\n        }\n    }\n    getValueByName(app, name) {\n        const { _ } = pri(this);\n        if (_.data[app] && _.data[app][name]) {\n            return _.data[app][name].getValue();\n        } else return null;\n    }\n    setValueByName(app, name, val) {\n        const { _ } = pri(this);\n        if (_.data[app] && _.data[app][name]) {\n            return _.data[app][name].setValue(val);\n        } else return null;\n    }\n    getTypeByName(app, name) {\n        const { _ } = pri(this);\n        if (_.data[app] && _.data[app][name]) {\n            return _.data[app][name].getType();\n        } else return null;\n    };\n};\n/*\n\tMiddler:{\n\t\tappName:{\n\t\t\tmethod:'',\n\t\t\tmode:'',\n\t\t\tpath:'',\n\t\t\thost:'',\n\t\t\tpack:'',\n\t\t\tObjectName:{type:'',path:'',method:'',mode:'',constractparalength:'',params:[\n\t\t\t\t{type:'',path:'',method:'',mode:'',constractparalength:''},\n\t\t\t\t{ref:''},\n\t\t\t\t{a:1,b:2},\n\t\t\t\t{a:1},\n\t\t\t\t{b:2},\n\t\t\t\t'',\n\t\t\t\t1,\n\t\t\t\t{middler:true},\n\t\t\t\t{self:true},\n\t\t\t\t{appsetting:'settingname'}\n\t\t\t]},\n\t\t\tObjectsName:{path:'',method:'',mode:'',constractparalength:'',params:[\n\t\t\t\t{type:'',path:'',method:'',mode:'',constractparalength:''},\n\t\t\t\t{ref:''},\n\t\t\t]}\n\t\t}\n\t}\n\t*/\nexport const MiddlerConfigConvert = class extends C.ConfigConvert {\n    constructor() {\n        super();\n        const that = this;\n        const { _, __ } = pri(that, {\n            scripts: {},\n            getScript: (path) => {\n                const { _, __ } = pri(that);\n                __.scripts[path] = __.scripts[path] || V.include(path, C.Configs.base);\n                return __.scripts[path];\n            },\n            clearScript: () => {\n                const { _, __ } = pri(that);\n                delete __.scripts;\n                __.scripts = {};\n            },\n            getType: (path, type) => {\n                const { _, __ } = pri(that);\n                let assem = __.getScript(path);\n                return type ? assem[type] : assem;\n            },\n            convertParas: (config, params = [], defParam, app, pcm) => {\n                const { _, __ } = pri(that);\n                let paras = [];\n                for (let i in params) {\n                    let val = params[i];\n                    if (val && typeof(val) == 'object') {\n                        if (val.ref) {\n                            let index = val.ref.indexOf('/') >= 0 ? val.ref.indexOf('/') : val.ref.indexOf('\\\\') >= 0 ? val.ref.indexOf('\\\\') : -1;\n                            let appName = index >= 0 ? val.ref.substr(0, index) : defParam.app;\n                            let name = appName ? val.ref.substr(index + 1) : val.ref;\n                            //paras.push(config.getValueByName(appName,name));\n                            paras.push({ ref: appName, name: name });\n                        } else if (val.type || val.path) {\n                            let name = V.random() + '';\n                            app[name] = __.convertContainer(config, val, defParam, app, pcm);\n                            paras.push({ ref: defParam.app, name: name });\n                        } else if (val.self) {\n                            paras.push(pcm);\n                        } else if (val.appsetting) {\n                            paras.push(C.AppSettings(pcm, val.appsetting));\n                        } else if (val.middler) {\n                            paras.push(new Middler(pcm));\n                        } else if (val.params && val.param) {\n                            let name = V.random() + '';\n                            app[name] = __.convertContainer(config, val, defParam, app, pcm);\n                            paras.push({ ref: defParam.app, name: name, param: val.param });\n                        } else if (V.isArray(val)) {\n                            //objects\n                            let name = V.random() + '';\n                            app[name] = __.convertContainer(config, { params: val }, defParam, app, pcm);\n                            paras.push({ ref: defParam.app, name: name });\n                        } else {\n                            //普通JSON\n                            paras.push(val);\n                        }\n                    } else {\n                        paras.push(val);\n                    }\n                }\n\n                return new class {\n                    constructor() {\n\n                    }\n                    getParas() {\n                        let ret = [];\n                        for (let i in paras) {\n                            let val = paras[i];\n                            if (val && val.ref) {\n                                val = config.getValueByName(val.ref, val.name);\n                            }\n                            ret.push(val);\n                        }\n                        return ret;\n                    }\n                };\n            },\n            convertCreater: (config, v, defParam, app, pcm) => {\n                const { _, __ } = pri(that);\n                let method = V.getValue(v.method, defParam.method);\n                let path = V.getValue(v.path, defParam.path);\n                //todo spapath暂时不明\n                let spapath = V.getValue(v.spapath, false);\n                let host = V.getValue(v.host, defParam.host);\n                let type = ((V.isValid(v.type) && v.type.indexOf('\\.') == 0) ? defParam.pack : '') + v.type;\n                path = ((V.isValid(path) && path.indexOf('~') == 0) ? (defParam.path + '/') : '') + path.trim('~');\n                if (type == 'undefined' && !V.isValid(v.ref)) {\n                    if (V.isValid(v.path) || V.isValid(v.spapath)) {\n                        type = v.type = ''; //type就是类本身 + V.random(); \n                    } else if (V.isValid(v.params)) {\n                        method = \"objects\";\n                    } else {\n                        method = \"self\";\n                    }\n                }\n                let constructorparalength = V.getValue(v.constructorparalength, defParam.constructorparalength);\n                //使用Objects的默认配置对下传递 仅仅传递 path 和 pack\n                let para = __.convertParas(config, v.params, V.merge(defParam, { path: path, pack: defParam.pack, host: host }), app, pcm);\n                return new class {\n                    constructor() {}\n                    getType() {\n                        let paras = para.getParas();\n                        return __.getType(path, type);\n                    }\n                    getValue() {\n                        let paras = para.getParas();\n                        switch (method) {\n                            case \"self\":\n                                return v;\n                            case \"objects\":\n                                return paras;\n                            default:\n                            case 'constructor':\n                                //严重问题 不能create\n                                let cls1 = __.getType(path, type);\n                                return cls1 ? V.create2(cls1, paras) : null;\n                            case 'bean':\n                                //严重问题 不能create\n                                let cls2 = __.getType(path, type);\n                                let val2 = cls2 ? V.create2(cls2, []) : null;\n                                //bean设置出错\n                                if (val2 && paras) {\n                                    for (let i in paras) {\n                                        if (typeof(paras[i]) === 'object') {\n                                            if (v.params[i].name && val2['set' + v.params[i].name]) {\n                                                val2['set' + v.params[i].name].apply(val2, [paras[i]]);\n                                            } else if (v.params[i].param && val2['set' + v.params[i].param]) {\n                                                val2['set' + v.params[i].param].apply(val2, paras[i]);\n                                            } else {\n                                                val2 = V.merge(val2, paras[i]);\n                                            }\n                                        }\n                                    }\n                                }\n                                return val2;\n                            case 'factory':\n                                //严重问题 不能create 回调\n                                let cls3 = __.getType(path, type);\n                                return cls3 ? cls3.apply(cls3, paras) : eval('(' + type + '.apply(' + type + ',paras))');\n                            case 'factorycallback':\n                                let cls4 = __.getType(path, type);\n                                let callback = new class {\n                                    constructor() {\n                                        pri(this, { argument: null, hasset: false });\n                                    }\n                                    getValue(func) {\n                                        const { _, __ } = pri(this);\n                                        if (__.hasset) func.apply(null, argument);\n                                        else __.func = func;\n                                    }\n                                    call(...args) {\n                                        const { _, __ } = pri(this);\n                                        V.merge(__, {\n                                            argument: args,\n                                            hasset: true\n                                        }, true);\n                                        if (__.func) func.apply(null, arguments);\n                                    };\n                                };\n                                paras.push(callback.call);\n                                cls4 ? cls4.apply(cls4, paras) : eval('(' + type + '.apply(' + type + ',paras))');\n                                return callback;\n                            case 'factorybean':\n                                let cls5 = __.getType(path, type);\n                                let val5 = cls5 ? cls5.apply(cls5, paras) : eval('(' + type + '.apply(' + type + ',paras))');\n                                if (paras && val5) {\n                                    for (let i in paras) {\n                                        if ((typeof(constructorparalength) == 'undefined' || i >= constructorparalength) && typeof(paras[i]) === 'object') {\n                                            if (v.params[i].name && val5['set' + v.params[i].name]) {\n                                                val5['set' + v.params[i].name].apply(val5, [paras[i]]);\n                                            } else if (v.params[i].param && val5['set' + v.params[i].param]) {\n                                                val5['set' + v.params[i].param].apply(val5, paras[i]);\n                                            } else {\n                                                val5 = V.merge(val5, paras[i]);\n                                            }\n                                        }\n                                    }\n                                }\n                                return val5;\n                            case 'constructorbean':\n                                let cls6 = __.getType(path, type);\n                                let val6 = cls6 ? V.create2(cls6, paras) : null;\n                                if (paras && val6) {\n                                    for (let i in paras) {\n                                        if ((typeof(constructorparalength) == 'undefined' || i >= constructorparalength) && typeof(paras[i]) === 'object') {\n                                            if (v.params[i].name && val6['set' + v.params[i].name]) {\n                                                val6['set' + v.params[i].name].apply(val6, [paras[i]]);\n                                            } else if (v.params[i].param && val6['set' + v.params[i].param]) {\n                                                val6['set' + v.params[i].param].apply(val6, paras[i]);\n                                            } else {\n                                                val6 = V.merge(val6, paras[i]);\n                                            }\n                                        }\n                                    }\n                                }\n                                return val6;\n                        }\n                    };\n                }\n            },\n            convertContainer: (config, v, defParam, app, pcm) => {\n                const { _, __ } = pri(that);\n                let mode = V.getValue(v.mode, defParam.mode);\n                let size = V.getValue(v.size, defParam.size);\n                //创建生成器\n                let creater = __.convertCreater(config, v, defParam, app, pcm);\n                let getType = function() { return creater.getType(); };\n                //生成保持器\n\n                switch (mode) {\n                    default:\n                        case 'static':\n                        return new class {\n                        constructor() {\n                            this.obj = null;\n                        }\n                        getType(...args) { return Reflect.apply(getType, this, args); };\n                        getValue() {\n                            if (this.obj == null) {\n                                this.obj = creater.getValue();\n                            }\n                            return this.obj;\n                        };\n                        setValue(val) {\n                            if (this.obj === val) {} else {\n                                //todo 彻底删除变量\n                                val = null;\n                            }\n                        };\n                    };\n                    case 'instance':\n                            return new class {\n                            getType(...args) { return Reflect.apply(getType, this, args); };\n                            getValue() {\n                                return creater.getValue();\n                            }\n                            setValue(val) {\n                                if (v.dispose) {\n                                    V.tryC(v.dispose);\n                                }\n                            }\n                        };\n                    case 'pool':\n                            return new class {\n                            constructor() {\n                                this.pool = new Pool(size, function() { return creater.getValue(); });\n                            }\n                            getType(...args) { return Reflect.apply(getType, this, args); };\n                            getValue() {\n                                return this.pool.getValue();\n                            }\n                            setValue(val) {\n                                this.pool.setValue(val);\n                            }\n                        };\n                }\n            },\n            convertApp: (config, v, app, pcm) => {\n                const { _, __ } = pri(that);\n                const keys = { method: 'constructor', mode: 'static', path: false, pack: false, constructorparalength: false, size: 50, app: app, host: '' };\n                return new class {\n                    constructor() {\n                        let defParam = {};\n                        for (let i in keys) {\n                            defParam[i] = v[i] || keys[i];\n                            defParam['app'] = app;\n                        }\n                        for (let i in v) {\n                            if (keys[i] || keys[i] == false) {\n                                //console.log('过滤的'+i);\n                            } else {\n                                //转换object定义成Container对象\n                                this[i] = __.convertContainer(config, v[i], defParam, this, pcm);\n                            }\n                            //设置合并后的默认值\n                        };\n                    }\n                }\n            }\n        });\n        //后门获取父configmanager\n        _.needConfig = true;\n    }\n    toConfig(val, pcm) {\n        const { _, __ } = pri(this);\n        const config = new MiddlerConfig();\n        for (let i in val) {\n            //处理app\n            config.data[i] = __.convertApp(config, val[i], i, pcm);\n        }\n        return config;\n    }\n    toString(val) {\n        V.showException('Middler 不支持此操作');\n        return \"\";\n    }\n};\nexport const getMiddlerFromJS = path => new Middler(C.getApplicationConfigManagerFromJS(path));\nexport const getMiddlerFromObj = obj => new Middler(C.getApplicationConfigManagerFromObj(obj));\nexport const getMiddlerFromFile = path => new Middler(C.getApplicationConfigManagerFromFile(path));\nexport const getMiddlerFromDir = path => new Middler(C.getApplicationConfigManagerFromDir(path));\nexport const getObjectByAppName = (cm, app, name) => {\n    if (!___.middler) ___.middler = {};\n    if (!cm.randomid) {\n        cm.randomid = V.random();\n        ___.middler[cm.randomid] = new Middler(cm);\n    }\n    return ___.middler[cm.randomid].getObjectByAppName(app, name);\n\n}\nexport const getTypeByAppName = (cm, app, name) => {\n    if (!___.middler) ___.middler = {};\n    if (!cm.randomid) {\n        cm.randomid = V.random();\n        ___.middler[cm.randomid] = new Middler(cm);\n    }\n    return ___.middler[cm.randomid].getTypeByAppName(app, name);\n};\nexport default { Middler, MiddlerConfig, MiddlerConfigConvert };\nconst pri = V.pris();\nconst ValueConfig = class {\n    constructor(app, name) {\n        pri(this, { app: app, name: name });\n    }\n    getValue(config) {\n        const { _, __ } = pri(this);\n        try {\n            return config.getValueByName(__.app, __.name);\n        } catch (e) {\n            V.showException(__.app + \":\" + __.name, e);\n        }\n    }\n    setValue(config, val) {\n        const { _, __ } = pri(this);\n        try {\n            return config.setValueByName(__.app, __.name, val);\n        } catch (e) {\n            V.showException(__.app + \":\" + __.name, e);\n        }\n    }\n}\nconst TypeConfig = class {\n    constructor(app, name) {\n        pri(this, { app: app, name: name });\n    }\n    getValue(config) {\n        const { _, __ } = pri(this);\n        try {\n            return config.getTypeByName(__.app, __.name);\n        } catch (e) {\n            V.showException(__.app + \":\" + __.name, e);\n        }\n    }\n};\nconst ___ = {};"]}