'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NiElasticSearchDataFactory = exports.NiMailDataFactory = exports.NiSoapDataFactory = exports.NiUrlDataFactory = exports.NiRedisSqlDataFactory = exports.NiRedisSqlDataFactory2 = exports.NiMongoSQLDataFactory = exports.NiMemSQLDataFactory = exports.NiObjectDataFactory = exports.NiMsSQLDataFactory = exports.NiMySQLDataFactory = exports.NiMultiTemplateDecorator = exports.NiTemplateCacheDecorator = exports.NiTemplateDecorator = exports.NiDataCommand = exports.NiDataConnection = exports.NiDataFactory = exports.NiPoolDataResource = exports.NiStaticDataResource = exports.NiInstanceDataResource = exports.NiDataResource = exports.NiDataResult = exports.NiTemplateManager = exports.NiTemplate = exports.NiDataConfigConvert = exports.NiDataConfig = undefined;

var _values6 = require('babel-runtime/core-js/object/values');

var _values7 = _interopRequireDefault(_values6);

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _get2 = require('babel-runtime/helpers/get');

var _get3 = _interopRequireDefault(_get2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _tool = require('../common/tool');

var _tool2 = _interopRequireDefault(_tool);

var _config = require('../io/config');

var _config2 = _interopRequireDefault(_config);

var _pool = require('../collection/pool');

var _mysql = require('mysql');

var _mysql2 = _interopRequireDefault(_mysql);

var _mssql = require('mssql');

var _mssql2 = _interopRequireDefault(_mssql);

var _memcached = require('memcached');

var _memcached2 = _interopRequireDefault(_memcached);

var _mongodb = require('mongodb');

var _mongodb2 = _interopRequireDefault(_mongodb);

var _tool3 = require('../net/tool');

var _tool4 = _interopRequireDefault(_tool3);

var _querystring = require('querystring');

var _querystring2 = _interopRequireDefault(_querystring);

var _emailjs = require('emailjs');

var _emailjs2 = _interopRequireDefault(_emailjs);

var _elasticsearch = require('elasticsearch');

var _elasticsearch2 = _interopRequireDefault(_elasticsearch);

var _ioredis = require('ioredis');

var _ioredis2 = _interopRequireDefault(_ioredis);

var _soap = require('soap');

var _soap2 = _interopRequireDefault(_soap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var pri = _tool2.default.pris();
//import nosql from './nosql';
/**
 * //依托Middler框架完成对数据类型文件的处理，包括mysql mongodb sqlserver memcache ObjectDB(即自定义function) WebSocket等等数据源类型的操作
	//实现对如下格式文件的处理
		Ni:{
			ajaxtest2:{command:'http://localhost/VESHTest/Module/help/test.tjsonp?_n=recorder',dbtype:'tjson',params:{limit:11},template:'template1'},
			ajaxtest1:{command:'http://localhost/KDAPI/Module/GetOrderTrackItems.tjsonp?_n=Order',dbtype:'tjson',params:{},template:'template1'},
			'ajaxtest1.Cache':{command:function(res,params){return res[params.cacheKey];不写即使用默认值},dbtype:'json',params:{},template:'template2'},
			'ajaxtest1.Set':{command:function(res,params){res[params.cacheKey] = params.cacheValue;不写即使用默认值},dbtype:'json',params:{timeout1:{interval:'s',number:50}},template:'template2'},
			sqlinsert:{command:'create table if not exists table(name Text,message text,time integer);insert into table values(?,?,?);',dbtype:'json',params:{data:[]},template:'sqltemp'},
			sqlselect:{command:'select * from table;',dbtype:'json',params:{data:[]},template:'sqltemp'},
			sqlselect2:{command:'select * from table where name=?',dbtype:'json',params:{data:[]},template:'sqltemp'},		
			Name1:{command:'',params:{},dbtype:'json/tjson',template:'仅在Middler中调用NiMultiTemplateDecorator时启用'},
			wstest1: { command: 'abc.json', dbtype: 'json', params: {}, template: 'ws' },
			wstest2: { command: 'bcd.json?_n=MT, dbtype: 'json', params: {}, template: 'ws' }
		}
let t = middler.getObjectByAppName('Ni','templatename');
let res = t.execute('aaa.GetProductDetail',{ProductID:111},function(result){
	let res = result.last();
});
middler.setObjectByAppName('Ni','templatename',t);
//分离NiDataConfig完成Ni格式文件处理
//分离NiDataConfigConvert完成对Ni格式转成Config
//用于处理 Ni文件定义
*/
var NiDataConfig = exports.NiDataConfig = function (_C$Config) {
    (0, _inherits3.default)(NiDataConfig, _C$Config);

    function NiDataConfig() {
        (0, _classCallCheck3.default)(this, NiDataConfig);

        var _this2 = (0, _possibleConstructorReturn3.default)(this, (NiDataConfig.__proto__ || (0, _getPrototypeOf2.default)(NiDataConfig)).call(this));

        var that = _this2;

        var _pri = pri(that, {
            mergeValue: function mergeValue(param) {
                switch (param.type) {
                    case 'Int':
                    case 'int':
                    case 'int32':
                    case 'int16':
                    case 'int64':
                        param.value = param.value ? parseInt(param.value) : 0;
                        break;
                    case 'DateTime':
                    case 'Date':
                    case 'datetime':
                        param.value = param.value ? param.value.split ? Date.parse(param.value) : new Date(param.value) : new Date(0);
                        break;
                    case 'float':
                    case 'single':
                    case 'double':
                        param.value = param.value ? parseFloat(param.value) : 0;
                        break;
                    case 'string':
                    case 'String':
                        param.value = param.value == null ? null : param.value + '';
                        break;
                }
            }
        }),
            _ = _pri._,
            __ = _pri.__;

        return _this2;
    }

    (0, _createClass3.default)(NiDataConfig, [{
        key: 'standard',
        value: function standard(val) {
            var ret = {};

            var _loop = function _loop(k) {
                var v = val[k] || {
                    value: val[k],
                    isStandard: true
                };
                ret[k] = v.isStandard ? v : v.type || v.out && v.out != '' ? function () {
                    v.isStandard = true;
                    return v;
                }() : {
                    value: v,
                    isStandard: true
                };
            };

            for (var k in val) {
                _loop(k);
            }
            return ret;
        }
    }, {
        key: 'merge',
        value: function merge() {
            for (var _len = arguments.length, vals = Array(_len), _key = 0; _key < _len; _key++) {
                vals[_key] = arguments[_key];
            }

            var _pri2 = pri(this),
                _ = _pri2._,
                __ = _pri2.__;
            //默认设置最后一个参数为值，其它参数为标准化数据 key:{value:val,type:'',out:false,isStandard:true}


            vals.forEach(function (v, i) {
                return vals[i] = _.standard(v);
            });
            vals = _tool2.default.merge.apply(null, vals);
            for (var k in vals) {
                __.mergeValue(vals[k]);
            }return vals;
        }
    }, {
        key: 'getValue',
        value: function getValue() {
            var _pri3 = pri(this),
                _ = _pri3._,
                __ = _pri3.__;

            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                args[_key2] = arguments[_key2];
            }

            var ret = (0, _get3.default)(NiDataConfig.prototype.__proto__ || (0, _getPrototypeOf2.default)(NiDataConfig.prototype), 'getValue', this).apply(_, args); //这里借用VJ的方法将ni.js中定义的V.merge方法改为参数标准化方法
            if (ret) {
                ret.merge = ret.merge || function () {
                    for (var _len3 = arguments.length, args2 = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
                        args2[_key3] = arguments[_key3];
                    }

                    return _.merge.apply(_, args2);
                };
            }
            return ret;
        }
    }]);
    return NiDataConfig;
}(_config2.default.Config);
NiDataConfig.instance = new NiDataConfig();
var NiDataConfigConvert = exports.NiDataConfigConvert = function (_C$ConfigConvert) {
    (0, _inherits3.default)(NiDataConfigConvert, _C$ConfigConvert);

    function NiDataConfigConvert() {
        (0, _classCallCheck3.default)(this, NiDataConfigConvert);

        var _this3 = (0, _possibleConstructorReturn3.default)(this, (NiDataConfigConvert.__proto__ || (0, _getPrototypeOf2.default)(NiDataConfigConvert)).call(this));

        pri(_this3);
        return _this3;
    }

    (0, _createClass3.default)(NiDataConfigConvert, [{
        key: 'toConfig',
        value: function toConfig(val) {
            var ret = new NiDataConfig();
            if (val) {
                if ((typeof val === 'undefined' ? 'undefined' : (0, _typeof3.default)(val)) == 'object') {
                    for (var k in val) {
                        var _v2 = val[k];
                        if (_v2) ret.data[k.toLowerCase()] = _tool2.default.merge({
                            params: {}
                        }, _v2);
                    }
                }
            }
            return ret;
        }
    }]);
    return NiDataConfigConvert;
}(_config2.default.ConfigConvert);
var NiTemplate = exports.NiTemplate = function () {
    function NiTemplate(res, cm) {
        var _this4 = this;

        (0, _classCallCheck3.default)(this, NiTemplate);

        var that = this;
        this.transaction = false;

        var _pri4 = pri(that, {
            lstCmd: [],
            KEY: 'Ni',
            result: new NiDataResult(),
            res: res,
            cm: cm,
            addCommand: function addCommand(name, params) {
                var _pri5 = pri(that),
                    _ = _pri5._,
                    __ = _pri5.__;

                var cmd = __.cm.getConfigValue(__.KEY, name.toLowerCase());
                var command = name;
                var template = "";
                if (cmd) {
                    command = cmd.command || name;
                    params = cmd.merge(cmd.params, _tool2.default.getValue(params, {}));
                    template = cmd.template;
                } else params = NiDataConfig.instance.merge({}, params);
                __.lstCmd.push({
                    name: command,
                    params: params,
                    template: template,
                    key: name,
                    jsonp: cmd && cmd.jsonp ? cmd.jsonp : false,
                    dbtype: cmd && cmd.dbtype ? cmd.dbtype : "tjson"
                });
            },
            execute: function () {
                var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
                    var _pri6, _, __, _cms, conn, cmd;

                    return _regenerator2.default.wrap(function _callee2$(_context2) {
                        while (1) {
                            switch (_context2.prev = _context2.next) {
                                case 0:
                                    _pri6 = pri(that), _ = _pri6._, __ = _pri6.__;
                                    _cms = __.lstCmd;

                                    __.lstCmd = [];

                                    if (!(_cms.length > 0)) {
                                        _context2.next = 28;
                                        break;
                                    }

                                    _context2.next = 6;
                                    return __.res.getDBConnection();

                                case 6:
                                    conn = _context2.sent;
                                    _context2.prev = 7;

                                    if (_cms.length > 1) conn.transaction = true;
                                    cmd = __.res.getDBCommand();

                                    cmd.connection = conn;
                                    //执行过程存在严重漏洞 考虑 直接执行与非直接执行的异同
                                    _context2.next = 13;
                                    return _tool2.default.each(_cms, function () {
                                        var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(v) {
                                            var data;
                                            return _regenerator2.default.wrap(function _callee$(_context) {
                                                while (1) {
                                                    switch (_context.prev = _context.next) {
                                                        case 0:
                                                            cmd.command = v.name;
                                                            cmd.params = v.params;
                                                            cmd.dbtype = v.dbtype;
                                                            cmd.jsonp = v.jsonp;
                                                            //需要知晓connection的执行原理

                                                            if (!conn.transaction) {
                                                                _context.next = 8;
                                                                break;
                                                            }

                                                            cmd.execute();
                                                            _context.next = 12;
                                                            break;

                                                        case 8:
                                                            _context.next = 10;
                                                            return cmd.execute();

                                                        case 10:
                                                            data = _context.sent;

                                                            __.result.add(!data || _tool2.default.isArray(data) && data.length == 0 ? false : data, v.key);

                                                        case 12:
                                                            return _context.abrupt('return', false);

                                                        case 13:
                                                        case 'end':
                                                            return _context.stop();
                                                    }
                                                }
                                            }, _callee, _this4);
                                        }));

                                        return function (_x) {
                                            return _ref2.apply(this, arguments);
                                        };
                                    }(), true);

                                case 13:
                                    if (!(conn.transaction && conn.commit)) {
                                        _context2.next = 16;
                                        break;
                                    }

                                    _context2.next = 16;
                                    return conn.commit();

                                case 16:
                                    return _context2.abrupt('return', true);

                                case 19:
                                    _context2.prev = 19;
                                    _context2.t0 = _context2['catch'](7);

                                    _tool2.default.showException('commit ', _context2.t0);
                                    throw _context2.t0;

                                case 23:
                                    _context2.prev = 23;

                                    __.res.backDBConnection(conn);
                                    return _context2.finish(23);

                                case 26:
                                    _context2.next = 29;
                                    break;

                                case 28:
                                    _tool2.default.showException('不能调用空的命令对象!');

                                case 29:
                                case 'end':
                                    return _context2.stop();
                            }
                        }
                    }, _callee2, _this4, [[7, 19, 23, 26]]);
                }));

                return function execute() {
                    return _ref.apply(this, arguments);
                };
            }(),
            excute: function () {
                var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3() {
                    return _regenerator2.default.wrap(function _callee3$(_context3) {
                        while (1) {
                            switch (_context3.prev = _context3.next) {
                                case 0:
                                    _context3.next = 2;
                                    return __.execute();

                                case 2:
                                    return _context3.abrupt('return', _context3.sent);

                                case 3:
                                case 'end':
                                    return _context3.stop();
                            }
                        }
                    }, _callee3, _this4);
                }));

                return function excute() {
                    return _ref3.apply(this, arguments);
                };
            }()
        }),
            _ = _pri4._,
            __ = _pri4.__;
    }

    (0, _createClass3.default)(NiTemplate, [{
        key: 'execute',
        value: function () {
            var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(name) {
                var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

                var _pri7, _, __;

                return _regenerator2.default.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                _pri7 = pri(this), _ = _pri7._, __ = _pri7.__;
                                //__.addCommand(name, V.json(V.toJsonString(params)));
                                //__.addCommand(name, V.merge({},params));

                                __.addCommand(name, params);

                                if (_.transaction) {
                                    _context4.next = 6;
                                    break;
                                }

                                __.result.clear();
                                _context4.next = 6;
                                return __.execute();

                            case 6:
                                return _context4.abrupt('return', __.result);

                            case 7:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function execute(_x2) {
                return _ref4.apply(this, arguments);
            }

            return execute;
        }()
    }, {
        key: 'excute',
        value: function () {
            var _ref5 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee5() {
                var _args5 = arguments;
                return _regenerator2.default.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                _context5.next = 2;
                                return this.execute.apply(this, _args5);

                            case 2:
                                return _context5.abrupt('return', _context5.sent);

                            case 3:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function excute() {
                return _ref5.apply(this, arguments);
            }

            return excute;
        }()
    }, {
        key: 'commit',
        value: function () {
            var _ref6 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee6() {
                var _pri8, _, __;

                return _regenerator2.default.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                _pri8 = pri(this), _ = _pri8._, __ = _pri8.__;

                                __.result.clear();
                                _context6.next = 4;
                                return __.execute();

                            case 4:
                                return _context6.abrupt('return', __.result);

                            case 5:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function commit() {
                return _ref6.apply(this, arguments);
            }

            return commit;
        }()
    }, {
        key: 'dispose',
        value: function dispose() {
            var _pri9 = pri(),
                _ = _pri9._,
                __ = _pri9.__;

            for (var i in __) {
                //if (__[i].dispose) try { __[i].dispose() } catch (e) {}
                delete __[i];
            }
        }
    }, {
        key: 'getCommand',
        value: function getCommand() {
            var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

            var _pri10 = pri(this),
                __ = _pri10.__;

            return _tool2.default.merge({}, __.cm.getConfigValue(__.KEY, name.toLowerCase()) || {});
        }
    }]);
    return NiTemplate;
}();
var NiTemplateManager = exports.NiTemplateManager = function () {
    function NiTemplateManager(middler) {
        var appName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Ni';
        (0, _classCallCheck3.default)(this, NiTemplateManager);

        pri(this, {
            middler: middler,
            KEY: appName
        });
    }

    (0, _createClass3.default)(NiTemplateManager, [{
        key: 'execute',
        value: function () {
            var _ref7 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee7(tempName, name, params, func) {
                var _pri11, _, __, temp, result;

                return _regenerator2.default.wrap(function _callee7$(_context7) {
                    while (1) {
                        switch (_context7.prev = _context7.next) {
                            case 0:
                                _pri11 = pri(this), _ = _pri11._, __ = _pri11.__;
                                temp = __.middler.getObjectByAppName(__.KEY, tempName);

                                if (!temp) {
                                    _context7.next = 10;
                                    break;
                                }

                                _context7.next = 5;
                                return temp.execute(name, params);

                            case 5:
                                result = _context7.sent;

                                __.middler.setObjectByAppName(__.KEY, tempName, temp);
                                return _context7.abrupt('return', result);

                            case 10:
                                throw new Error('没有找到Template:' + tempName);

                            case 11:
                            case 'end':
                                return _context7.stop();
                        }
                    }
                }, _callee7, this);
            }));

            function execute(_x6, _x7, _x8, _x9) {
                return _ref7.apply(this, arguments);
            }

            return execute;
        }()
    }, {
        key: 'excute',
        value: function () {
            var _ref8 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee8() {
                var _args8 = arguments;
                return _regenerator2.default.wrap(function _callee8$(_context8) {
                    while (1) {
                        switch (_context8.prev = _context8.next) {
                            case 0:
                                _context8.next = 2;
                                return this.execute.apply(this, _args8);

                            case 2:
                                return _context8.abrupt('return', _context8.sent);

                            case 3:
                            case 'end':
                                return _context8.stop();
                        }
                    }
                }, _callee8, this);
            }));

            function excute() {
                return _ref8.apply(this, arguments);
            }

            return excute;
        }()
    }, {
        key: 'dispose',
        value: function dispose() {
            var _pri12 = pri(this),
                __ = _pri12.__;

            for (var i in __) {
                delete __.i;
            }
        }
    }, {
        key: 'getCommand',
        value: function getCommand() {
            var tempName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
            var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

            var _pri13 = pri(this),
                _ = _pri13._,
                __ = _pri13.__;

            var temp = __.middler.getObjectByAppName(__.KEY, tempName);
            if (temp) {
                var result = temp.getCommand(name);
                __.middler.setObjectByAppName(__.KEY, tempName, temp);
                return result;
            } else {
                throw new Error('没有找到Template:' + tempName);
            }
        }
    }]);
    return NiTemplateManager;
}();

function hasData(data) {
    if (_tool2.default.isArray(data)) {
        for (var i = 0; i < data.length; i++) {
            if (data[i] && hasData(data[i])) return true;
        }
    } else {
        for (var _i in data) {
            if (data[_i] !== undefined) return true;
        }
    }
    return false;
};
var NiDataResult = exports.NiDataResult = function () {
    function NiDataResult() {
        (0, _classCallCheck3.default)(this, NiDataResult);

        var _pri14 = pri(this, {
            data: {},
            kv: {},
            datas: [],
            hasData: hasData
        }),
            __ = _pri14.__;
    }

    (0, _createClass3.default)(NiDataResult, [{
        key: 'get',
        value: function get(key) {
            var _pri15 = pri(this),
                _ = _pri15._,
                __ = _pri15.__;

            return __.data[key] || (__.kv[key] ? __.kv[key][1] : null);
        }
    }, {
        key: 'add',
        value: function add(data, name) {
            var _pri16 = pri(this),
                _ = _pri16._,
                __ = _pri16.__;

            if (data && !__.kv[name]) {
                __.data[__.datas.length] = data;
                __.kv[name] = [__.datas.length, data];
                __.datas.push(data);
            } else if (__.kv[name]) {
                var id = __.kv[name][0];
                __.data[id] = data;
                __.kv[name] = [__.datas.length, data];
                __.datas[id] = data;
            }
        }
    }, {
        key: 'last',
        value: function last() {
            var _pri17 = pri(this),
                _ = _pri17._,
                __ = _pri17.__;

            return _.get(__.datas.length - 1);
        }
        /**
         * 一般用于处理单个对象
         */

    }, {
        key: 'single',
        value: function single() {
            var _pri18 = pri(this),
                _ = _pri18._,
                __ = _pri18.__;

            return _.hasData() ? function () {
                var data = _.get(__.datas.length - 1);
                return data[0] && data[0][0] ? data[0][0] : {};
            }() : null;
        }
    }, {
        key: 'each',
        value: function each(key, func) {
            var _pri19 = pri(this),
                _ = _pri19._,
                __ = _pri19.__;

            var val = _.get(key);
            if (val && _tool2.default.isArray(val)) {
                return _tool2.default.each(val, func);
            } else throw new Error('遍历对象不存在或者不是数组');
        }
    }, {
        key: 'clear',
        value: function clear() {
            var _pri20 = pri(this),
                _ = _pri20._,
                __ = _pri20.__;

            __.data = {};
            __.kv = {};
            __.datas = [];
        }
    }, {
        key: 'hasData',
        value: function hasData(key) {
            var _pri21 = pri(this),
                _ = _pri21._,
                __ = _pri21.__;

            return __.hasData(key ? get(key) : __.datas);
        }
    }]);
    return NiDataResult;
}();
/**
 * getDBConnection 异步
 */
var NiDataResource = exports.NiDataResource = function () {
    function NiDataResource(factory) {
        var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        (0, _classCallCheck3.default)(this, NiDataResource);

        var _pri22 = pri(this, {
            fac: factory,
            params: params
        }),
            _ = _pri22._,
            __ = _pri22.__;
    }

    (0, _createClass3.default)(NiDataResource, [{
        key: 'getDBConnection',
        value: function () {
            var _ref9 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee9() {
                var _pri23, _, __, conn;

                return _regenerator2.default.wrap(function _callee9$(_context9) {
                    while (1) {
                        switch (_context9.prev = _context9.next) {
                            case 0:
                                _pri23 = pri(this), _ = _pri23._, __ = _pri23.__;
                                conn = __.fac.createDBConnection();

                                conn.setParams(__.params);
                                //conn.params = V.merge(conn.params, __.params);

                                if (conn.isOpen) {
                                    _context9.next = 6;
                                    break;
                                }

                                _context9.next = 6;
                                return conn.open();

                            case 6:
                                return _context9.abrupt('return', conn);

                            case 7:
                            case 'end':
                                return _context9.stop();
                        }
                    }
                }, _callee9, this);
            }));

            function getDBConnection() {
                return _ref9.apply(this, arguments);
            }

            return getDBConnection;
        }()
    }, {
        key: 'backDBConnection',
        value: function backDBConnection(conn) {
            var _pri24 = pri(this),
                _ = _pri24._,
                __ = _pri24.__;

            __.fac.backDBConnection(conn);
        }
    }, {
        key: 'getDBCommand',
        value: function getDBCommand() {
            var _pri25 = pri(this),
                _ = _pri25._,
                __ = _pri25.__;

            return __.fac.createDBCommand();
        }
    }]);
    return NiDataResource;
}();
var NiInstanceDataResource = exports.NiInstanceDataResource = function (_NiDataResource) {
    (0, _inherits3.default)(NiInstanceDataResource, _NiDataResource);

    function NiInstanceDataResource(factory) {
        var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        (0, _classCallCheck3.default)(this, NiInstanceDataResource);
        return (0, _possibleConstructorReturn3.default)(this, (NiInstanceDataResource.__proto__ || (0, _getPrototypeOf2.default)(NiInstanceDataResource)).call(this, factory, params));
    }

    (0, _createClass3.default)(NiInstanceDataResource, [{
        key: 'getDBConnection',
        value: function getDBConnection() {
            return (0, _get3.default)(NiInstanceDataResource.prototype.__proto__ || (0, _getPrototypeOf2.default)(NiInstanceDataResource.prototype), 'getDBConnection', this).call(this);
        }
    }, {
        key: 'backDBConnection',
        value: function backDBConnection(conn) {
            (0, _get3.default)(NiInstanceDataResource.prototype.__proto__ || (0, _getPrototypeOf2.default)(NiInstanceDataResource.prototype), 'backDBConnection', this).call(this, conn);
        }
    }, {
        key: 'getDBCommand',
        value: function getDBCommand() {
            return (0, _get3.default)(NiInstanceDataResource.prototype.__proto__ || (0, _getPrototypeOf2.default)(NiInstanceDataResource.prototype), 'getDBCommand', this).call(this);
        }
    }]);
    return NiInstanceDataResource;
}(NiDataResource);
var NiStaticDataResource = exports.NiStaticDataResource = function (_NiDataResource2) {
    (0, _inherits3.default)(NiStaticDataResource, _NiDataResource2);

    function NiStaticDataResource(factory) {
        var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        (0, _classCallCheck3.default)(this, NiStaticDataResource);

        var _this6 = (0, _possibleConstructorReturn3.default)(this, (NiStaticDataResource.__proto__ || (0, _getPrototypeOf2.default)(NiStaticDataResource)).call(this, factory, params));

        pri(_this6, {
            conn: null
        });
        return _this6;
    }

    (0, _createClass3.default)(NiStaticDataResource, [{
        key: 'getDBConnection',
        value: function () {
            var _ref10 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee10() {
                var _pri26, _, __;

                return _regenerator2.default.wrap(function _callee10$(_context10) {
                    while (1) {
                        switch (_context10.prev = _context10.next) {
                            case 0:
                                _pri26 = pri(this), _ = _pri26._, __ = _pri26.__;

                                if (!(!__.conn || !__.conn.isOpen)) {
                                    _context10.next = 5;
                                    break;
                                }

                                _context10.next = 4;
                                return (0, _get3.default)(NiStaticDataResource.prototype.__proto__ || (0, _getPrototypeOf2.default)(NiStaticDataResource.prototype), 'getDBConnection', this).call(this);

                            case 4:
                                __.conn = _context10.sent;

                            case 5:
                                return _context10.abrupt('return', __.conn);

                            case 6:
                            case 'end':
                                return _context10.stop();
                        }
                    }
                }, _callee10, this);
            }));

            function getDBConnection() {
                return _ref10.apply(this, arguments);
            }

            return getDBConnection;
        }()
    }, {
        key: 'backDBConnection',
        value: function backDBConnection(conn) {
            var _pri27 = pri(this),
                _ = _pri27._,
                __ = _pri27.__;

            if (conn != __.conn && conn.isOpen) (0, _get3.default)(NiStaticDataResource.prototype.__proto__ || (0, _getPrototypeOf2.default)(NiStaticDataResource.prototype), 'backDBConnection', this).call(this, conn);
        }
    }, {
        key: 'getDBCommand',
        value: function getDBCommand() {
            return (0, _get3.default)(NiStaticDataResource.prototype.__proto__ || (0, _getPrototypeOf2.default)(NiStaticDataResource.prototype), 'getDBCommand', this).call(this);
        }
    }]);
    return NiStaticDataResource;
}(NiDataResource);
var NiPoolDataResource = exports.NiPoolDataResource = function (_NiDataResource3) {
    (0, _inherits3.default)(NiPoolDataResource, _NiDataResource3);

    function NiPoolDataResource(factory) {
        var _this8 = this;

        var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var size = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 50;
        (0, _classCallCheck3.default)(this, NiPoolDataResource);

        var _this7 = (0, _possibleConstructorReturn3.default)(this, (NiPoolDataResource.__proto__ || (0, _getPrototypeOf2.default)(NiPoolDataResource)).call(this, factory, params));

        pri(_this7, {
            pool: new _pool.Pool(size, (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee11() {
                var conn;
                return _regenerator2.default.wrap(function _callee11$(_context11) {
                    while (1) {
                        switch (_context11.prev = _context11.next) {
                            case 0:
                                _context11.next = 2;
                                return (0, _get3.default)(NiPoolDataResource.prototype.__proto__ || (0, _getPrototypeOf2.default)(NiPoolDataResource.prototype), 'getDBConnection', _this7).call(_this7);

                            case 2:
                                conn = _context11.sent;

                                if (!conn.dispose) conn.dispose = conn.close;
                                return _context11.abrupt('return', conn);

                            case 5:
                            case 'end':
                                return _context11.stop();
                        }
                    }
                }, _callee11, _this8);
            })))
        });
        return _this7;
    }

    (0, _createClass3.default)(NiPoolDataResource, [{
        key: 'getDBConnection',
        value: function () {
            var _ref12 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee12() {
                var _pri28, _, __;

                return _regenerator2.default.wrap(function _callee12$(_context12) {
                    while (1) {
                        switch (_context12.prev = _context12.next) {
                            case 0:
                                _pri28 = pri(this), _ = _pri28._, __ = _pri28.__;
                                _context12.next = 3;
                                return __.pool.getValue();

                            case 3:
                                return _context12.abrupt('return', _context12.sent);

                            case 4:
                            case 'end':
                                return _context12.stop();
                        }
                    }
                }, _callee12, this);
            }));

            function getDBConnection() {
                return _ref12.apply(this, arguments);
            }

            return getDBConnection;
        }()
    }, {
        key: 'backDBConnection',
        value: function backDBConnection(conn) {
            var _pri29 = pri(this),
                _ = _pri29._,
                __ = _pri29.__;

            __.pool.setValue(conn);
        }
    }]);
    return NiPoolDataResource;
}(NiDataResource);
var NiDataFactory = exports.NiDataFactory = function () {
    function NiDataFactory() {
        (0, _classCallCheck3.default)(this, NiDataFactory);

        pri(this);
    }

    (0, _createClass3.default)(NiDataFactory, [{
        key: 'createDBConnection',
        value: function createDBConnection() {
            return new NiDataConnection();
        }
    }, {
        key: 'createDBCommand',
        value: function createDBCommand() {
            return new NiDataCommand();
        }
    }, {
        key: 'backDBConnection',
        value: function () {
            var _ref13 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee13(conn) {
                return _regenerator2.default.wrap(function _callee13$(_context13) {
                    while (1) {
                        switch (_context13.prev = _context13.next) {
                            case 0:
                                if (!conn.isOpen) {
                                    _context13.next = 3;
                                    break;
                                }

                                _context13.next = 3;
                                return conn.close();

                            case 3:
                            case 'end':
                                return _context13.stop();
                        }
                    }
                }, _callee13, this);
            }));

            function backDBConnection(_x17) {
                return _ref13.apply(this, arguments);
            }

            return backDBConnection;
        }()
    }]);
    return NiDataFactory;
}();
/**
 * Connection 全部是callback
 */
var NiDataConnection = exports.NiDataConnection = function () {
    function NiDataConnection() {
        (0, _classCallCheck3.default)(this, NiDataConnection);

        pri(this);
        this.isOpen = false;
        this.transaction = false;
        this.params = {};
    }

    (0, _createClass3.default)(NiDataConnection, [{
        key: 'setParams',
        value: function setParams(paras) {
            _tool2.default.merge(this.params, paras, true);
        }
    }, {
        key: 'open',
        value: function () {
            var _ref14 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee14() {
                var _pri30, _, __;

                return _regenerator2.default.wrap(function _callee14$(_context14) {
                    while (1) {
                        switch (_context14.prev = _context14.next) {
                            case 0:
                                _pri30 = pri(this), _ = _pri30._, __ = _pri30.__;

                                _.isOpen = true;

                            case 2:
                            case 'end':
                                return _context14.stop();
                        }
                    }
                }, _callee14, this);
            }));

            function open() {
                return _ref14.apply(this, arguments);
            }

            return open;
        }()
    }, {
        key: 'close',
        value: function () {
            var _ref15 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee15() {
                var _pri31, _, __;

                return _regenerator2.default.wrap(function _callee15$(_context15) {
                    while (1) {
                        switch (_context15.prev = _context15.next) {
                            case 0:
                                _pri31 = pri(this), _ = _pri31._, __ = _pri31.__;

                                _.isOpen = false;

                            case 2:
                            case 'end':
                                return _context15.stop();
                        }
                    }
                }, _callee15, this);
            }));

            function close() {
                return _ref15.apply(this, arguments);
            }

            return close;
        }()
    }, {
        key: 'invoke',
        value: function () {
            var _ref16 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee16(cmd) {
                return _regenerator2.default.wrap(function _callee16$(_context16) {
                    while (1) {
                        switch (_context16.prev = _context16.next) {
                            case 0:
                                return _context16.abrupt('return', []);

                            case 1:
                            case 'end':
                                return _context16.stop();
                        }
                    }
                }, _callee16, this);
            }));

            function invoke(_x18) {
                return _ref16.apply(this, arguments);
            }

            return invoke;
        }()
    }, {
        key: 'commit',
        value: function () {
            var _ref17 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee17() {
                return _regenerator2.default.wrap(function _callee17$(_context17) {
                    while (1) {
                        switch (_context17.prev = _context17.next) {
                            case 0:
                                return _context17.abrupt('return', []);

                            case 1:
                            case 'end':
                                return _context17.stop();
                        }
                    }
                }, _callee17, this);
            }));

            function commit() {
                return _ref17.apply(this, arguments);
            }

            return commit;
        }()
    }]);
    return NiDataConnection;
}();
/**
 * DBCommand 命令使用callback命令
 */
var NiDataCommand = exports.NiDataCommand = function () {
    function NiDataCommand() {
        (0, _classCallCheck3.default)(this, NiDataCommand);

        var _pri32 = pri(this),
            _ = _pri32._,
            __ = _pri32.__;

        _.connection = null;
        _.command = '';
        _.params = {
            dbtype: 'json'
        };
    }

    (0, _createClass3.default)(NiDataCommand, [{
        key: 'execute',
        value: function () {
            var _ref18 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee18() {
                var _pri33, _, __;

                return _regenerator2.default.wrap(function _callee18$(_context18) {
                    while (1) {
                        switch (_context18.prev = _context18.next) {
                            case 0:
                                _pri33 = pri(this), _ = _pri33._, __ = _pri33.__;

                                if (!(!_.connection || !_.connection.isOpen)) {
                                    _context18.next = 6;
                                    break;
                                }

                                _tool2.default.showException('数据库未连接');
                                throw new Error('数据库未连接');

                            case 6:
                                _context18.prev = 6;
                                _context18.next = 9;
                                return _.connection.invoke(_);

                            case 9:
                                return _context18.abrupt('return', _context18.sent);

                            case 12:
                                _context18.prev = 12;
                                _context18.t0 = _context18['catch'](6);

                                _tool2.default.showException('connection invoke success方法', _context18.t0);
                                throw _context18.t0;

                            case 16:
                            case 'end':
                                return _context18.stop();
                        }
                    }
                }, _callee18, this, [[6, 12]]);
            }));

            function execute() {
                return _ref18.apply(this, arguments);
            }

            return execute;
        }()
    }, {
        key: 'excute',
        value: function () {
            var _ref19 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee19() {
                var _args19 = arguments;
                return _regenerator2.default.wrap(function _callee19$(_context19) {
                    while (1) {
                        switch (_context19.prev = _context19.next) {
                            case 0:
                                _context19.next = 2;
                                return this.execute.apply(this, _args19);

                            case 2:
                                return _context19.abrupt('return', _context19.sent);

                            case 3:
                            case 'end':
                                return _context19.stop();
                        }
                    }
                }, _callee19, this);
            }));

            function excute() {
                return _ref19.apply(this, arguments);
            }

            return excute;
        }()
    }]);
    return NiDataCommand;
}();

/**
 * 可以针对每个函数分别设置缓存方式和缓存字段
 * @param {*} res 
 * @param {*} cacheres 
 * @param {*} cm 
 * @param {*} params 
 */
var NiTemplateDecorator = exports.NiTemplateDecorator = function (_NiTemplate) {
    (0, _inherits3.default)(NiTemplateDecorator, _NiTemplate);

    function NiTemplateDecorator(res, cacheres, cm) {
        var _this10 = this;

        var params = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
        (0, _classCallCheck3.default)(this, NiTemplateDecorator);

        var _this9 = (0, _possibleConstructorReturn3.default)(this, (NiTemplateDecorator.__proto__ || (0, _getPrototypeOf2.default)(NiTemplateDecorator)).call(this, res, cm));

        var that = _this9;

        var _pri34 = pri(that, {
            KEY: 'Ni',
            lstCmd2: {},
            params: params,
            cacheres: cacheres
        }),
            _ = _pri34._,
            __ = _pri34.__;

        var _addCommand = __.addCommand;
        var _execute = __.execute;
        __.addCommand = function (name, params) {
            var _pri35 = pri(that),
                _ = _pri35._,
                __ = _pri35.__;

            var index = __.lstCmd.length;
            _addCommand.apply(_, [name, params]);
            if (__.lstCmd.length != index) {
                var command = null;
                var cmd = __.cm.getConfigValue(__.KEY, name.toLowerCase() + '.cache') || __.cm.getConfigValue(__.KEY, name.toLowerCase() + '.clear');
                if (cmd) {
                    command = cmd.command;
                    __.lstCmd2[index] = {
                        name: command,
                        key: name,
                        params: cmd.merge({
                            cacheKey: '' + _tool2.default.hash(name + '.Set.' + _tool2.default.toJsonString(__.lstCmd[__.lstCmd.length - 1].params))
                        }, cmd.params, __.lstCmd[__.lstCmd.length - 1].params)
                    };
                }
            }
        };
        __.execute = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee21() {
            var _pri36, _, __, _cms, conn, cmd, i;

            return _regenerator2.default.wrap(function _callee21$(_context21) {
                while (1) {
                    switch (_context21.prev = _context21.next) {
                        case 0:
                            _pri36 = pri(that), _ = _pri36._, __ = _pri36.__;
                            _cms = __.lstCmd;

                            __.lstCmd = [];

                            if (!(_cms.length > 0)) {
                                _context21.next = 28;
                                break;
                            }

                            _context21.next = 6;
                            return __.res.getDBConnection();

                        case 6:
                            conn = _context21.sent;
                            _context21.prev = 7;

                            if (_cms.length > 1) conn.transaction = true;
                            cmd = __.res.getDBCommand();

                            cmd.connection = conn;
                            //执行过程存在严重漏洞 考虑 直接执行与非直接执行的异同
                            i = 0;
                            _context21.next = 14;
                            return _tool2.default.each(_cms, function () {
                                var _ref21 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee20(v) {
                                    var _nicmd, _conn, _cmd, data, _data2, _nicmd2, _conn2, _cmd2, _data;

                                    return _regenerator2.default.wrap(function _callee20$(_context20) {
                                        while (1) {
                                            switch (_context20.prev = _context20.next) {
                                                case 0:
                                                    _nicmd = __.lstCmd2[i++];

                                                    if (!_nicmd) {
                                                        _context20.next = 21;
                                                        break;
                                                    }

                                                    _context20.next = 4;
                                                    return __.cacheres.getDBConnection();

                                                case 4:
                                                    _conn = _context20.sent;
                                                    _context20.prev = 5;
                                                    _cmd = __.cacheres.getDBCommand();

                                                    _cmd.connection = _conn;
                                                    _cmd.command = _nicmd.name;
                                                    _cmd.params = _tool2.default.merge(_nicmd.params, v.params);
                                                    _cmd.dbtype = v.dbtype;
                                                    _cmd.jsonp = v.jsonp;
                                                    _context20.next = 14;
                                                    return _cmd.execute();

                                                case 14:
                                                    data = _context20.sent;

                                                    if (!hasData(data)) {
                                                        _context20.next = 18;
                                                        break;
                                                    }

                                                    __.result.add(!data || _tool2.default.isArray(data) && data.length == 0 ? false : _tool2.default.json(data[0].cacheValue || data[0][0] && data[0][0].cacheValue), v.key);
                                                    return _context20.abrupt('return', false);

                                                case 18:
                                                    _context20.prev = 18;

                                                    __.cacheres.backDBConnection(_conn);
                                                    return _context20.finish(18);

                                                case 21:
                                                    cmd.command = v.name;
                                                    cmd.params = v.params;
                                                    cmd.dbtype = v.dbtype;
                                                    cmd.jsonp = v.jsonp;
                                                    //需要知晓connection的执行原理

                                                    if (!conn.transaction) {
                                                        _context20.next = 29;
                                                        break;
                                                    }

                                                    cmd.execute();
                                                    _context20.next = 52;
                                                    break;

                                                case 29:
                                                    _context20.next = 31;
                                                    return cmd.execute();

                                                case 31:
                                                    _data2 = _context20.sent;

                                                    __.result.add(!_data2 || _tool2.default.isArray(_data2) && _data2.length == 0 ? false : _data2, v.key);

                                                    if (!(_data2 && _data2.length > 0 && !(_data2.length == 1 && _data2[0].length == 0))) {
                                                        _context20.next = 52;
                                                        break;
                                                    }

                                                    //新增缓存
                                                    _nicmd2 = __.cm.getConfigValue(__.KEY, v.key.toLowerCase() + '.set');

                                                    if (!_nicmd2) {
                                                        _context20.next = 52;
                                                        break;
                                                    }

                                                    _context20.next = 38;
                                                    return __.cacheres.getDBConnection();

                                                case 38:
                                                    _conn2 = _context20.sent;
                                                    _context20.prev = 39;
                                                    _cmd2 = __.cacheres.getDBCommand();

                                                    _cmd2.connection = _conn2;
                                                    _cmd2.command = _nicmd2.command;
                                                    _cmd2.params = _nicmd2.merge({
                                                        cacheKey: '' + _tool2.default.hash(v.key + '.Set.' + _tool2.default.toJsonString(cmd.params)),
                                                        cacheValue: _tool2.default.toJsonString(_data2)
                                                    }, _nicmd2.params, cmd.params);
                                                    cmd.dbtype = v.dbtype;
                                                    cmd.jsonp = v.jsonp;
                                                    _context20.next = 48;
                                                    return _cmd2.execute();

                                                case 48:
                                                    _data = _context20.sent;

                                                case 49:
                                                    _context20.prev = 49;

                                                    __.cacheres.backDBConnection(_conn2);
                                                    return _context20.finish(49);

                                                case 52:
                                                    return _context20.abrupt('return', false);

                                                case 53:
                                                case 'end':
                                                    return _context20.stop();
                                            }
                                        }
                                    }, _callee20, _this10, [[5,, 18, 21], [39,, 49, 52]]);
                                }));

                                return function (_x20) {
                                    return _ref21.apply(this, arguments);
                                };
                            }(), true);

                        case 14:
                            if (!(conn.transaction && conn.commit)) {
                                _context21.next = 17;
                                break;
                            }

                            _context21.next = 17;
                            return conn.commit();

                        case 17:
                            return _context21.abrupt('return', __.result);

                        case 20:
                            _context21.prev = 20;
                            _context21.t0 = _context21['catch'](7);

                            _tool2.default.showException('commit ', _context21.t0);

                        case 23:
                            _context21.prev = 23;

                            __.res.backDBConnection(conn);
                            return _context21.finish(23);

                        case 26:
                            _context21.next = 29;
                            break;

                        case 28:
                            _tool2.default.showException('不能调用空的命令对象!');

                        case 29:
                        case 'end':
                            return _context21.stop();
                    }
                }
            }, _callee21, _this10, [[7, 20, 23, 26]]);
        }));
        __.excute = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee22() {
            return _regenerator2.default.wrap(function _callee22$(_context22) {
                while (1) {
                    switch (_context22.prev = _context22.next) {
                        case 0:
                            _context22.next = 2;
                            return __.execute();

                        case 2:
                            return _context22.abrupt('return', _context22.sent);

                        case 3:
                        case 'end':
                            return _context22.stop();
                    }
                }
            }, _callee22, _this10);
        }));
        return _this9;
    }

    return NiTemplateDecorator;
}(NiTemplate);

/**
 * 可以非常简单的设置缓存方式 但是存储命令只有cacheKey,cacheValue两种
 * @param {*} res 
 * @param {*} cacheres 
 * @param {*} cm 
 * @param {*} params 
 * @param {*} cachecommand //缓存命令
 * @param {*} setcommand //缓存设置命令
 */
var NiTemplateCacheDecorator = exports.NiTemplateCacheDecorator = function (_NiTemplate2) {
    (0, _inherits3.default)(NiTemplateCacheDecorator, _NiTemplate2);

    function NiTemplateCacheDecorator(res, cacheres, cm) {
        var params = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

        var _this12 = this;

        var cachecommand = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';
        var setcommand = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '';
        (0, _classCallCheck3.default)(this, NiTemplateCacheDecorator);

        var _this11 = (0, _possibleConstructorReturn3.default)(this, (NiTemplateCacheDecorator.__proto__ || (0, _getPrototypeOf2.default)(NiTemplateCacheDecorator)).call(this, res, cm));

        var that = _this11;

        var _pri37 = pri(that, {
            KEY: 'Ni',
            lstCmd2: {},
            params: params,
            cacheres: cacheres,
            cachecommand: cachecommand.toLowerCase(),
            setcommand: setcommand.toLowerCase()
        }),
            _ = _pri37._,
            __ = _pri37.__;

        var _addCommand = __.addCommand;
        var _execute = __.execute;
        __.addCommand = function (name, params) {
            var _pri38 = pri(that),
                _ = _pri38._,
                __ = _pri38.__;

            var index = __.lstCmd.length;
            _addCommand.apply(_, [name, params]);
            if (__.lstCmd.length != index) {
                var command = null;
                var cmd = __.cm.getConfigValue(__.KEY, __.cachecommand);
                if (cmd) {
                    command = cmd.command;
                    __.lstCmd2[index] = {
                        name: command,
                        key: name,
                        params: cmd.merge({
                            cacheKey: '' + _tool2.default.hash(name + '.Set.' + _tool2.default.toJsonString(__.lstCmd[__.lstCmd.length - 1].params))
                        }, cmd.params, __.lstCmd[__.lstCmd.length - 1].params)
                    };
                }
            }
        };
        __.execute = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee24() {
            var _pri39, _, __, _cms, conn, cmd, i;

            return _regenerator2.default.wrap(function _callee24$(_context24) {
                while (1) {
                    switch (_context24.prev = _context24.next) {
                        case 0:
                            _pri39 = pri(that), _ = _pri39._, __ = _pri39.__;
                            _cms = __.lstCmd;

                            __.lstCmd = [];

                            if (!(_cms.length > 0)) {
                                _context24.next = 28;
                                break;
                            }

                            _context24.next = 6;
                            return __.res.getDBConnection();

                        case 6:
                            conn = _context24.sent;
                            _context24.prev = 7;

                            if (_cms.length > 1) conn.transaction = true;
                            cmd = __.res.getDBCommand();

                            cmd.connection = conn;
                            //执行过程存在严重漏洞 考虑 直接执行与非直接执行的异同
                            i = 0;
                            _context24.next = 14;
                            return _tool2.default.each(_cms, function () {
                                var _ref24 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee23(v) {
                                    var _nicmd, _conn, _cmd, data, _data3, _nicmd3, _conn3, _cmd3, _data;

                                    return _regenerator2.default.wrap(function _callee23$(_context23) {
                                        while (1) {
                                            switch (_context23.prev = _context23.next) {
                                                case 0:
                                                    _nicmd = __.lstCmd2[i++];

                                                    if (!_nicmd) {
                                                        _context23.next = 21;
                                                        break;
                                                    }

                                                    _context23.next = 4;
                                                    return __.cacheres.getDBConnection();

                                                case 4:
                                                    _conn = _context23.sent;
                                                    _context23.prev = 5;
                                                    _cmd = __.cacheres.getDBCommand();

                                                    _cmd.connection = _conn;
                                                    _cmd.command = _nicmd.name;
                                                    _cmd.params = _tool2.default.merge(_nicmd.params, v.params);
                                                    _cmd.dbtype = v.dbtype;
                                                    _cmd.jsonp = v.jsonp;
                                                    _context23.next = 14;
                                                    return _cmd.execute();

                                                case 14:
                                                    data = _context23.sent;

                                                    if (!hasData(data)) {
                                                        _context23.next = 18;
                                                        break;
                                                    }

                                                    __.result.add(!data || _tool2.default.isArray(data) && data.length == 0 ? false : _tool2.default.json(data[0].cacheValue || data[0][0] && data[0][0].cacheValue), v.key);
                                                    return _context23.abrupt('return', false);

                                                case 18:
                                                    _context23.prev = 18;

                                                    __.cacheres.backDBConnection(_conn);
                                                    return _context23.finish(18);

                                                case 21:
                                                    cmd.command = v.name;
                                                    cmd.params = v.params;
                                                    cmd.dbtype = v.dbtype;
                                                    cmd.jsonp = v.jsonp;
                                                    //需要知晓connection的执行原理

                                                    if (!conn.transaction) {
                                                        _context23.next = 29;
                                                        break;
                                                    }

                                                    cmd.execute();
                                                    _context23.next = 52;
                                                    break;

                                                case 29:
                                                    _context23.next = 31;
                                                    return cmd.execute();

                                                case 31:
                                                    _data3 = _context23.sent;

                                                    __.result.add(!_data3 || _tool2.default.isArray(_data3) && _data3.length == 0 ? false : _data3, v.key);

                                                    if (!(_data3 && _data3.length > 0 && !(_data3.length == 1 && _data3[0].length == 0))) {
                                                        _context23.next = 52;
                                                        break;
                                                    }

                                                    //新增缓存
                                                    _nicmd3 = __.cm.getConfigValue(__.KEY, __.setcommand);

                                                    if (!_nicmd3) {
                                                        _context23.next = 52;
                                                        break;
                                                    }

                                                    _context23.next = 38;
                                                    return __.cacheres.getDBConnection();

                                                case 38:
                                                    _conn3 = _context23.sent;
                                                    _context23.prev = 39;
                                                    _cmd3 = __.cacheres.getDBCommand();

                                                    _cmd3.connection = _conn3;
                                                    _cmd3.command = _nicmd3.command;
                                                    _cmd3.params = _nicmd3.merge({
                                                        cacheKey: '' + _tool2.default.hash(v.key + '.Set.' + _tool2.default.toJsonString(cmd.params)),
                                                        cacheValue: _tool2.default.toJsonString(_data3)
                                                    }, _nicmd3.params, cmd.params);
                                                    cmd.dbtype = v.dbtype;
                                                    cmd.jsonp = v.jsonp;
                                                    _context23.next = 48;
                                                    return _cmd3.execute();

                                                case 48:
                                                    _data = _context23.sent;

                                                case 49:
                                                    _context23.prev = 49;

                                                    __.cacheres.backDBConnection(_conn3);
                                                    return _context23.finish(49);

                                                case 52:
                                                    return _context23.abrupt('return', false);

                                                case 53:
                                                case 'end':
                                                    return _context23.stop();
                                            }
                                        }
                                    }, _callee23, _this12, [[5,, 18, 21], [39,, 49, 52]]);
                                }));

                                return function (_x24) {
                                    return _ref24.apply(this, arguments);
                                };
                            }(), true);

                        case 14:
                            if (!(conn.transaction && conn.commit)) {
                                _context24.next = 17;
                                break;
                            }

                            _context24.next = 17;
                            return conn.commit();

                        case 17:
                            return _context24.abrupt('return', __.result);

                        case 20:
                            _context24.prev = 20;
                            _context24.t0 = _context24['catch'](7);

                            _tool2.default.showException('commit ', _context24.t0);

                        case 23:
                            _context24.prev = 23;

                            __.res.backDBConnection(conn);
                            return _context24.finish(23);

                        case 26:
                            _context24.next = 29;
                            break;

                        case 28:
                            _tool2.default.showException('不能调用空的命令对象!');

                        case 29:
                        case 'end':
                            return _context24.stop();
                    }
                }
            }, _callee24, _this12, [[7, 20, 23, 26]]);
        }));
        __.excute = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee25() {
            return _regenerator2.default.wrap(function _callee25$(_context25) {
                while (1) {
                    switch (_context25.prev = _context25.next) {
                        case 0:
                            _context25.next = 2;
                            return __.execute();

                        case 2:
                            return _context25.abrupt('return', _context25.sent);

                        case 3:
                        case 'end':
                            return _context25.stop();
                    }
                }
            }, _callee25, _this12);
        }));
        return _this11;
    }

    return NiTemplateCacheDecorator;
}(NiTemplate);

var NiMultiTemplateDecorator = exports.NiMultiTemplateDecorator = function (_NiTemplate3) {
    (0, _inherits3.default)(NiMultiTemplateDecorator, _NiTemplate3);

    function NiMultiTemplateDecorator(res, cm, relcm) {
        var _this14 = this;

        var appName = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "Ni";
        (0, _classCallCheck3.default)(this, NiMultiTemplateDecorator);

        var _this13 = (0, _possibleConstructorReturn3.default)(this, (NiMultiTemplateDecorator.__proto__ || (0, _getPrototypeOf2.default)(NiMultiTemplateDecorator)).call(this, res, cm));

        var that = _this13;

        var _pri40 = pri(that, {
            KEY: appName,
            ni: new NiTemplateManager(relcm, appName),
            lstCmd2: {}
        }),
            _ = _pri40._,
            __ = _pri40.__;

        var _addCommand = __.addCommand;
        var _execute = __.execute; //todo 可能可以实现覆盖!
        __.addCommand = function (name, params) {
            var _pri41 = pri(that),
                _ = _pri41._,
                __ = _pri41.__;

            var index = __.lstCmd.length;
            _addCommand.apply(_, [name, params]);
            var cmd = __.lstCmd[__.lstCmd.length - 1];
            if (cmd.template) {
                //调用templdate优先 复用其次
                __.lstCmd2[__.lstCmd.length - 1] = true;
            }
        };
        __.execute = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee27() {
            var _pri42, _, __, _cms, _cm2, i;

            return _regenerator2.default.wrap(function _callee27$(_context27) {
                while (1) {
                    switch (_context27.prev = _context27.next) {
                        case 0:
                            _pri42 = pri(that), _ = _pri42._, __ = _pri42.__;
                            _cms = __.lstCmd, _cm2 = __.lstCmd2;

                            __.lstCmd = [], __.lstCmd2 = {};

                            if (!_.transaction) {
                                _context27.next = 5;
                                break;
                            }

                            throw new Error('NiMultiTemplateDecorator不支持事务，容易发生内容错位');

                        case 5:
                            if (!(_cms.length > 0)) {
                                _context27.next = 11;
                                break;
                            }

                            i = 0;
                            _context27.next = 9;
                            return _tool2.default.each(_cms, function () {
                                var _ref27 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee26(v) {
                                    var _nicmd, result, conn, cmd, data;

                                    return _regenerator2.default.wrap(function _callee26$(_context26) {
                                        while (1) {
                                            switch (_context26.prev = _context26.next) {
                                                case 0:
                                                    _nicmd = _cm2[i++];

                                                    if (!_nicmd) {
                                                        _context26.next = 8;
                                                        break;
                                                    }

                                                    _context26.next = 4;
                                                    return __.ni.execute(v.template, v.key, v.params);

                                                case 4:
                                                    result = _context26.sent;

                                                    __.result.add(result && result.get(v.key) ? result.get(v.key) : [], v.key);
                                                    _context26.next = 25;
                                                    break;

                                                case 8:
                                                    _context26.next = 10;
                                                    return __.res.getDBConnection();

                                                case 10:
                                                    conn = _context26.sent;
                                                    _context26.prev = 11;
                                                    cmd = __.res.getDBCommand();

                                                    cmd.connection = conn;
                                                    cmd.command = v.name;
                                                    cmd.params = v.params;
                                                    cmd.dbtype = v.dbtype;
                                                    cmd.jsonp = v.jsonp;
                                                    _context26.next = 20;
                                                    return cmd.execute();

                                                case 20:
                                                    data = _context26.sent;

                                                    __.result.add(typeof data == 'undefined' || _tool2.default.isArray(data) && data.length == 0 ? false : data, v.key);

                                                case 22:
                                                    _context26.prev = 22;

                                                    __.res.backDBConnection(conn);
                                                    return _context26.finish(22);

                                                case 25:
                                                    return _context26.abrupt('return', false);

                                                case 26:
                                                case 'end':
                                                    return _context26.stop();
                                            }
                                        }
                                    }, _callee26, _this14, [[11,, 22, 25]]);
                                }));

                                return function (_x26) {
                                    return _ref27.apply(this, arguments);
                                };
                            }(), true);

                        case 9:
                            _context27.next = 12;
                            break;

                        case 11:
                            _tool2.default.showException('不能调用空的命令对象!');

                        case 12:
                            return _context27.abrupt('return', __.result);

                        case 13:
                        case 'end':
                            return _context27.stop();
                    }
                }
            }, _callee27, _this14);
        }));
        __.excute = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee28() {
            return _regenerator2.default.wrap(function _callee28$(_context28) {
                while (1) {
                    switch (_context28.prev = _context28.next) {
                        case 0:
                            _context28.next = 2;
                            return __.execute();

                        case 2:
                            return _context28.abrupt('return', _context28.sent);

                        case 3:
                        case 'end':
                            return _context28.stop();
                    }
                }
            }, _callee28, _this14);
        }));
        return _this13;
    }

    (0, _createClass3.default)(NiMultiTemplateDecorator, [{
        key: 'dispose',
        value: function dispose() {
            var _pri43 = pri(this),
                __ = _pri43.__;

            __.ni.dispose();
            (0, _get3.default)(NiMultiTemplateDecorator.prototype.__proto__ || (0, _getPrototypeOf2.default)(NiMultiTemplateDecorator.prototype), 'dispose', this).call(this);
        }
    }]);
    return NiMultiTemplateDecorator;
}(NiTemplate);
/**
 * MySQL 池连接方式工厂
 */
var NiMySQLDataFactory = exports.NiMySQLDataFactory = function (_NiDataFactory) {
    (0, _inherits3.default)(NiMySQLDataFactory, _NiDataFactory);

    function NiMySQLDataFactory() {
        (0, _classCallCheck3.default)(this, NiMySQLDataFactory);

        var _this15 = (0, _possibleConstructorReturn3.default)(this, (NiMySQLDataFactory.__proto__ || (0, _getPrototypeOf2.default)(NiMySQLDataFactory)).call(this));

        var that = _this15;
        that.idic = {};

        var _pri44 = pri(that, {
            MySQLConnection: function (_NiDataConnection) {
                (0, _inherits3.default)(MySQLConnection, _NiDataConnection);

                function MySQLConnection() {
                    var _this17 = this;

                    (0, _classCallCheck3.default)(this, MySQLConnection);

                    var _this16 = (0, _possibleConstructorReturn3.default)(this, (MySQLConnection.__proto__ || (0, _getPrototypeOf2.default)(MySQLConnection)).call(this));

                    var that = _this16;

                    var _pri45 = pri(_this16, {
                        cmds: [],
                        conn: null,
                        getValue: function getValue(p) {
                            return p.value;
                        },
                        toList: function toList(vals) {
                            var _pri46 = pri(that),
                                _ = _pri46._,
                                __ = _pri46.__;

                            if (vals[0]) {
                                var ret = [];
                                for (var i = 0; i < vals.length; i++) {
                                    ret.push(__.toList(vals[i]));
                                }return ret;
                            } else return function () {
                                var ret = {};
                                for (var k in vals) {
                                    switch (_tool2.default.getType(vals[k])) {
                                        case 'Date':
                                        case 'number':
                                        case 'boolean':
                                        case 'string':
                                        case 'null':
                                            ret[k] = vals[k];
                                            break;
                                    }
                                }
                                return ret;
                            }();
                        },
                        invoke: function () {
                            var _ref29 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee29(command, params) {
                                var _pri47, _2, _3, result, data, i;

                                return _regenerator2.default.wrap(function _callee29$(_context29) {
                                    while (1) {
                                        switch (_context29.prev = _context29.next) {
                                            case 0:
                                                _context29.prev = 0;
                                                _pri47 = pri(that), _2 = _pri47._, _3 = _pri47.__;
                                                _context29.next = 4;
                                                return _tool2.default.callback(_3.conn.query, _3.conn, _2.prepare(command, params));

                                            case 4:
                                                result = _context29.sent;
                                                data = [];

                                                if (!result[0]) result = [[]];
                                                //过滤mysql自定义的更新结果JSON
                                                result = result.filter(function (v) {
                                                    return v.serverStatus == undefined;
                                                });

                                                //过滤mysql上复制:=
                                                result = result.filter(function (v) {
                                                    switch (_tool2.default.getType(v)) {
                                                        case 'object':
                                                        case 'Object':
                                                            for (var k in v) {
                                                                if (k.indexOf(':=') >= 0) return false;
                                                            }
                                                            break;
                                                        case 'Array':
                                                            var _v = v.filter(function (r) {
                                                                for (var k2 in r) {
                                                                    if (k2.indexOf(':=') >= 0) return false;
                                                                }
                                                                return true;
                                                            });
                                                            return _v.length > 0 || v.length == 0;
                                                    }
                                                    return true;
                                                });
                                                if (!result[0]) result = [[]];
                                                if (_tool2.default.getType(result[0]).toLowerCase() != 'array') result = [result];
                                                //自动补充mysql在单sql下不是2个嵌套数据的问题
                                                if (result && result.length > 0) for (i = 0; i < result.length; i++) {
                                                    if (typeof result[i] != 'undefined' && result[i].length > 0) data.push(_3.toList(result[i]));else if (typeof result[i] != 'undefined' && !_tool2.default.isArray(result[i])) {
                                                        //if (typeof(result[i].affectedRows) == 'undefined') {
                                                        data.push(_3.toList([result[i]]));
                                                    } else {
                                                        data.push([]);
                                                    }
                                                } else data.push([]);
                                                return _context29.abrupt('return', data);

                                            case 15:
                                                _context29.prev = 15;
                                                _context29.t0 = _context29['catch'](0);

                                                console.log(command, params);
                                                console.log(_context29.t0.message);
                                                throw _context29.t0;

                                            case 20:
                                            case 'end':
                                                return _context29.stop();
                                        }
                                    }
                                }, _callee29, _this17, [[0, 15]]);
                            }));

                            return function invoke(_x27, _x28) {
                                return _ref29.apply(this, arguments);
                            };
                        }()
                    }),
                        _ = _pri45._,
                        __ = _pri45.__;

                    _.params = {
                        multipleStatements: true,
                        connectionLimit: 10
                    };
                    return _this16;
                }

                (0, _createClass3.default)(MySQLConnection, [{
                    key: 'prepare',
                    value: function prepare(cmd, paras) {
                        var _pri48 = pri(this),
                            _ = _pri48._,
                            __ = _pri48.__;
                        //需要将{}转成[] 处理


                        if (cmd && paras) {
                            var vals = [];
                            cmd = cmd.replace(/\?[a-zA-Z0-9_]+/g, function (data) {
                                try {
                                    vals.push(__.getValue(paras[data.trim('?')]));
                                    return '?';
                                } catch (e) {
                                    throw data.trim('?') + '未找到参数定义';
                                }
                            });
                            return {
                                sql: cmd,
                                values: vals,
                                timeout: _.params.timeout || 60000 //1分钟
                            };
                        } else throw new Error('prepare方法要求写入command参数与paras参数');
                    }
                }, {
                    key: 'invoke',
                    value: function () {
                        var _ref30 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee30(cmd) {
                            var _pri49, _, __;

                            return _regenerator2.default.wrap(function _callee30$(_context30) {
                                while (1) {
                                    switch (_context30.prev = _context30.next) {
                                        case 0:
                                            //需要处理单条与多条s
                                            _pri49 = pri(this), _ = _pri49._, __ = _pri49.__;

                                            if (!_.transaction) {
                                                _context30.next = 5;
                                                break;
                                            }

                                            __.cmds.push({
                                                command: cmd.command,
                                                params: cmd.params
                                            });
                                            _context30.next = 8;
                                            break;

                                        case 5:
                                            _context30.next = 7;
                                            return __.invoke(cmd.command, cmd.params);

                                        case 7:
                                            return _context30.abrupt('return', _context30.sent);

                                        case 8:
                                        case 'end':
                                            return _context30.stop();
                                    }
                                }
                            }, _callee30, this);
                        }));

                        function invoke(_x29) {
                            return _ref30.apply(this, arguments);
                        }

                        return invoke;
                    }()
                }, {
                    key: 'commit',
                    value: function () {
                        var _ref31 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee32() {
                            var _this18 = this;

                            var _pri50, _, __, data, cmds;

                            return _regenerator2.default.wrap(function _callee32$(_context32) {
                                while (1) {
                                    switch (_context32.prev = _context32.next) {
                                        case 0:
                                            _pri50 = pri(this), _ = _pri50._, __ = _pri50.__;

                                            if (!_.transaction) {
                                                _context32.next = 22;
                                                break;
                                            }

                                            _context32.prev = 2;
                                            _context32.next = 5;
                                            return _tool2.default.callback(__.conn.beginTransaction, __.conn);

                                        case 5:
                                            data = [];
                                            cmds = __.cmds;

                                            __.cmds = [];
                                            _context32.next = 10;
                                            return _tool2.default.each(cmds, function () {
                                                var _ref32 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee31(v) {
                                                    return _regenerator2.default.wrap(function _callee31$(_context31) {
                                                        while (1) {
                                                            switch (_context31.prev = _context31.next) {
                                                                case 0:
                                                                    _context31.t0 = data;
                                                                    _context31.next = 3;
                                                                    return __.invoke(v.command, v.params);

                                                                case 3:
                                                                    _context31.t1 = _context31.sent;

                                                                    _context31.t0.push.call(_context31.t0, _context31.t1);

                                                                    return _context31.abrupt('return', false);

                                                                case 6:
                                                                case 'end':
                                                                    return _context31.stop();
                                                            }
                                                        }
                                                    }, _callee31, _this18);
                                                }));

                                                return function (_x30) {
                                                    return _ref32.apply(this, arguments);
                                                };
                                            }(), true);

                                        case 10:
                                            _context32.next = 12;
                                            return _tool2.default.callback(__.conn.commit, __.conn);

                                        case 12:
                                            return _context32.abrupt('return', data);

                                        case 15:
                                            _context32.prev = 15;
                                            _context32.t0 = _context32['catch'](2);
                                            _context32.next = 19;
                                            return _tool2.default.callback(__.conn.rollback, __.conn);

                                        case 19:
                                            throw _context32.t0;

                                        case 20:
                                            _context32.next = 23;
                                            break;

                                        case 22:
                                            throw new Error('非事务条件下不可调用此方法');

                                        case 23:
                                        case 'end':
                                            return _context32.stop();
                                    }
                                }
                            }, _callee32, this, [[2, 15]]);
                        }));

                        function commit() {
                            return _ref31.apply(this, arguments);
                        }

                        return commit;
                    }()
                }, {
                    key: 'open',
                    value: function () {
                        var _ref33 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee35() {
                            var _pri51, _, __, key, getonconn;

                            return _regenerator2.default.wrap(function _callee35$(_context35) {
                                while (1) {
                                    switch (_context35.prev = _context35.next) {
                                        case 0:
                                            _pri51 = pri(this), _ = _pri51._, __ = _pri51.__;
                                            key = _tool2.default.hash2(_tool2.default.toJsonString(_.params));

                                            that.idic[key] = that.idic[key] || _mysql2.default.createPool(_.params);

                                            getonconn = function () {
                                                var _ref34 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee34() {
                                                    var conn;
                                                    return _regenerator2.default.wrap(function _callee34$(_context34) {
                                                        while (1) {
                                                            switch (_context34.prev = _context34.next) {
                                                                case 0:
                                                                    _context34.next = 2;
                                                                    return _tool2.default.callback(that.idic[key].getConnection, that.idic[key]);

                                                                case 2:
                                                                    conn = _context34.sent;

                                                                    conn._key = key;
                                                                    if (!!!conn._ison) {
                                                                        conn._ison = true;
                                                                        conn.on('error', function () {
                                                                            var _ref35 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee33(err) {
                                                                                return _regenerator2.default.wrap(function _callee33$(_context33) {
                                                                                    while (1) {
                                                                                        switch (_context33.prev = _context33.next) {
                                                                                            case 0:
                                                                                                if (!(err.code == 'PROTOCOL_CONNECTION_LOST' || err.code == 'PROTOCOL_ENQUEUE_AFTER_FATAL_ERROR')) {
                                                                                                    _context33.next = 5;
                                                                                                    break;
                                                                                                }

                                                                                                try {
                                                                                                    //conn.close();
                                                                                                    that.idic[key] && that.idic[key].releaseConnection(conn);
                                                                                                } catch (e) {}
                                                                                                _context33.next = 4;
                                                                                                return getonconn();

                                                                                            case 4:
                                                                                                __.conn = _context33.sent;

                                                                                            case 5:
                                                                                            case 'end':
                                                                                                return _context33.stop();
                                                                                        }
                                                                                    }
                                                                                }, _callee33, this);
                                                                            }));

                                                                            return function (_x31) {
                                                                                return _ref35.apply(this, arguments);
                                                                            };
                                                                        }());
                                                                    }

                                                                    return _context34.abrupt('return', conn);

                                                                case 6:
                                                                case 'end':
                                                                    return _context34.stop();
                                                            }
                                                        }
                                                    }, _callee34, this);
                                                }));

                                                return function getonconn() {
                                                    return _ref34.apply(this, arguments);
                                                };
                                            }();

                                            _context35.next = 6;
                                            return getonconn();

                                        case 6:
                                            __.conn = _context35.sent;
                                            _context35.next = 9;
                                            return (0, _get3.default)(MySQLConnection.prototype.__proto__ || (0, _getPrototypeOf2.default)(MySQLConnection.prototype), 'open', this).call(this);

                                        case 9:
                                        case 'end':
                                            return _context35.stop();
                                    }
                                }
                            }, _callee35, this);
                        }));

                        function open() {
                            return _ref33.apply(this, arguments);
                        }

                        return open;
                    }()
                }, {
                    key: 'close',
                    value: function () {
                        var _ref36 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee36() {
                            var _pri52, _, __;

                            return _regenerator2.default.wrap(function _callee36$(_context36) {
                                while (1) {
                                    switch (_context36.prev = _context36.next) {
                                        case 0:
                                            _pri52 = pri(this), _ = _pri52._, __ = _pri52.__;

                                            try {
                                                if (__.conn && __.conn._key && that.idic[__.conn._key]) that.idic[__.conn._key].releaseConnection(__.conn);else if (__.conn && __.conn.end) __.conn.end();else if (__.conn && __.conn.dispose) __.conn.dispose();
                                            } catch (e) {}
                                            __.cmds = [];
                                            __.conn = null;
                                            _context36.next = 6;
                                            return (0, _get3.default)(MySQLConnection.prototype.__proto__ || (0, _getPrototypeOf2.default)(MySQLConnection.prototype), 'close', this).call(this);

                                        case 6:
                                        case 'end':
                                            return _context36.stop();
                                    }
                                }
                            }, _callee36, this);
                        }));

                        function close() {
                            return _ref36.apply(this, arguments);
                        }

                        return close;
                    }()
                }]);
                return MySQLConnection;
            }(NiDataConnection)
        }),
            _ = _pri44._,
            __ = _pri44.__;

        return _this15;
    }

    (0, _createClass3.default)(NiMySQLDataFactory, [{
        key: 'createDBConnection',
        value: function createDBConnection() {
            var _pri53 = pri(this),
                _ = _pri53._,
                __ = _pri53.__;

            return new __.MySQLConnection();
        }
    }, {
        key: 'dispose',
        value: function dispose() {
            var _this19 = this;

            for (var i in this.idic) {
                if (this.idic[i] && this.idic[i].dispose) {
                    (function () {
                        var v = _this19.idic[i];
                        _tool2.default.tryC(function () {
                            v.dispose();
                        });
                    })();
                }
            }
        }
    }]);
    return NiMySQLDataFactory;
}(NiDataFactory);

/*
默认类型转换
String -> sql.NVarChar
Number -> sql.Int
Boolean -> sql.Bit
Date -> sql.DateTime
Buffer -> sql.VarBinary
sql.Table -> sql.TVP
特别定义 param length 和 scale属性 分别对应 长度和精度（仅限Decimal和Numberic）
 */
var NiMsSQLDataFactory = exports.NiMsSQLDataFactory = function (_NiDataFactory2) {
    (0, _inherits3.default)(NiMsSQLDataFactory, _NiDataFactory2);

    function NiMsSQLDataFactory() {
        (0, _classCallCheck3.default)(this, NiMsSQLDataFactory);

        var _this20 = (0, _possibleConstructorReturn3.default)(this, (NiMsSQLDataFactory.__proto__ || (0, _getPrototypeOf2.default)(NiMsSQLDataFactory)).call(this));

        var that = _this20;
        that.idic = {};

        var _pri54 = pri(that, {
            MsSQLConnection: function (_NiDataConnection2) {
                (0, _inherits3.default)(MsSQLConnection, _NiDataConnection2);

                function MsSQLConnection() {
                    var _this22 = this;

                    (0, _classCallCheck3.default)(this, MsSQLConnection);

                    var _this21 = (0, _possibleConstructorReturn3.default)(this, (MsSQLConnection.__proto__ || (0, _getPrototypeOf2.default)(MsSQLConnection)).call(this));

                    var that = _this21;

                    var _pri55 = pri(_this21, {
                        cmds: [],
                        conn: null,
                        invoke: function () {
                            var _ref37 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee37(source, command, params) {
                                var _pri56, _4, _5, request, i, type, result, affected, _ref38, _ref39, data, _i2;

                                return _regenerator2.default.wrap(function _callee37$(_context37) {
                                    while (1) {
                                        switch (_context37.prev = _context37.next) {
                                            case 0:
                                                _context37.prev = 0;
                                                _pri56 = pri(that), _4 = _pri56._, _5 = _pri56.__;
                                                request = new _mssql2.default.Request(source);

                                                request.multiple = true;
                                                _context37.t0 = _regenerator2.default.keys(params);

                                            case 5:
                                                if ((_context37.t1 = _context37.t0()).done) {
                                                    _context37.next = 21;
                                                    break;
                                                }

                                                i = _context37.t1.value;

                                                //ni params 应该有 name:{type:'',value:''} or name:string ni定义未必支持
                                                type = _mssql2.default[_tool2.default.getValue(params[i].type, 'NVarChar')] || _mssql2.default.NVarChar;

                                                if (!params[i].out) {
                                                    _context37.next = 12;
                                                    break;
                                                }

                                                request.output(i, (params[i].length || 0) > 0 ? type(params[i].length) : type, params[i].value);
                                                _context37.next = 19;
                                                break;

                                            case 12:
                                                _context37.t2 = (params[i].type + '').toLowerCase();
                                                _context37.next = _context37.t2 === 'decimal' ? 15 : _context37.t2 === 'numeric' ? 15 : 17;
                                                break;

                                            case 15:
                                                request.input(i, type(params[i].length || 10, params[i].scale || 2), params[i].value);
                                                return _context37.abrupt('break', 19);

                                            case 17:
                                                request.input(i, (params[i].length || 0) > 0 ? type(params[i].length) : type, params[i].value);
                                                return _context37.abrupt('break', 19);

                                            case 19:
                                                _context37.next = 5;
                                                break;

                                            case 21:
                                                result = null, affected = 0;
                                                //await V.callback(request.prepare, request, command);

                                                _context37.next = 24;
                                                return _tool2.default.callback(function (call) {
                                                    if (command.indexOf(' ') >= 0) request.query(command, function (err, result) {
                                                        return call(err, [result, err ? 0 : result.rowsAffected]);
                                                    });else request.execute(command, function (err, result) {
                                                        return call(err, [result, err ? 0 : result.rowsAffected]);
                                                    });
                                                });

                                            case 24:
                                                _ref38 = _context37.sent;
                                                _ref39 = (0, _slicedToArray3.default)(_ref38, 2);
                                                result = _ref39[0];
                                                affected = _ref39[1];


                                                //await V.callback(request.unprepare, request);
                                                data = [];
                                                //特别注意单行的处理，可能会导致单行无数据

                                                if (result.recordsets && result.recordsets.length > 0) for (_i2 = 0; _i2 < result.recordsets.length; _i2++) {
                                                    if (result.recordsets[_i2] && result.recordsets[_i2].length > 0) data.push(result.recordsets[_i2]);else data.push(affected[_i2] ? [{
                                                        affected: affected[_i2]
                                                    }] : []);
                                                } else data.push(affected && affected[0] ? [{
                                                    affected: affected[0]
                                                }] : []);
                                                return _context37.abrupt('return', data);

                                            case 33:
                                                _context37.prev = 33;
                                                _context37.t3 = _context37['catch'](0);

                                                console.log(command, params);
                                                console.log(_context37.t3.message);
                                                throw _context37.t3;

                                            case 38:
                                            case 'end':
                                                return _context37.stop();
                                        }
                                    }
                                }, _callee37, _this22, [[0, 33]]);
                            }));

                            return function invoke(_x32, _x33, _x34) {
                                return _ref37.apply(this, arguments);
                            };
                        }()
                    }),
                        _ = _pri55._,
                        __ = _pri55.__;

                    _.params = {
                        connectionLimit: 10,
                        timeout: 60000
                    };
                    return _this21;
                }

                (0, _createClass3.default)(MsSQLConnection, [{
                    key: 'invoke',
                    value: function () {
                        var _ref40 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee38(cmd) {
                            var _pri57, _, __;

                            return _regenerator2.default.wrap(function _callee38$(_context38) {
                                while (1) {
                                    switch (_context38.prev = _context38.next) {
                                        case 0:
                                            _pri57 = pri(this), _ = _pri57._, __ = _pri57.__;

                                            if (!_.transaction) {
                                                _context38.next = 5;
                                                break;
                                            }

                                            __.cmds.push({
                                                command: cmd.command,
                                                params: cmd.params
                                            });
                                            _context38.next = 8;
                                            break;

                                        case 5:
                                            _context38.next = 7;
                                            return __.invoke(__.conn, cmd.command, cmd.params);

                                        case 7:
                                            return _context38.abrupt('return', _context38.sent);

                                        case 8:
                                        case 'end':
                                            return _context38.stop();
                                    }
                                }
                            }, _callee38, this);
                        }));

                        function invoke(_x35) {
                            return _ref40.apply(this, arguments);
                        }

                        return invoke;
                    }()
                }, {
                    key: 'commit',
                    value: function () {
                        var _ref41 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee40() {
                            var _this23 = this;

                            var _pri58, _, __, trans, data, cmds;

                            return _regenerator2.default.wrap(function _callee40$(_context40) {
                                while (1) {
                                    switch (_context40.prev = _context40.next) {
                                        case 0:
                                            _pri58 = pri(this), _ = _pri58._, __ = _pri58.__;

                                            if (!_.transaction) {
                                                _context40.next = 23;
                                                break;
                                            }

                                            //事务性处理
                                            trans = new _mssql2.default.Transaction(__.conn);
                                            _context40.prev = 3;
                                            _context40.next = 6;
                                            return _tool2.default.callback(trans.begin, trans);

                                        case 6:
                                            data = [];
                                            cmds = __.cmds;

                                            __.cmds = [];
                                            _context40.next = 11;
                                            return _tool2.default.each(cmds, function () {
                                                var _ref42 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee39(v) {
                                                    return _regenerator2.default.wrap(function _callee39$(_context39) {
                                                        while (1) {
                                                            switch (_context39.prev = _context39.next) {
                                                                case 0:
                                                                    _context39.t0 = data;
                                                                    _context39.next = 3;
                                                                    return __.invoke(trans, v.command, v.params);

                                                                case 3:
                                                                    _context39.t1 = _context39.sent;

                                                                    _context39.t0.push.call(_context39.t0, _context39.t1);

                                                                    return _context39.abrupt('return', false);

                                                                case 6:
                                                                case 'end':
                                                                    return _context39.stop();
                                                            }
                                                        }
                                                    }, _callee39, _this23);
                                                }));

                                                return function (_x36) {
                                                    return _ref42.apply(this, arguments);
                                                };
                                            }(), true);

                                        case 11:
                                            _context40.next = 13;
                                            return _tool2.default.callback(trans.commit, trans);

                                        case 13:
                                            return _context40.abrupt('return', data);

                                        case 16:
                                            _context40.prev = 16;
                                            _context40.t0 = _context40['catch'](3);
                                            _context40.next = 20;
                                            return _tool2.default.callback(trans.rollback, trans);

                                        case 20:
                                            throw _context40.t0;

                                        case 21:
                                            _context40.next = 24;
                                            break;

                                        case 23:
                                            throw new Error('非事务条件下不可调用此方法');

                                        case 24:
                                        case 'end':
                                            return _context40.stop();
                                    }
                                }
                            }, _callee40, this, [[3, 16]]);
                        }));

                        function commit() {
                            return _ref41.apply(this, arguments);
                        }

                        return commit;
                    }()
                }, {
                    key: 'open',
                    value: function () {
                        var _ref43 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee41() {
                            var _pri59, _, __, key, func;

                            return _regenerator2.default.wrap(function _callee41$(_context41) {
                                while (1) {
                                    switch (_context41.prev = _context41.next) {
                                        case 0:
                                            _pri59 = pri(this), _ = _pri59._, __ = _pri59.__;
                                            key = _tool2.default.hash2(_tool2.default.toJsonString(_.params));

                                            func = function func() {
                                                var conn = new _mssql2.default.ConnectionPool(_.params);
                                                conn.on('error', function (err) {
                                                    console.log('GCL mssql error:' + err.stack);
                                                    __.conn = func();
                                                });
                                                return conn;
                                            };

                                            __.conn = func();
                                            _context41.next = 6;
                                            return _tool2.default.callback(__.conn.connect, __.conn);

                                        case 6:
                                            _context41.next = 8;
                                            return (0, _get3.default)(MsSQLConnection.prototype.__proto__ || (0, _getPrototypeOf2.default)(MsSQLConnection.prototype), 'open', this).call(this);

                                        case 8:
                                        case 'end':
                                            return _context41.stop();
                                    }
                                }
                            }, _callee41, this);
                        }));

                        function open() {
                            return _ref43.apply(this, arguments);
                        }

                        return open;
                    }()
                }, {
                    key: 'close',
                    value: function () {
                        var _ref44 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee42() {
                            var _pri60, _, __;

                            return _regenerator2.default.wrap(function _callee42$(_context42) {
                                while (1) {
                                    switch (_context42.prev = _context42.next) {
                                        case 0:
                                            _pri60 = pri(this), _ = _pri60._, __ = _pri60.__;

                                            try {
                                                if (__.conn && __.conn.close) __.conn.close();else if (__.conn && __.conn.end) __.conn.end();else if (__.conn && __.conn.dispose) __.conn.dispose();
                                            } catch (e) {} finally {
                                                //const key = V.hash2(V.toJsonString(_.params));
                                                //delete that.idic[key];
                                            }
                                            __.cmds = [];
                                            __.conn = null;
                                            _context42.next = 6;
                                            return (0, _get3.default)(MsSQLConnection.prototype.__proto__ || (0, _getPrototypeOf2.default)(MsSQLConnection.prototype), 'close', this).call(this);

                                        case 6:
                                        case 'end':
                                            return _context42.stop();
                                    }
                                }
                            }, _callee42, this);
                        }));

                        function close() {
                            return _ref44.apply(this, arguments);
                        }

                        return close;
                    }()
                }]);
                return MsSQLConnection;
            }(NiDataConnection)
        }),
            _ = _pri54._,
            __ = _pri54.__;

        return _this20;
    }

    (0, _createClass3.default)(NiMsSQLDataFactory, [{
        key: 'createDBConnection',
        value: function createDBConnection() {
            var _pri61 = pri(this),
                _ = _pri61._,
                __ = _pri61.__;

            return new __.MsSQLConnection();
        }
    }, {
        key: 'dispose',
        value: function dispose() {
            var _this24 = this;

            for (var i in this.idic) {
                if (this.idic[i] && this.idic[i].close) {
                    (function () {
                        var v = _this24.idic[i];
                        _tool2.default.tryC(function () {
                            v.close();
                        });
                        delete _this24.idic[i];
                    })();
                }
            }
        }
    }]);
    return NiMsSQLDataFactory;
}(NiDataFactory);

/**
 * 分离NiDBFactory产生NiDBConnection(Invoke) mysql,sqlserver,memcache,mongo websocket ObjectDB等各种资源
 */
var NiObjectDataFactory = exports.NiObjectDataFactory = function (_NiDataFactory3) {
    (0, _inherits3.default)(NiObjectDataFactory, _NiDataFactory3);

    function NiObjectDataFactory() {
        var middler = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
        (0, _classCallCheck3.default)(this, NiObjectDataFactory);

        var _this25 = (0, _possibleConstructorReturn3.default)(this, (NiObjectDataFactory.__proto__ || (0, _getPrototypeOf2.default)(NiObjectDataFactory)).call(this));

        if (!_tool2.default.isValid(middler)) throw new Error('参数的定义必须要输入middler参数');
        var that = _this25;

        var _pri62 = pri(that, {
            middler: middler,
            ObjectConnection: function (_NiDataConnection3) {
                (0, _inherits3.default)(ObjectConnection, _NiDataConnection3);

                function ObjectConnection() {
                    var _this27 = this;

                    (0, _classCallCheck3.default)(this, ObjectConnection);

                    var _this26 = (0, _possibleConstructorReturn3.default)(this, (ObjectConnection.__proto__ || (0, _getPrototypeOf2.default)(ObjectConnection)).call(this));

                    var _pri63 = pri(_this26, {
                        cmds: [],
                        invoke: function () {
                            var _ref45 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee43(command, params) {
                                var paras, k, _v3;

                                return _regenerator2.default.wrap(function _callee43$(_context43) {
                                    while (1) {
                                        switch (_context43.prev = _context43.next) {
                                            case 0:
                                                _context43.prev = 0;

                                                command = command.trim();

                                                if (!(typeof __.obj[command] == 'function')) {
                                                    _context43.next = 14;
                                                    break;
                                                }

                                                paras = [];

                                                for (k in params) {
                                                    _v3 = params[k];

                                                    paras.push(_v3.value);
                                                };
                                                _context43.next = 8;
                                                return _tool2.default.callback2.apply(_tool2.default, [__.obj[command], __.obj].concat(paras));

                                            case 8:
                                                _context43.t0 = _context43.sent;

                                                if (_context43.t0) {
                                                    _context43.next = 11;
                                                    break;
                                                }

                                                _context43.t0 = true;

                                            case 11:
                                                return _context43.abrupt('return', _context43.t0);

                                            case 14:
                                                throw new Error(command + '方法没有在对象源上找到');

                                            case 15:
                                                _context43.next = 22;
                                                break;

                                            case 17:
                                                _context43.prev = 17;
                                                _context43.t1 = _context43['catch'](0);

                                                console.log(command, params);
                                                console.log(_context43.t1.message);
                                                throw _context43.t1;

                                            case 22:
                                            case 'end':
                                                return _context43.stop();
                                        }
                                    }
                                }, _callee43, _this27, [[0, 17]]);
                            }));

                            return function invoke(_x38, _x39) {
                                return _ref45.apply(this, arguments);
                            };
                        }()
                    }),
                        _ = _pri63._,
                        __ = _pri63.__;

                    _.params = {
                        app: 'Ni',
                        name: ''
                    };
                    return _this26;
                }

                (0, _createClass3.default)(ObjectConnection, [{
                    key: 'open',
                    value: function () {
                        var _ref46 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee44() {
                            var _pri64, _, __;

                            return _regenerator2.default.wrap(function _callee44$(_context44) {
                                while (1) {
                                    switch (_context44.prev = _context44.next) {
                                        case 0:
                                            _pri64 = pri(this), _ = _pri64._, __ = _pri64.__;

                                            if (!_tool2.default.isValid(_.params.name)) {
                                                _context44.next = 7;
                                                break;
                                            }

                                            //证明可用
                                            __.obj = middler.getObjectByAppName(_.params.app, _.params.name);

                                            if (__.obj) {
                                                _context44.next = 5;
                                                break;
                                            }

                                            throw new Error('N.NiObjectDataFactory \u65E0\u6CD5\u521B\u5EFA<' + _.params.app + '/' + _.params.name + '>\u5BF9\u8C61');

                                        case 5:
                                            _context44.next = 8;
                                            break;

                                        case 7:
                                            throw new Error('N.NiObjectDataFactory \u65E0\u6CD5\u627E\u5230<\'' + _.params.app + '/' + _.params.name + '>\u5BF9\u8C61');

                                        case 8:
                                            _context44.next = 10;
                                            return (0, _get3.default)(ObjectConnection.prototype.__proto__ || (0, _getPrototypeOf2.default)(ObjectConnection.prototype), 'open', this).call(this);

                                        case 10:
                                        case 'end':
                                            return _context44.stop();
                                    }
                                }
                            }, _callee44, this);
                        }));

                        function open() {
                            return _ref46.apply(this, arguments);
                        }

                        return open;
                    }()
                }, {
                    key: 'close',
                    value: function () {
                        var _ref47 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee45() {
                            var _pri65, _, __;

                            return _regenerator2.default.wrap(function _callee45$(_context45) {
                                while (1) {
                                    switch (_context45.prev = _context45.next) {
                                        case 0:
                                            _pri65 = pri(this), _ = _pri65._, __ = _pri65.__;

                                            if (__.obj) {
                                                middler.setObjectByAppName(_.params.app, _.params.name, __.obj);
                                                delete __.obj;
                                            }
                                            _context45.next = 4;
                                            return (0, _get3.default)(ObjectConnection.prototype.__proto__ || (0, _getPrototypeOf2.default)(ObjectConnection.prototype), 'close', this).call(this);

                                        case 4:
                                        case 'end':
                                            return _context45.stop();
                                    }
                                }
                            }, _callee45, this);
                        }));

                        function close() {
                            return _ref47.apply(this, arguments);
                        }

                        return close;
                    }()
                }, {
                    key: 'invoke',
                    value: function () {
                        var _ref48 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee46(cmd) {
                            var _pri66, _, __;

                            return _regenerator2.default.wrap(function _callee46$(_context46) {
                                while (1) {
                                    switch (_context46.prev = _context46.next) {
                                        case 0:
                                            _pri66 = pri(this), _ = _pri66._, __ = _pri66.__;

                                            if (!_.transaction) {
                                                _context46.next = 5;
                                                break;
                                            }

                                            __.cmds.push({
                                                command: cmd.command,
                                                params: cmd.params
                                            });
                                            _context46.next = 8;
                                            break;

                                        case 5:
                                            _context46.next = 7;
                                            return __.invoke(cmd.command, cmd.params);

                                        case 7:
                                            return _context46.abrupt('return', _context46.sent);

                                        case 8:
                                        case 'end':
                                            return _context46.stop();
                                    }
                                }
                            }, _callee46, this);
                        }));

                        function invoke(_x40) {
                            return _ref48.apply(this, arguments);
                        }

                        return invoke;
                    }()
                }, {
                    key: 'commit',
                    value: function () {
                        var _ref49 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee48() {
                            var _this28 = this;

                            var _pri67, _, __, data, cmds;

                            return _regenerator2.default.wrap(function _callee48$(_context48) {
                                while (1) {
                                    switch (_context48.prev = _context48.next) {
                                        case 0:
                                            _pri67 = pri(this), _ = _pri67._, __ = _pri67.__;

                                            if (!_.transaction) {
                                                _context48.next = 10;
                                                break;
                                            }

                                            //事务性处理
                                            data = [];
                                            cmds = __.cmds;

                                            __.cmds = [];
                                            _context48.next = 7;
                                            return _tool2.default.each(cmds, function () {
                                                var _ref50 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee47(v) {
                                                    return _regenerator2.default.wrap(function _callee47$(_context47) {
                                                        while (1) {
                                                            switch (_context47.prev = _context47.next) {
                                                                case 0:
                                                                    _context47.t0 = data;
                                                                    _context47.next = 3;
                                                                    return __.invoke(v.command, v.params);

                                                                case 3:
                                                                    _context47.t1 = _context47.sent;

                                                                    _context47.t0.push.call(_context47.t0, _context47.t1);

                                                                    return _context47.abrupt('return', false);

                                                                case 6:
                                                                case 'end':
                                                                    return _context47.stop();
                                                            }
                                                        }
                                                    }, _callee47, _this28);
                                                }));

                                                return function (_x41) {
                                                    return _ref50.apply(this, arguments);
                                                };
                                            }(), true);

                                        case 7:
                                            return _context48.abrupt('return', data);

                                        case 10:
                                            throw new Error('非事务条件下不可调用此方法');

                                        case 11:
                                        case 'end':
                                            return _context48.stop();
                                    }
                                }
                            }, _callee48, this);
                        }));

                        function commit() {
                            return _ref49.apply(this, arguments);
                        }

                        return commit;
                    }()
                }]);
                return ObjectConnection;
            }(NiDataConnection)
        }),
            _ = _pri62._,
            __ = _pri62.__;

        return _this25;
    }

    (0, _createClass3.default)(NiObjectDataFactory, [{
        key: 'createDBConnection',
        value: function createDBConnection() {
            var _pri68 = pri(this),
                _ = _pri68._,
                __ = _pri68.__;

            return new __.ObjectConnection();
        }
    }]);
    return NiObjectDataFactory;
}(NiDataFactory);

/**
 * MemCached
 * @param {*} parser 
 */
var NiMemSQLDataFactory = exports.NiMemSQLDataFactory = function (_NiDataFactory4) {
    (0, _inherits3.default)(NiMemSQLDataFactory, _NiDataFactory4);

    function NiMemSQLDataFactory(parser) {
        (0, _classCallCheck3.default)(this, NiMemSQLDataFactory);

        var _this29 = (0, _possibleConstructorReturn3.default)(this, (NiMemSQLDataFactory.__proto__ || (0, _getPrototypeOf2.default)(NiMemSQLDataFactory)).call(this));

        var that = _this29;

        var _pri69 = pri(that, {
            MemSQLConnection: function (_NiDataConnection4) {
                (0, _inherits3.default)(MemSQLConnection, _NiDataConnection4);

                function MemSQLConnection() {
                    var _this31 = this;

                    (0, _classCallCheck3.default)(this, MemSQLConnection);

                    var _this30 = (0, _possibleConstructorReturn3.default)(this, (MemSQLConnection.__proto__ || (0, _getPrototypeOf2.default)(MemSQLConnection)).call(this));

                    var _this = _this30;

                    var _pri70 = pri(_this30, {
                        cmds: [],
                        conn: null,
                        invoke: function () {
                            var _ref51 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee50(command, params) {
                                var _pri71, _6, _7, queryList, data;

                                return _regenerator2.default.wrap(function _callee50$(_context50) {
                                    while (1) {
                                        switch (_context50.prev = _context50.next) {
                                            case 0:
                                                _context50.prev = 0;
                                                _pri71 = pri(_this), _6 = _pri71._, _7 = _pri71.__;
                                                queryList = that.parser.parse(command, params);
                                                data = [];
                                                _context50.next = 6;
                                                return _tool2.default.each(queryList, function () {
                                                    var _ref52 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee49(v, call) {
                                                        var cacheKey, datetime, values, k, _v4, dt;

                                                        return _regenerator2.default.wrap(function _callee49$(_context49) {
                                                            while (1) {
                                                                switch (_context49.prev = _context49.next) {
                                                                    case 0:
                                                                        cacheKey = _this.getKey(v);
                                                                        _context49.t0 = v.Method.toLowerCase().trim();
                                                                        _context49.next = _context49.t0 === "select" ? 4 : _context49.t0 === "insert" ? 11 : _context49.t0 === "update" ? 11 : _context49.t0 === "delete" ? 27 : _context49.t0 === "touch" ? 31 : 36;
                                                                        break;

                                                                    case 4:
                                                                        _context49.t1 = data;
                                                                        _context49.next = 7;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return _7.conn.get(cacheKey, call);
                                                                        });

                                                                    case 7:
                                                                        _context49.t2 = _context49.sent;
                                                                        _context49.t3 = [_context49.t2];

                                                                        _context49.t1.push.call(_context49.t1, _context49.t3);

                                                                        return _context49.abrupt('break', 36);

                                                                    case 11:
                                                                        datetime = _tool2.default.getValue(_tool2.default.toJsonString(v.DateTimeParam).length > 2 ? function () {
                                                                            for (var k in v.DateTimeParam) {
                                                                                return v.DateTimeParam[k];
                                                                            }
                                                                        }() : _6.params.datetime);
                                                                        values = {};
                                                                        _context49.t4 = _regenerator2.default.keys(v.MethodParam);

                                                                    case 14:
                                                                        if ((_context49.t5 = _context49.t4()).done) {
                                                                            _context49.next = 23;
                                                                            break;
                                                                        }

                                                                        k = _context49.t5.value;
                                                                        _v4 = v.MethodParam[k];

                                                                        _v4 = typeof _v4.value === 'undefined' ? _v4 : _v4.value;
                                                                        values[k] = _v4;

                                                                        if (!(typeof _v4 === 'undefined' || _v4.type)) {
                                                                            _context49.next = 21;
                                                                            break;
                                                                        }

                                                                        throw new Error('\u53C2\u6570' + k + '\u4E0D\u80FD\u4E3Aundefined');

                                                                    case 21:
                                                                        _context49.next = 14;
                                                                        break;

                                                                    case 23:
                                                                        _context49.next = 25;
                                                                        return _tool2.default.callback(_7.conn.set, _7.conn, cacheKey, values, datetime);

                                                                    case 25:
                                                                        data.push([{
                                                                            value: 1
                                                                        }]);
                                                                        return _context49.abrupt('break', 36);

                                                                    case 27:
                                                                        _context49.next = 29;
                                                                        return _tool2.default.callback(_7.conn.del, _7.conn, cacheKey);

                                                                    case 29:
                                                                        data.push([{
                                                                            value: 1
                                                                        }]);
                                                                        return _context49.abrupt('break', 36);

                                                                    case 31:
                                                                        dt = _tool2.default.toJsonString(v.DateTimeParam).length > 2 ? function () {
                                                                            for (var _k in v.DateTimeParam) {
                                                                                return v.DateTimeParam[_k];
                                                                            }
                                                                        }() : _6.params.datetime;
                                                                        _context49.next = 34;
                                                                        return _tool2.default.callback(_7.conn.touch, _7.conn, cacheKey, dt);

                                                                    case 34:
                                                                        data.push([{
                                                                            value: 1
                                                                        }]);
                                                                        return _context49.abrupt('break', 36);

                                                                    case 36:
                                                                        return _context49.abrupt('return', false);

                                                                    case 37:
                                                                    case 'end':
                                                                        return _context49.stop();
                                                                }
                                                            }
                                                        }, _callee49, _this31);
                                                    }));

                                                    return function (_x44, _x45) {
                                                        return _ref52.apply(this, arguments);
                                                    };
                                                }(), true);

                                            case 6:
                                                return _context50.abrupt('return', data);

                                            case 9:
                                                _context50.prev = 9;
                                                _context50.t0 = _context50['catch'](0);

                                                console.log(command, params);
                                                console.log(_context50.t0.message);
                                                throw _context50.t0;

                                            case 14:
                                            case 'end':
                                                return _context50.stop();
                                        }
                                    }
                                }, _callee50, _this31, [[0, 9]]);
                            }));

                            return function invoke(_x42, _x43) {
                                return _ref51.apply(this, arguments);
                            };
                        }()
                    }),
                        _ = _pri70._,
                        __ = _pri70.__;

                    _.params = {
                        connectionLimit: 10,
                        datetime: 1000
                    };
                    return _this30;
                }

                (0, _createClass3.default)(MemSQLConnection, [{
                    key: 'getKey',
                    value: function getKey(p) {
                        var cacheKey = p.Table;
                        if (_tool2.default.toJsonString(p.IDs).length > 2) {
                            var sb = _tool2.default.sb();
                            for (var k in p.IDs) {
                                sb.append(p.IDs[k]).append('_');
                            }cacheKey += "K" + _tool2.default.hash(sb.clear().trim('_'));
                            sb = null;
                        } else if (p.Params["cacheKey"]) cacheKey += "K" + _tool2.default.hash(p.Params["cacheKey"][0], true);else throw new Error("表未定义<主键>,或者传入键值中未找到cacheKey");
                        return cacheKey;
                    }
                }, {
                    key: 'invoke',
                    value: function () {
                        var _ref53 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee51(cmd) {
                            var _pri72, _, __;

                            return _regenerator2.default.wrap(function _callee51$(_context51) {
                                while (1) {
                                    switch (_context51.prev = _context51.next) {
                                        case 0:
                                            _pri72 = pri(this), _ = _pri72._, __ = _pri72.__;

                                            if (!_.transaction) {
                                                _context51.next = 5;
                                                break;
                                            }

                                            __.cmds.push({
                                                command: cmd.command,
                                                params: cmd.params
                                            });
                                            _context51.next = 8;
                                            break;

                                        case 5:
                                            _context51.next = 7;
                                            return __.invoke(cmd.command, cmd.params);

                                        case 7:
                                            return _context51.abrupt('return', _context51.sent);

                                        case 8:
                                        case 'end':
                                            return _context51.stop();
                                    }
                                }
                            }, _callee51, this);
                        }));

                        function invoke(_x46) {
                            return _ref53.apply(this, arguments);
                        }

                        return invoke;
                    }()
                }, {
                    key: 'commit',
                    value: function () {
                        var _ref54 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee53() {
                            var _this32 = this;

                            var _pri73, _, __, data, cmds;

                            return _regenerator2.default.wrap(function _callee53$(_context53) {
                                while (1) {
                                    switch (_context53.prev = _context53.next) {
                                        case 0:
                                            _pri73 = pri(this), _ = _pri73._, __ = _pri73.__;

                                            if (!_.transaction) {
                                                _context53.next = 10;
                                                break;
                                            }

                                            //事务性处理
                                            data = [];
                                            cmds = __.cmds;

                                            __.cmds = [];
                                            _context53.next = 7;
                                            return _tool2.default.each(cmds, function () {
                                                var _ref55 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee52(v) {
                                                    return _regenerator2.default.wrap(function _callee52$(_context52) {
                                                        while (1) {
                                                            switch (_context52.prev = _context52.next) {
                                                                case 0:
                                                                    _context52.t0 = data;
                                                                    _context52.next = 3;
                                                                    return __.invoke(v.command, v.params);

                                                                case 3:
                                                                    _context52.t1 = _context52.sent;

                                                                    _context52.t0.push.call(_context52.t0, _context52.t1);

                                                                    return _context52.abrupt('return', false);

                                                                case 6:
                                                                case 'end':
                                                                    return _context52.stop();
                                                            }
                                                        }
                                                    }, _callee52, _this32);
                                                }));

                                                return function (_x47) {
                                                    return _ref55.apply(this, arguments);
                                                };
                                            }(), true);

                                        case 7:
                                            return _context53.abrupt('return', data);

                                        case 10:
                                            throw new Error('非事务条件下不可调用此方法');

                                        case 11:
                                        case 'end':
                                            return _context53.stop();
                                    }
                                }
                            }, _callee53, this);
                        }));

                        function commit() {
                            return _ref54.apply(this, arguments);
                        }

                        return commit;
                    }()
                }, {
                    key: 'open',
                    value: function () {
                        var _ref56 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee54() {
                            var _pri74, _, __;

                            return _regenerator2.default.wrap(function _callee54$(_context54) {
                                while (1) {
                                    switch (_context54.prev = _context54.next) {
                                        case 0:
                                            //https://www.npmjs.com/package/memcached#options
                                            _pri74 = pri(this), _ = _pri74._, __ = _pri74.__;

                                            __.conn = new _memcached2.default(_.params.hosts, _.params);
                                            _context54.next = 4;
                                            return (0, _get3.default)(MemSQLConnection.prototype.__proto__ || (0, _getPrototypeOf2.default)(MemSQLConnection.prototype), 'open', this).call(this);

                                        case 4:
                                        case 'end':
                                            return _context54.stop();
                                    }
                                }
                            }, _callee54, this);
                        }));

                        function open() {
                            return _ref56.apply(this, arguments);
                        }

                        return open;
                    }()
                }, {
                    key: 'close',
                    value: function () {
                        var _ref57 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee55() {
                            var _pri75, _, __;

                            return _regenerator2.default.wrap(function _callee55$(_context55) {
                                while (1) {
                                    switch (_context55.prev = _context55.next) {
                                        case 0:
                                            _pri75 = pri(this), _ = _pri75._, __ = _pri75.__;

                                            try {
                                                __.conn.end();
                                            } catch (e) {}
                                            __.cmds = [];
                                            __.conn = null;
                                            _context55.next = 6;
                                            return (0, _get3.default)(MemSQLConnection.prototype.__proto__ || (0, _getPrototypeOf2.default)(MemSQLConnection.prototype), 'close', this).call(this);

                                        case 6:
                                        case 'end':
                                            return _context55.stop();
                                    }
                                }
                            }, _callee55, this);
                        }));

                        function close() {
                            return _ref57.apply(this, arguments);
                        }

                        return close;
                    }()
                }]);
                return MemSQLConnection;
            }(NiDataConnection)
        }),
            _ = _pri69._,
            __ = _pri69.__;

        _.parser = parser;
        return _this29;
    }

    (0, _createClass3.default)(NiMemSQLDataFactory, [{
        key: 'createDBConnection',
        value: function createDBConnection() {
            var _pri76 = pri(this),
                _ = _pri76._,
                __ = _pri76.__;

            return new __.MemSQLConnection();
        }
    }, {
        key: 'backDBConnection',
        value: function backDBConnection(conn) {
            conn.close();
        }
    }]);
    return NiMemSQLDataFactory;
}(NiDataFactory);

/**
 * https://www.npmjs.com/package/memcached#options
 */
var NiMongoSQLDataFactory = exports.NiMongoSQLDataFactory = function (_NiDataFactory5) {
    (0, _inherits3.default)(NiMongoSQLDataFactory, _NiDataFactory5);

    function NiMongoSQLDataFactory(parser) {
        (0, _classCallCheck3.default)(this, NiMongoSQLDataFactory);

        var _this33 = (0, _possibleConstructorReturn3.default)(this, (NiMongoSQLDataFactory.__proto__ || (0, _getPrototypeOf2.default)(NiMongoSQLDataFactory)).call(this));

        var that = _this33;

        var _pri77 = pri(that, {
            MongoSQLConnection: function (_NiDataConnection5) {
                (0, _inherits3.default)(MongoSQLConnection, _NiDataConnection5);

                function MongoSQLConnection() {
                    var _this35 = this;

                    (0, _classCallCheck3.default)(this, MongoSQLConnection);

                    var _this34 = (0, _possibleConstructorReturn3.default)(this, (MongoSQLConnection.__proto__ || (0, _getPrototypeOf2.default)(MongoSQLConnection)).call(this));

                    var _this = _this34;

                    var _pri78 = pri(_this, {
                        cmds: [],
                        conn: null,
                        invoke: function () {
                            var _ref58 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee57(command, params) {
                                var _pri79, _8, _9, queryList, data;

                                return _regenerator2.default.wrap(function _callee57$(_context57) {
                                    while (1) {
                                        switch (_context57.prev = _context57.next) {
                                            case 0:
                                                _context57.prev = 0;
                                                _pri79 = pri(_this), _8 = _pri79._, _9 = _pri79.__;
                                                queryList = _this.parse(command, params);
                                                data = [];
                                                _context57.next = 6;
                                                return _tool2.default.each(queryList, function () {
                                                    var _ref59 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee56(v) {
                                                        var func, wheres, values, k, _v6;

                                                        return _regenerator2.default.wrap(function _callee56$(_context56) {
                                                            while (1) {
                                                                switch (_context56.prev = _context56.next) {
                                                                    case 0:
                                                                        func = function func(data, p) {
                                                                            for (var k in data) {
                                                                                var _v5 = data[k];
                                                                                if (typeof _v5.value != 'undefined' || typeof _v5._id != 'undefined') {
                                                                                    p[k] = _v5.value;
                                                                                } else {
                                                                                    p[k] = {};
                                                                                    func(_v5, p.k);
                                                                                }
                                                                            }
                                                                        };

                                                                        wheres = {};

                                                                        func(v.WhereParam, wheres);

                                                                        values = {};
                                                                        _context56.t0 = _regenerator2.default.keys(v.MethodParam);

                                                                    case 5:
                                                                        if ((_context56.t1 = _context56.t0()).done) {
                                                                            _context56.next = 14;
                                                                            break;
                                                                        }

                                                                        k = _context56.t1.value;
                                                                        _v6 = v.MethodParam[k];

                                                                        _v6 = typeof _v6.value === 'undefined' ? _v6 : _v6.value;
                                                                        values[k] = _v6;

                                                                        if (!(typeof _v6 === 'undefined' || _v6.type)) {
                                                                            _context56.next = 12;
                                                                            break;
                                                                        }

                                                                        throw new Error('\u53C2\u6570' + k + '\u4E0D\u80FD\u4E3Aundefined');

                                                                    case 12:
                                                                        _context56.next = 5;
                                                                        break;

                                                                    case 14:
                                                                        _context56.t2 = v.Method.toLowerCase().trim();
                                                                        _context56.next = _context56.t2 === "select" ? 17 : _context56.t2 === "insert" ? 23 : _context56.t2 === "update" ? 27 : _context56.t2 === "delete" ? 31 : 35;
                                                                        break;

                                                                    case 17:
                                                                        _context56.t3 = data;
                                                                        _context56.next = 20;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return _9.conn.collection(v.Table).find(wheres).toArray(call);
                                                                        });

                                                                    case 20:
                                                                        _context56.t4 = _context56.sent;

                                                                        _context56.t3.push.call(_context56.t3, _context56.t4);

                                                                        return _context56.abrupt('break', 35);

                                                                    case 23:
                                                                        _context56.next = 25;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return _9.conn.collection(v.Table).insert(values, {
                                                                                safe: true
                                                                            }, call);
                                                                        });

                                                                    case 25:
                                                                        data.push({
                                                                            value: 1
                                                                        });
                                                                        return _context56.abrupt('break', 35);

                                                                    case 27:
                                                                        _context56.next = 29;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return _9.conn.collection(v.Table).update(wheres, {
                                                                                '$set': values
                                                                            }, {
                                                                                safe: true
                                                                            }, call);
                                                                        });

                                                                    case 29:
                                                                        data.push({
                                                                            value: 1
                                                                        });
                                                                        return _context56.abrupt('break', 35);

                                                                    case 31:
                                                                        _context56.next = 33;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return _9.conn.collection(v.Table).remove(wheres, {
                                                                                safe: true
                                                                            }, call);
                                                                        });

                                                                    case 33:
                                                                        data.push({
                                                                            value: 1
                                                                        });
                                                                        return _context56.abrupt('break', 35);

                                                                    case 35:
                                                                        return _context56.abrupt('return', false);

                                                                    case 36:
                                                                    case 'end':
                                                                        return _context56.stop();
                                                                }
                                                            }
                                                        }, _callee56, _this35);
                                                    }));

                                                    return function (_x50) {
                                                        return _ref59.apply(this, arguments);
                                                    };
                                                }(), true);

                                            case 6:
                                                return _context57.abrupt('return', data);

                                            case 9:
                                                _context57.prev = 9;
                                                _context57.t0 = _context57['catch'](0);

                                                console.log(command, params);
                                                console.log(_context57.t0.message);
                                                throw _context57.t0;

                                            case 14:
                                            case 'end':
                                                return _context57.stop();
                                        }
                                    }
                                }, _callee57, _this35, [[0, 9]]);
                            }));

                            return function invoke(_x48, _x49) {
                                return _ref58.apply(this, arguments);
                            };
                        }()
                    }),
                        _ = _pri78._,
                        __ = _pri78.__;

                    _.params = {
                        connectionLimit: 10
                    };
                    return _this34;
                }

                (0, _createClass3.default)(MongoSQLConnection, [{
                    key: 'parse',
                    value: function parse(sql, params) {
                        var _ = this._,
                            __ = this.__;

                        var ret = that.parser.parse(sql, params);
                        var param = {};
                        var func = function func(data, p) {
                            for (var k in data) {
                                var _v7 = data[k];
                                if (_v7.split) {} else {
                                    p[k] = {};
                                    func(_v7, p.k);
                                };
                                switch (k.toLowerCase()) {
                                    case 'or':
                                        var _data = [];
                                        p['$or'] = _data;
                                        for (var k2 in p[k]) {
                                            var _v8 = p[k][k2];
                                            _data.push({
                                                k2: _v8
                                            });
                                        }
                                        break;
                                    case 'and':
                                        p = _tool2.default.merge(p, _v7);
                                        break;
                                    case 'in':
                                        //todo
                                        break;
                                    case '<':
                                        for (var _k2 in p[k]) {
                                            var _v9 = p[k][_k2];
                                            if (p[_k2]) {
                                                if (p[_k2].split) {} else p[_k2]['$lt'] = _v9;
                                            } else p[_k2] = {
                                                "$lt": _v9
                                            };
                                        }
                                        break;
                                    case '<=':
                                        for (var _k3 in p[k]) {
                                            var _v10 = p[k][_k3];
                                            if (p[_k3]) {
                                                if (p[_k3].split) {} else p[_k3]['$lte'] = _v10;
                                            } else p[_k3] = {
                                                "$lte": _v10
                                            };
                                        }
                                        break;
                                    case '>':
                                        for (var _k4 in p[k]) {
                                            var _v11 = p[k][_k4];
                                            if (p[_k4]) {
                                                if (p[_k4].split) {} else p[_k4]['$gt'] = _v11;
                                            } else p[_k4] = {
                                                "$gt": _v11
                                            };
                                        }
                                        break;
                                    case '>=':
                                        for (var _k5 in p[k]) {
                                            var _v12 = p[k][_k5];
                                            if (p[_k5]) {
                                                if (p[_k5].split) {} else p[_k5]['$gte'] = _v12;
                                            } else p[_k5] = {
                                                "$gte": _v12
                                            };
                                        }
                                        break;
                                }
                            }
                        };
                        func(ret.WhereParam, param);
                        return ret;
                    }
                }, {
                    key: 'invoke',
                    value: function () {
                        var _ref60 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee58(cmd) {
                            var _pri80, _, __;

                            return _regenerator2.default.wrap(function _callee58$(_context58) {
                                while (1) {
                                    switch (_context58.prev = _context58.next) {
                                        case 0:
                                            _pri80 = pri(this), _ = _pri80._, __ = _pri80.__;

                                            if (!_.transaction) {
                                                _context58.next = 5;
                                                break;
                                            }

                                            __.cmds.push({
                                                command: cmd.command,
                                                params: com.params
                                            });
                                            _context58.next = 8;
                                            break;

                                        case 5:
                                            _context58.next = 7;
                                            return __.invoke(cmd.command, cmd.params);

                                        case 7:
                                            return _context58.abrupt('return', _context58.sent);

                                        case 8:
                                        case 'end':
                                            return _context58.stop();
                                    }
                                }
                            }, _callee58, this);
                        }));

                        function invoke(_x51) {
                            return _ref60.apply(this, arguments);
                        }

                        return invoke;
                    }()
                }, {
                    key: 'commit',
                    value: function () {
                        var _ref61 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee60() {
                            var _this36 = this;

                            var _pri81, _, __, data, cmds;

                            return _regenerator2.default.wrap(function _callee60$(_context60) {
                                while (1) {
                                    switch (_context60.prev = _context60.next) {
                                        case 0:
                                            _pri81 = pri(this), _ = _pri81._, __ = _pri81.__;

                                            if (!_.transaction) {
                                                _context60.next = 10;
                                                break;
                                            }

                                            //事务性处理
                                            data = [];
                                            cmds = __.cmds;

                                            __.cmds = [];
                                            _context60.next = 7;
                                            return _tool2.default.each(cmds, function () {
                                                var _ref62 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee59(v) {
                                                    return _regenerator2.default.wrap(function _callee59$(_context59) {
                                                        while (1) {
                                                            switch (_context59.prev = _context59.next) {
                                                                case 0:
                                                                    _context59.t0 = data;
                                                                    _context59.next = 3;
                                                                    return __.invoke(v.command, v.params);

                                                                case 3:
                                                                    _context59.t1 = _context59.sent;

                                                                    _context59.t0.push.call(_context59.t0, _context59.t1);

                                                                    return _context59.abrupt('return', false);

                                                                case 6:
                                                                case 'end':
                                                                    return _context59.stop();
                                                            }
                                                        }
                                                    }, _callee59, _this36);
                                                }));

                                                return function (_x52) {
                                                    return _ref62.apply(this, arguments);
                                                };
                                            }(), true);

                                        case 7:
                                            return _context60.abrupt('return', data);

                                        case 10:
                                            throw new Error('非事务条件下不可调用此方法');

                                        case 11:
                                        case 'end':
                                            return _context60.stop();
                                    }
                                }
                            }, _callee60, this);
                        }));

                        function commit() {
                            return _ref61.apply(this, arguments);
                        }

                        return commit;
                    }()
                }, {
                    key: 'open',
                    value: function () {
                        var _ref63 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee61() {
                            var _pri82, _, __;

                            return _regenerator2.default.wrap(function _callee61$(_context61) {
                                while (1) {
                                    switch (_context61.prev = _context61.next) {
                                        case 0:
                                            _pri82 = pri(this), _ = _pri82._, __ = _pri82.__;
                                            _context61.next = 3;
                                            return _tool2.default.callback(_mongodb2.default.MongoClient.connect, _mongodb2.default.MongoClient, _.params.hosts);

                                        case 3:
                                            __.conn = _context61.sent;
                                            _context61.next = 6;
                                            return (0, _get3.default)(MongoSQLConnection.prototype.__proto__ || (0, _getPrototypeOf2.default)(MongoSQLConnection.prototype), 'open', this).call(this);

                                        case 6:
                                        case 'end':
                                            return _context61.stop();
                                    }
                                }
                            }, _callee61, this);
                        }));

                        function open() {
                            return _ref63.apply(this, arguments);
                        }

                        return open;
                    }()
                }, {
                    key: 'close',
                    value: function () {
                        var _ref64 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee62() {
                            var _pri83, _, __;

                            return _regenerator2.default.wrap(function _callee62$(_context62) {
                                while (1) {
                                    switch (_context62.prev = _context62.next) {
                                        case 0:
                                            _pri83 = pri(this), _ = _pri83._, __ = _pri83.__;

                                            try {
                                                __.conn.close();
                                            } catch (e) {}
                                            __.conn = null;
                                            __.cmds = [];
                                            _context62.next = 6;
                                            return (0, _get3.default)(MongoSQLConnection.prototype.__proto__ || (0, _getPrototypeOf2.default)(MongoSQLConnection.prototype), 'close', this).call(this);

                                        case 6:
                                        case 'end':
                                            return _context62.stop();
                                    }
                                }
                            }, _callee62, this);
                        }));

                        function close() {
                            return _ref64.apply(this, arguments);
                        }

                        return close;
                    }()
                }]);
                return MongoSQLConnection;
            }(NiDataConnection)
        }),
            _ = _pri77._,
            __ = _pri77.__;

        _.parser = parser;
        return _this33;
    }

    (0, _createClass3.default)(NiMongoSQLDataFactory, [{
        key: 'createDBConnection',
        value: function createDBConnection() {
            var _pri84 = pri(this),
                _ = _pri84._,
                __ = _pri84.__;

            return new __.MongoSQLConnection();
        }
    }, {
        key: 'backDBConnection',
        value: function backDBConnection(conn) {
            conn.close();
        }
    }]);
    return NiMongoSQLDataFactory;
}(NiDataFactory);

/*redis nosql 支持
 * 目前事务未支持
 */
var NiRedisSqlDataFactory2 = exports.NiRedisSqlDataFactory2 = function (_NiDataFactory6) {
    (0, _inherits3.default)(NiRedisSqlDataFactory2, _NiDataFactory6);

    function NiRedisSqlDataFactory2(parser) {
        (0, _classCallCheck3.default)(this, NiRedisSqlDataFactory2);

        var _this37 = (0, _possibleConstructorReturn3.default)(this, (NiRedisSqlDataFactory2.__proto__ || (0, _getPrototypeOf2.default)(NiRedisSqlDataFactory2)).call(this));

        var that = _this37;

        var _pri85 = pri(that, {
            RedisSqlConnection: function (_NiDataConnection6) {
                (0, _inherits3.default)(RedisSqlConnection, _NiDataConnection6);

                function RedisSqlConnection() {
                    var _this39 = this;

                    (0, _classCallCheck3.default)(this, RedisSqlConnection);

                    var _this38 = (0, _possibleConstructorReturn3.default)(this, (RedisSqlConnection.__proto__ || (0, _getPrototypeOf2.default)(RedisSqlConnection)).call(this));

                    var _this = _this38;

                    var _pri86 = pri(_this38, {
                        cmds: [],
                        host: "",
                        port: "",
                        password: "",
                        method: "",
                        timeout: 60000,
                        db: 0,
                        conn: null,
                        getValues: function getValues(data, keys) {
                            var ret = {},
                                i = 0;
                            for (var k in keys) {
                                ret[k] = data[k], i++;
                            }return i ? ret : data;
                        },
                        invoke: function () {
                            var _ref65 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee66(command, params) {
                                var _pri87, _, __, queryList, data, trans, transprefunc, transfunc, debug, rets;

                                return _regenerator2.default.wrap(function _callee66$(_context66) {
                                    while (1) {
                                        switch (_context66.prev = _context66.next) {
                                            case 0:
                                                _pri87 = pri(_this), _ = _pri87._, __ = _pri87.__;
                                                _context66.prev = 1;
                                                queryList = that.parser.parse(command, params);
                                                data = [];
                                                trans = false;
                                                transprefunc = [];
                                                transfunc = [];
                                                debug = params['_debug'] && params['_debug'].value;
                                                _context66.next = 10;
                                                return _tool2.default.each(queryList, function () {
                                                    var _ref66 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee63(v, call) {
                                                        var table, key1, key, res, jsdat, k, ret2, datetime2, values2, _k7, _v13, key2, value2, majorkey2, func, _res, datetime, values, _k9, _v14, value, _majorkey, _func, ret, _datetime, _values, _k11, _v15, _value, _majorkey2, _func2, majorkey, _res2, _k12, _ret4, _res3, _k13, _ret5, _res4, _res5, _jsdat, _k14, _ret6, keys, _res6, _jsdat2, _k15, _ret7, values3, _k16, _v16, value3, _values2, _k17, _v17, _value2, _values3, _k18, _v18, _value3, limita, limitb, calls, _res7, keyID, _key4, orders, _limita, _limitb, scorea, scoreb, node, _node, _k20, _v19, _calls, _res8, _v, _k21, _ret8, _orders, _calls2, _res9, _v20, _k23, _ret9, _orders2, _limita2, _limitb2, _calls3, _res10, _v21, _k25, _ret10, score, _score, _res11, limit, _res12, _k26, _ret11, _value4, _res13, _values4, _k27, _v22, _value5, _values5, _k28, _v23, _key5, _value6, _majorkey3, _func3, _res14, _datetime2, _res15;

                                                        return _regenerator2.default.wrap(function _callee63$(_context63) {
                                                            while (1) {
                                                                switch (_context63.prev = _context63.next) {
                                                                    case 0:
                                                                        table = _tool2.default.hash2(v.Table) + "";
                                                                        key1 = _tool2.default.toJsonString(v.IDs);
                                                                        key = _tool2.default.hash2(key1) + "";
                                                                        _context63.t0 = v.Method.toLowerCase().trim();
                                                                        _context63.next = _context63.t0 === "transaction" ? 6 : _context63.t0 === "select" ? 8 : _context63.t0 === 'increase' ? 34 : _context63.t0 === 'lock' ? 61 : _context63.t0 === "insert" ? 88 : _context63.t0 === "update" ? 88 : _context63.t0 === "delete" ? 114 : _context63.t0 === 'hkeys' ? 127 : _context63.t0 === 'hgets' ? 152 : _context63.t0 === "hlen" ? 177 : _context63.t0 === "hcount" ? 177 : _context63.t0 === "hselect" ? 193 : _context63.t0 === "hmselect" ? 218 : _context63.t0 === 'hlock' ? 245 : _context63.t0 === "hinsert" ? 268 : _context63.t0 === "hupdate" ? 268 : _context63.t0 === "hincrease" ? 290 : _context63.t0 === "hdelete" ? 315 : _context63.t0 === "zlen" ? 325 : _context63.t0 === "zcount" ? 325 : _context63.t0 === "zselect" ? 345 : _context63.t0 === 'zrank' ? 415 : _context63.t0 === "zpop" ? 443 : _context63.t0 === "zinsert" ? 476 : _context63.t0 === "zupdate" ? 476 : _context63.t0 === "zincrease" ? 488 : _context63.t0 === "zdelete" ? 501 : _context63.t0 === "llen" ? 516 : _context63.t0 === "lcount" ? 516 : _context63.t0 === "lpop" ? 532 : _context63.t0 === "lselect" ? 532 : _context63.t0 === "linsert" ? 563 : _context63.t0 === "lupdate" ? 563 : _context63.t0 === "ldelete" ? 574 : _context63.t0 === "dbs" ? 584 : _context63.t0 === "hngcrease" ? 593 : _context63.t0 === 'ngcrease' ? 620 : _context63.t0 === "expire" ? 648 : 661;
                                                                        break;

                                                                    case 6:
                                                                        trans = true;
                                                                        return _context63.abrupt('break', 662);

                                                                    case 8:
                                                                        key = v.Table + key;
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', key);

                                                                        if (!trans) {
                                                                            _context63.next = 14;
                                                                            break;
                                                                        }

                                                                        transfunc.push(function (call) {
                                                                            return __.conn.get(key, call);
                                                                        });
                                                                        _context63.next = 33;
                                                                        break;

                                                                    case 14:
                                                                        _context63.next = 16;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return __.conn.get(key, call);
                                                                        });

                                                                    case 16:
                                                                        res = _context63.sent;
                                                                        _context63.prev = 17;
                                                                        jsdat = ('' + res).startsWith('{') ? __.getValues(_tool2.default.json(res), v.MethodParam) : res;


                                                                        data.push([jsdat]);
                                                                        _context63.next = 33;
                                                                        break;

                                                                    case 22:
                                                                        _context63.prev = 22;
                                                                        _context63.t1 = _context63['catch'](17);
                                                                        _context63.t2 = _regenerator2.default.keys(v.IDs);

                                                                    case 25:
                                                                        if ((_context63.t3 = _context63.t2()).done) {
                                                                            _context63.next = 33;
                                                                            break;
                                                                        }

                                                                        k = _context63.t3.value;
                                                                        ret2 = {};

                                                                        ret2[k] = res;
                                                                        data.push(ret2);
                                                                        return _context63.abrupt('break', 33);

                                                                    case 33:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 34:
                                                                        datetime2 = _tool2.default.toJsonString(v.DateTimeParam).length > 2 ? function () {
                                                                            for (var _k6 in v.DateTimeParam) {
                                                                                return v.DateTimeParam[_k6];
                                                                            }
                                                                        }() : _.params.datetime;
                                                                        values2 = {};
                                                                        _context63.t4 = _regenerator2.default.keys(v.MethodParam);

                                                                    case 37:
                                                                        if ((_context63.t5 = _context63.t4()).done) {
                                                                            _context63.next = 46;
                                                                            break;
                                                                        }

                                                                        _k7 = _context63.t5.value;
                                                                        _v13 = v.MethodParam[_k7];

                                                                        _v13 = typeof _v13.value === 'undefined' ? _v13 : _v13.value;
                                                                        values2[_k7] = _v13;

                                                                        if (!(typeof _v13 === 'undefined' || _v13.type)) {
                                                                            _context63.next = 44;
                                                                            break;
                                                                        }

                                                                        throw new Error('\u53C2\u6570' + _k7 + '\u4E0D\u80FD\u4E3Aundefined');

                                                                    case 44:
                                                                        _context63.next = 37;
                                                                        break;

                                                                    case 46:
                                                                        key2 = _tool2.default.hash2(_tool2.default.toJsonString(v.IDs)) + "";
                                                                        value2 = values2['_value'] !== undefined && values2['_value'] !== null ? values2['_value'] : _tool2.default.toJsonString(values2);
                                                                        majorkey2 = v.Table + key2;

                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', majorkey2);
                                                                        func = null;

                                                                        if (datetime2 != '-1') {
                                                                            func = function func(call) {
                                                                                __.conn.incrby(majorkey2, value2, function (err, ret) {
                                                                                    if (err) call(err);else __.conn.expire(majorkey2, (parseInt(datetime2) || 0) / 1000, function (err) {
                                                                                        call(err, ret);
                                                                                    });
                                                                                });
                                                                            };
                                                                        } else {
                                                                            func = function func(call) {
                                                                                __.conn.incrby(majorkey2, value2, call);
                                                                            };
                                                                        }

                                                                        if (!trans) {
                                                                            _context63.next = 56;
                                                                            break;
                                                                        }

                                                                        //transprefunc.push(call => __.conn.watch(majorkey2, call)
                                                                        transfunc.push(func);
                                                                        _context63.next = 60;
                                                                        break;

                                                                    case 56:
                                                                        _context63.next = 58;
                                                                        return _tool2.default.callback(func);

                                                                    case 58:
                                                                        _res = _context63.sent;

                                                                        data.push([{
                                                                            value: _res
                                                                        }]);

                                                                    case 60:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 61:
                                                                        datetime = _tool2.default.toJsonString(v.DateTimeParam).length > 2 ? function () {
                                                                            for (var _k8 in v.DateTimeParam) {
                                                                                return v.DateTimeParam[_k8];
                                                                            }
                                                                        }() : _.params.datetime;
                                                                        values = {};
                                                                        _context63.t6 = _regenerator2.default.keys(v.MethodParam);

                                                                    case 64:
                                                                        if ((_context63.t7 = _context63.t6()).done) {
                                                                            _context63.next = 73;
                                                                            break;
                                                                        }

                                                                        _k9 = _context63.t7.value;
                                                                        _v14 = v.MethodParam[_k9];

                                                                        _v14 = typeof _v14.value === 'undefined' ? _v14 : _v14.value;
                                                                        values[_k9] = _v14;

                                                                        if (!(typeof _v14 === 'undefined' || _v14.type)) {
                                                                            _context63.next = 71;
                                                                            break;
                                                                        }

                                                                        throw new Error('\u53C2\u6570' + _k9 + '\u4E0D\u80FD\u4E3Aundefined');

                                                                    case 71:
                                                                        _context63.next = 64;
                                                                        break;

                                                                    case 73:
                                                                        value = values['_value'] !== undefined && values['_value'] !== null ? values['_value'] : _tool2.default.toJsonString(values);
                                                                        _majorkey = v.Table + key;

                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', _majorkey);
                                                                        _func = null;
                                                                        //setnx 设置安全锁

                                                                        if (datetime != '-1') {
                                                                            _func = function _func(call) {
                                                                                __.conn.setnx(_majorkey, value, function (err, ret) {
                                                                                    if (err) call(err);else __.conn.expire(_majorkey, (parseInt(datetime) || 0) / 1000, function (err) {
                                                                                        call(err, ret);
                                                                                    });
                                                                                });
                                                                            };
                                                                        } else {
                                                                            _func = function _func(call) {
                                                                                return __.conn.setnx(_majorkey, value, call);
                                                                            };
                                                                        }

                                                                        if (!trans) {
                                                                            _context63.next = 83;
                                                                            break;
                                                                        }

                                                                        transprefunc.push(function (call) {
                                                                            return __.conn.watch(_majorkey, call);
                                                                        });
                                                                        transfunc.push(_func);
                                                                        _context63.next = 87;
                                                                        break;

                                                                    case 83:
                                                                        _context63.next = 85;
                                                                        return _tool2.default.callback(_func);

                                                                    case 85:
                                                                        ret = _context63.sent;

                                                                        data.push([{
                                                                            value: ret
                                                                        }]);

                                                                    case 87:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 88:
                                                                        _datetime = _tool2.default.toJsonString(v.DateTimeParam).length > 2 ? function () {
                                                                            for (var _k10 in v.DateTimeParam) {
                                                                                return v.DateTimeParam[_k10];
                                                                            }
                                                                        }() : _.params.datetime;
                                                                        _values = {};
                                                                        _context63.t8 = _regenerator2.default.keys(v.MethodParam);

                                                                    case 91:
                                                                        if ((_context63.t9 = _context63.t8()).done) {
                                                                            _context63.next = 100;
                                                                            break;
                                                                        }

                                                                        _k11 = _context63.t9.value;
                                                                        _v15 = v.MethodParam[_k11];

                                                                        _v15 = typeof _v15.value === 'undefined' ? _v15 : _v15.value;
                                                                        _values[_k11] = _v15;

                                                                        if (!(typeof _v15 === 'undefined' || _v15.type)) {
                                                                            _context63.next = 98;
                                                                            break;
                                                                        }

                                                                        throw new Error('\u53C2\u6570' + _k11 + '\u4E0D\u80FD\u4E3Aundefined');

                                                                    case 98:
                                                                        _context63.next = 91;
                                                                        break;

                                                                    case 100:
                                                                        _value = _values['_value'] !== undefined && _values['_value'] !== null ? _values['_value'] : _tool2.default.toJsonString(_values);
                                                                        _majorkey2 = v.Table + key;

                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', _majorkey2);
                                                                        _func2 = null;
                                                                        //setnx 设置安全锁

                                                                        if (_datetime != '-1') {
                                                                            _func2 = function _func2(call) {
                                                                                return __.conn.set(_majorkey2, _value, "px", _datetime, call);
                                                                            };
                                                                        } else {
                                                                            _func2 = function _func2(call) {
                                                                                return __.conn.set(_majorkey2, _value, call);
                                                                            };
                                                                        }

                                                                        if (!trans) {
                                                                            _context63.next = 110;
                                                                            break;
                                                                        }

                                                                        transprefunc.push(function (call) {
                                                                            return __.conn.watch(_majorkey2, call);
                                                                        });
                                                                        transfunc.push(_func2);
                                                                        _context63.next = 113;
                                                                        break;

                                                                    case 110:
                                                                        _context63.next = 112;
                                                                        return _tool2.default.callback(_func2);

                                                                    case 112:
                                                                        data.push([{
                                                                            value: 1
                                                                        }]);

                                                                    case 113:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 114:
                                                                        majorkey = v.Table + key;

                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', majorkey);

                                                                        if (!trans) {
                                                                            _context63.next = 121;
                                                                            break;
                                                                        }

                                                                        transprefunc.push(function (call) {
                                                                            return __.conn.watch(majorkey, call);
                                                                        });
                                                                        transfunc.push(function (call) {
                                                                            __.conn.del(majorkey, function () {
                                                                                __.conn.del(table, call);
                                                                            });
                                                                        });
                                                                        _context63.next = 126;
                                                                        break;

                                                                    case 121:
                                                                        _context63.next = 123;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return __.conn.del(majorkey, call);
                                                                        });

                                                                    case 123:
                                                                        _context63.next = 125;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return __.conn.del(table, call);
                                                                        });

                                                                    case 125:
                                                                        data.push([{
                                                                            value: 1
                                                                        }]);

                                                                    case 126:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 127:
                                                                        if (!trans) {
                                                                            _context63.next = 132;
                                                                            break;
                                                                        }

                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);
                                                                        transfunc.push(function (call) {
                                                                            return __.conn.hgetall(table, function (e, d) {
                                                                                if (e) call(e);else {
                                                                                    var ID = function () {
                                                                                        for (var k in v.IDs) {
                                                                                            return k;
                                                                                        }
                                                                                    }() || '';
                                                                                    var keys = {};
                                                                                    for (var k in d || {}) {
                                                                                        try {
                                                                                            if (k.startsWith('{')) k = _tool2.default.json(k)[ID];
                                                                                        } catch (e) {
                                                                                            console.log('hgets json error', v2);
                                                                                        }
                                                                                        keys[k] = true;
                                                                                    }
                                                                                    call(null, keys);
                                                                                }
                                                                            });
                                                                        });
                                                                        _context63.next = 151;
                                                                        break;

                                                                    case 132:
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);
                                                                        _context63.next = 135;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return __.conn.hgetall(table, function (e, d) {

                                                                                var ID = function () {
                                                                                    for (var k in v.IDs) {
                                                                                        return k;
                                                                                    }
                                                                                }() || '';
                                                                                var keys = {};
                                                                                for (var k in d || {}) {
                                                                                    try {
                                                                                        if (k.startsWith('{')) k = _tool2.default.json(k)[ID];
                                                                                    } catch (e) {
                                                                                        console.log('hgets json error', v2);
                                                                                    }
                                                                                    keys[k] = true;
                                                                                }
                                                                                call(null, keys);
                                                                            });
                                                                        });

                                                                    case 135:
                                                                        _res2 = _context63.sent;
                                                                        _context63.prev = 136;

                                                                        data.push([_res2]);
                                                                        _context63.next = 151;
                                                                        break;

                                                                    case 140:
                                                                        _context63.prev = 140;
                                                                        _context63.t10 = _context63['catch'](136);
                                                                        _context63.t11 = _regenerator2.default.keys(v.IDs);

                                                                    case 143:
                                                                        if ((_context63.t12 = _context63.t11()).done) {
                                                                            _context63.next = 151;
                                                                            break;
                                                                        }

                                                                        _k12 = _context63.t12.value;
                                                                        _ret4 = {};

                                                                        _ret4[_k12] = _res2;
                                                                        data.push(_ret4);
                                                                        return _context63.abrupt('break', 151);

                                                                    case 151:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 152:
                                                                        if (!trans) {
                                                                            _context63.next = 157;
                                                                            break;
                                                                        }

                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);
                                                                        transfunc.push(function (call) {
                                                                            return __.conn.hgetall(table, function (e, d) {
                                                                                if (e) call(e);else {
                                                                                    var ID = function () {
                                                                                        for (var k in v.IDs) {
                                                                                            return k;
                                                                                        }
                                                                                    }() || '';
                                                                                    var keys = {};
                                                                                    for (var k in d || {}) {
                                                                                        var v2 = d[k];
                                                                                        try {
                                                                                            if (k.startsWith('{')) k = _tool2.default.json(k)[ID];
                                                                                            if (v2.startsWith('{')) v2 = _tool2.default.json(_tool2.default.json(v2).value);
                                                                                        } catch (e) {
                                                                                            console.log('hgets json error', v2);
                                                                                        }
                                                                                        keys[k] = v2;
                                                                                    }
                                                                                    call(null, keys);
                                                                                }
                                                                            });
                                                                        });
                                                                        _context63.next = 176;
                                                                        break;

                                                                    case 157:
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);
                                                                        _context63.next = 160;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return __.conn.hgetall(table, function (e, d) {

                                                                                var ID = function () {
                                                                                    for (var k in v.IDs) {
                                                                                        return k;
                                                                                    }
                                                                                }() || '';
                                                                                var keys = {};
                                                                                for (var k in d || {}) {
                                                                                    var v2 = d[k];
                                                                                    try {
                                                                                        if (k.startsWith('{')) k = _tool2.default.json(k)[ID];
                                                                                        if (v2.startsWith('{')) v2 = _tool2.default.json(_tool2.default.json(v2).value);
                                                                                    } catch (e) {
                                                                                        console.log('hgets json error', v2);
                                                                                    }
                                                                                    keys[k] = v2;
                                                                                }
                                                                                call(null, keys);
                                                                            });
                                                                        });

                                                                    case 160:
                                                                        _res3 = _context63.sent;
                                                                        _context63.prev = 161;

                                                                        data.push([_res3]);
                                                                        _context63.next = 176;
                                                                        break;

                                                                    case 165:
                                                                        _context63.prev = 165;
                                                                        _context63.t13 = _context63['catch'](161);
                                                                        _context63.t14 = _regenerator2.default.keys(v.IDs);

                                                                    case 168:
                                                                        if ((_context63.t15 = _context63.t14()).done) {
                                                                            _context63.next = 176;
                                                                            break;
                                                                        }

                                                                        _k13 = _context63.t15.value;
                                                                        _ret5 = {};

                                                                        _ret5[_k13] = _res3;
                                                                        data.push(_ret5);
                                                                        return _context63.abrupt('break', 176);

                                                                    case 176:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 177:
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);

                                                                        if (!trans) {
                                                                            _context63.next = 182;
                                                                            break;
                                                                        }

                                                                        transfunc.push(function (call) {
                                                                            return __.conn.hlen(table, call);
                                                                        });
                                                                        _context63.next = 192;
                                                                        break;

                                                                    case 182:
                                                                        _context63.prev = 182;
                                                                        _context63.next = 185;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return __.conn.hlen(table, call);
                                                                        });

                                                                    case 185:
                                                                        _res4 = _context63.sent;

                                                                        data.push([{ count: _res4 }]);
                                                                        _context63.next = 192;
                                                                        break;

                                                                    case 189:
                                                                        _context63.prev = 189;
                                                                        _context63.t16 = _context63['catch'](182);

                                                                        data.push([{ count: 0 }]);

                                                                    case 192:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 193:
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);

                                                                        if (!trans) {
                                                                            _context63.next = 198;
                                                                            break;
                                                                        }

                                                                        transfunc.push(function (call) {
                                                                            return __.conn.hget(table, key1, call);
                                                                        });
                                                                        _context63.next = 217;
                                                                        break;

                                                                    case 198:
                                                                        _context63.next = 200;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return __.conn.hget(table, key1, call);
                                                                        });

                                                                    case 200:
                                                                        _res5 = _context63.sent;
                                                                        _context63.prev = 201;
                                                                        _jsdat = ('' + _res5).startsWith('{') ? __.getValues(_tool2.default.json(_res5), v.MethodParam) : _res5;

                                                                        data.push([_jsdat]);
                                                                        _context63.next = 217;
                                                                        break;

                                                                    case 206:
                                                                        _context63.prev = 206;
                                                                        _context63.t17 = _context63['catch'](201);
                                                                        _context63.t18 = _regenerator2.default.keys(v.IDs);

                                                                    case 209:
                                                                        if ((_context63.t19 = _context63.t18()).done) {
                                                                            _context63.next = 217;
                                                                            break;
                                                                        }

                                                                        _k14 = _context63.t19.value;
                                                                        _ret6 = {};

                                                                        _ret6[_k14] = _res5;
                                                                        data.push(_ret6);
                                                                        return _context63.abrupt('break', 217);

                                                                    case 217:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 218:
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);
                                                                        keys = v.IDs[Object['keys'](v.IDs)[0]].split(',');

                                                                        if (!trans) {
                                                                            _context63.next = 224;
                                                                            break;
                                                                        }

                                                                        transfunc.push(function (call) {
                                                                            return __.conn.hmget(table, keys, call);
                                                                        });
                                                                        _context63.next = 244;
                                                                        break;

                                                                    case 224:
                                                                        _context63.next = 226;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return __.conn.hmget(table, keys, call);
                                                                        });

                                                                    case 226:
                                                                        _res6 = _context63.sent;
                                                                        _context63.prev = 227;
                                                                        _jsdat2 = [];

                                                                        _res6.forEach(function (v2) {
                                                                            return _jsdat2.push(('' + v).startsWith('{') ? __.getValues(_tool2.default.json(v2), v.MethodParam) : v2);
                                                                        });
                                                                        data.push(_jsdat2);
                                                                        _context63.next = 244;
                                                                        break;

                                                                    case 233:
                                                                        _context63.prev = 233;
                                                                        _context63.t20 = _context63['catch'](227);
                                                                        _context63.t21 = _regenerator2.default.keys(v.IDs);

                                                                    case 236:
                                                                        if ((_context63.t22 = _context63.t21()).done) {
                                                                            _context63.next = 244;
                                                                            break;
                                                                        }

                                                                        _k15 = _context63.t22.value;
                                                                        _ret7 = {};

                                                                        _ret7[_k15] = _res6;
                                                                        data.push(_ret7);
                                                                        return _context63.abrupt('break', 244);

                                                                    case 244:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 245:
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);
                                                                        values3 = {};
                                                                        _context63.t23 = _regenerator2.default.keys(v.MethodParam);

                                                                    case 248:
                                                                        if ((_context63.t24 = _context63.t23()).done) {
                                                                            _context63.next = 257;
                                                                            break;
                                                                        }

                                                                        _k16 = _context63.t24.value;
                                                                        _v16 = v.MethodParam[_k16];

                                                                        _v16 = typeof _v16.value === 'undefined' ? _v16 : _v16.value;
                                                                        values3[_k16] = _v16;

                                                                        if (!(typeof _v16 === 'undefined' || _v16.type)) {
                                                                            _context63.next = 255;
                                                                            break;
                                                                        }

                                                                        throw new Error('\u53C2\u6570' + _k16 + '\u4E0D\u80FD\u4E3Aundefined');

                                                                    case 255:
                                                                        _context63.next = 248;
                                                                        break;

                                                                    case 257:
                                                                        value3 = values3['_value'] !== undefined && values3['_value'] !== null ? values3['_value'] : _tool2.default.toJsonString(values3);

                                                                        if (!trans) {
                                                                            _context63.next = 263;
                                                                            break;
                                                                        }

                                                                        transprefunc.push(function (call) {
                                                                            return __.conn.watch(table, call);
                                                                        });
                                                                        transfunc.push(function (call) {
                                                                            return __.conn.hsetnx(table, key1, value3, call);
                                                                        });
                                                                        _context63.next = 267;
                                                                        break;

                                                                    case 263:
                                                                        _context63.next = 265;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return __.conn.hsetnx(table, key1, value3, call);
                                                                        });

                                                                    case 265:
                                                                        ret = _context63.sent;

                                                                        data.push([{
                                                                            value: ret
                                                                        }]);

                                                                    case 267:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 268:
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);
                                                                        _values2 = {};
                                                                        _context63.t25 = _regenerator2.default.keys(v.MethodParam);

                                                                    case 271:
                                                                        if ((_context63.t26 = _context63.t25()).done) {
                                                                            _context63.next = 280;
                                                                            break;
                                                                        }

                                                                        _k17 = _context63.t26.value;
                                                                        _v17 = v.MethodParam[_k17];

                                                                        _v17 = typeof _v17.value === 'undefined' ? _v17 : _v17.value;
                                                                        _values2[_k17] = _v17;

                                                                        if (!(typeof _v17 === 'undefined' || _v17.type)) {
                                                                            _context63.next = 278;
                                                                            break;
                                                                        }

                                                                        throw new Error('\u53C2\u6570' + _k17 + '\u4E0D\u80FD\u4E3Aundefined');

                                                                    case 278:
                                                                        _context63.next = 271;
                                                                        break;

                                                                    case 280:
                                                                        _value2 = _values2['_value'] !== undefined && _values2['_value'] !== null ? _values2['_value'] : _tool2.default.toJsonString(_values2);

                                                                        if (!trans) {
                                                                            _context63.next = 286;
                                                                            break;
                                                                        }

                                                                        transprefunc.push(function (call) {
                                                                            return __.conn.watch(table, call);
                                                                        });
                                                                        transfunc.push(function (call) {
                                                                            return __.conn.hmset(table, key1, _value2, call);
                                                                        });
                                                                        _context63.next = 289;
                                                                        break;

                                                                    case 286:
                                                                        _context63.next = 288;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return __.conn.hmset(table, key1, _value2, call);
                                                                        });

                                                                    case 288:
                                                                        data.push([{
                                                                            value: 1
                                                                        }]);

                                                                    case 289:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 290:
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);
                                                                        _values3 = {};
                                                                        _context63.t27 = _regenerator2.default.keys(v.MethodParam);

                                                                    case 293:
                                                                        if ((_context63.t28 = _context63.t27()).done) {
                                                                            _context63.next = 304;
                                                                            break;
                                                                        }

                                                                        _k18 = _context63.t28.value;

                                                                        if (_k18) {
                                                                            _context63.next = 297;
                                                                            break;
                                                                        }

                                                                        return _context63.abrupt('continue', 293);

                                                                    case 297:
                                                                        _v18 = v.MethodParam[_k18];

                                                                        _v18 = typeof _v18.value === 'undefined' ? _v18 : _v18.value;
                                                                        _values3[_k18] = _v18;

                                                                        if (!(typeof _v18 === 'undefined' || _v18.type)) {
                                                                            _context63.next = 302;
                                                                            break;
                                                                        }

                                                                        throw new Error('\u53C2\u6570' + _k18 + '\u4E0D\u80FD\u4E3Aundefined');

                                                                    case 302:
                                                                        _context63.next = 293;
                                                                        break;

                                                                    case 304:
                                                                        _value3 = _values3['_value'] !== undefined && _values3['_value'] !== null ? _values3['_value'] : _tool2.default.toJsonString(_values3);

                                                                        if (!trans) {
                                                                            _context63.next = 310;
                                                                            break;
                                                                        }

                                                                        transprefunc.push(function (call) {
                                                                            return __.conn.watch(table, call);
                                                                        });
                                                                        transfunc.push(function (call) {
                                                                            return __.conn.hincrby(table, key1, _value3, call);
                                                                        });
                                                                        _context63.next = 314;
                                                                        break;

                                                                    case 310:
                                                                        _context63.next = 312;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return __.conn.hincrby(table, key1, _value3, call);
                                                                        });

                                                                    case 312:
                                                                        ret = _context63.sent;

                                                                        data.push([{
                                                                            value: ret
                                                                        }]);

                                                                    case 314:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 315:
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);

                                                                        if (!trans) {
                                                                            _context63.next = 321;
                                                                            break;
                                                                        }

                                                                        transprefunc.push(function (call) {
                                                                            return __.conn.watch(table);
                                                                        });
                                                                        transfunc.push(function (call) {
                                                                            return __.conn.hdel(table, key1, call);
                                                                        });
                                                                        _context63.next = 324;
                                                                        break;

                                                                    case 321:
                                                                        _context63.next = 323;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return __.conn.hdel(table, key1, call);
                                                                        });

                                                                    case 323:
                                                                        data.push([{
                                                                            value: 1
                                                                        }]);

                                                                    case 324:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 325:
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);
                                                                        limita = parseInt(v.LimitParam && v.LimitParam['_0'] && v.LimitParam[v.LimitParam['_0']]) || '-inf';
                                                                        limitb = parseInt(v.LimitParam && v.LimitParam['_1'] && v.LimitParam[v.LimitParam['_1']]) || null;
                                                                        !limitb ? limitb = '+inf' : limitb = limita + limitb - 1;

                                                                        calls = function calls(call) {
                                                                            return __.conn.zcount(table, limita, limitb, call);
                                                                        };

                                                                        if (!trans) {
                                                                            _context63.next = 334;
                                                                            break;
                                                                        }

                                                                        transfunc.push(calls);
                                                                        _context63.next = 344;
                                                                        break;

                                                                    case 334:
                                                                        _context63.prev = 334;
                                                                        _context63.next = 337;
                                                                        return _tool2.default.callback(calls);

                                                                    case 337:
                                                                        _res7 = _context63.sent;

                                                                        data.push([{ count: _res7 }]);
                                                                        _context63.next = 344;
                                                                        break;

                                                                    case 341:
                                                                        _context63.prev = 341;
                                                                        _context63.t29 = _context63['catch'](334);

                                                                        data.push([{ count: 0 }]);

                                                                    case 344:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 345:
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);
                                                                        keyID = Object['keys'](v.IDs)[0], _key4 = null;

                                                                        orders = function () {
                                                                            if (v.OrderParam) for (var _k19 in v.OrderParam) {
                                                                                return v.OrderParam[_k19];
                                                                            } else return 'asc';
                                                                        }() || 'asc';

                                                                        _limita = parseInt(v.LimitParam && v.LimitParam['_0'] && v.LimitParam[v.LimitParam['_0']]) || 0;
                                                                        _limitb = parseInt(v.LimitParam && v.LimitParam['_1'] && v.LimitParam[v.LimitParam['_1']]) || null;
                                                                        !_limitb ? (_limitb = _limita - 1, _limita = 0) : _limitb = _limita + _limitb - 1;
                                                                        scorea = null, scoreb = null;

                                                                        if (!v.WhereParam) {
                                                                            _context63.next = 388;
                                                                            break;
                                                                        }

                                                                        node = [v.WhereParam];

                                                                    case 354:
                                                                        if (!node.length) {
                                                                            _context63.next = 388;
                                                                            break;
                                                                        }

                                                                        _node = node.pop();
                                                                        _context63.t30 = _regenerator2.default.keys(_node);

                                                                    case 357:
                                                                        if ((_context63.t31 = _context63.t30()).done) {
                                                                            _context63.next = 386;
                                                                            break;
                                                                        }

                                                                        _k20 = _context63.t31.value;
                                                                        _v19 = _node[_k20];

                                                                        if (!(_v19 && _v19.score)) {
                                                                            _context63.next = 375;
                                                                            break;
                                                                        }

                                                                        _context63.t32 = _k20;
                                                                        _context63.next = _context63.t32 === '<' ? 364 : _context63.t32 === '<=' ? 366 : _context63.t32 === '>' ? 368 : _context63.t32 === '>=' ? 370 : 372;
                                                                        break;

                                                                    case 364:
                                                                        scoreb = '(' + _v19.score;
                                                                        return _context63.abrupt('break', 373);

                                                                    case 366:
                                                                        scoreb = _v19.score;
                                                                        return _context63.abrupt('break', 373);

                                                                    case 368:
                                                                        scorea = '(' + _v19.score;
                                                                        return _context63.abrupt('break', 373);

                                                                    case 370:
                                                                        scorea = _v19.score;
                                                                        return _context63.abrupt('break', 373);

                                                                    case 372:
                                                                        return _context63.abrupt('break', 373);

                                                                    case 373:
                                                                        _context63.next = 384;
                                                                        break;

                                                                    case 375:
                                                                        _context63.t33 = _k20;
                                                                        _context63.next = _context63.t33 === 'score' ? 378 : _context63.t33 === keyID ? 380 : 382;
                                                                        break;

                                                                    case 378:
                                                                        scorea = _v19;
                                                                        return _context63.abrupt('break', 384);

                                                                    case 380:
                                                                        _key4 = v.IDs[keyID];
                                                                        return _context63.abrupt('break', 384);

                                                                    case 382:
                                                                        node.push(_v19);
                                                                        return _context63.abrupt('break', 384);

                                                                    case 384:
                                                                        _context63.next = 357;
                                                                        break;

                                                                    case 386:
                                                                        _context63.next = 354;
                                                                        break;

                                                                    case 388:
                                                                        _calls = null;
                                                                        //console.log(2324, orders, table, scorea, scoreb, !scorea && !scoreb, limita, limitb);

                                                                        if (_key4 && _key4.length) {
                                                                            _calls = function _calls(call) {
                                                                                _tool2.default.callback2(function (call2) {
                                                                                    return __.conn.zscore(table, _key4, call2);
                                                                                }).then(function (v) {
                                                                                    call(null, [_key4, v]);
                                                                                }).catch(call);
                                                                            };
                                                                        } else if (orders == 'asc') {
                                                                            if (!scorea && !scoreb) {
                                                                                //orders='zrange';
                                                                                _calls = function _calls(call) {
                                                                                    return __.conn.zrange(table, _limita, _limitb, "WITHSCORES", call);
                                                                                };
                                                                            } else {
                                                                                _calls = function _calls(call) {
                                                                                    return __.conn.zrangebyscore(table, scorea || '-inf', scoreb || '+inf', 'limit', _limita, _limitb, "WITHSCORES", call);
                                                                                };
                                                                            }
                                                                        } else if (!scorea && !scoreb) {
                                                                            //orders='zrange';
                                                                            _calls = function _calls(call) {
                                                                                return __.conn.zrevrange(table, _limita, _limitb, "WITHSCORES", call);
                                                                            };
                                                                        } else {
                                                                            _calls = function _calls(call) {
                                                                                return __.conn.zrevrangebyscore(table, scorea || '-inf', scoreb || '+inf', 'limit', _limita, _limitb, "WITHSCORES", call);
                                                                            };
                                                                        }

                                                                        if (!trans) {
                                                                            _context63.next = 394;
                                                                            break;
                                                                        }

                                                                        transfunc.push(_calls);
                                                                        _context63.next = 414;
                                                                        break;

                                                                    case 394:
                                                                        _context63.next = 396;
                                                                        return _tool2.default.callback(_calls);

                                                                    case 396:
                                                                        _res8 = _context63.sent;
                                                                        _context63.prev = 397;
                                                                        _v = [];

                                                                        _res8.forEach(function (v, i) {
                                                                            i % 2 == 0 && _v.push({ key: v, value: _res8[i + 1] });
                                                                            return null;
                                                                        });
                                                                        data.push(_v);
                                                                        //console.log(2352, data);
                                                                        _context63.next = 414;
                                                                        break;

                                                                    case 403:
                                                                        _context63.prev = 403;
                                                                        _context63.t34 = _context63['catch'](397);
                                                                        _context63.t35 = _regenerator2.default.keys(v.IDs);

                                                                    case 406:
                                                                        if ((_context63.t36 = _context63.t35()).done) {
                                                                            _context63.next = 414;
                                                                            break;
                                                                        }

                                                                        _k21 = _context63.t36.value;
                                                                        _ret8 = {};

                                                                        _ret8[_k21] = _res8;
                                                                        data.push(_ret8);
                                                                        return _context63.abrupt('break', 414);

                                                                    case 414:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 415:
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);
                                                                        keys = v.IDs[Object['keys'](v.IDs)[0]];

                                                                        _orders = function () {
                                                                            if (v.OrderParam) for (var _k22 in v.OrderParam) {
                                                                                return v.OrderParam[_k22];
                                                                            } else return 'asc';
                                                                        }() || 'asc';

                                                                        _calls2 = null;

                                                                        if (_orders == 'asc') {
                                                                            _calls2 = function _calls2(call) {
                                                                                return __.conn.zrank(table, keys, call);
                                                                            };
                                                                        } else {
                                                                            _calls2 = function _calls2(call) {
                                                                                return __.conn.zrevrank(table, keys, call);
                                                                            };
                                                                        }

                                                                        if (!trans) {
                                                                            _context63.next = 424;
                                                                            break;
                                                                        }

                                                                        transfunc.push(_calls2);
                                                                        _context63.next = 442;
                                                                        break;

                                                                    case 424:
                                                                        _context63.next = 426;
                                                                        return _tool2.default.callback(_calls2);

                                                                    case 426:
                                                                        _res9 = _context63.sent;
                                                                        _context63.prev = 427;

                                                                        //console.log(2350, res, v, key);
                                                                        if (null !== _res9) {
                                                                            _v20 = {};

                                                                            _v20[keys] = _res9 + 1;
                                                                            data.push(_v20);
                                                                        }
                                                                        //console.log(2352, data);
                                                                        _context63.next = 442;
                                                                        break;

                                                                    case 431:
                                                                        _context63.prev = 431;
                                                                        _context63.t37 = _context63['catch'](427);
                                                                        _context63.t38 = _regenerator2.default.keys(v.IDs);

                                                                    case 434:
                                                                        if ((_context63.t39 = _context63.t38()).done) {
                                                                            _context63.next = 442;
                                                                            break;
                                                                        }

                                                                        _k23 = _context63.t39.value;
                                                                        _ret9 = {};

                                                                        _ret9[_k23] = _res9;
                                                                        data.push(_ret9);
                                                                        return _context63.abrupt('break', 442);

                                                                    case 442:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 443:
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);
                                                                        key = Object['keys'](v.IDs)[0];

                                                                        _orders2 = function () {
                                                                            if (v.OrderParam) for (var _k24 in v.OrderParam) {
                                                                                return v.OrderParam[_k24];
                                                                            } else return 'asc';
                                                                        }() || 'asc';

                                                                        _limita2 = parseInt(v.LimitParam && v.LimitParam['_0'] && v.LimitParam[v.LimitParam['_0']]) || 0;
                                                                        _limitb2 = parseInt(v.LimitParam && v.LimitParam['_1'] && v.LimitParam[v.LimitParam['_1']]) || null;
                                                                        !_limitb2 ? (_limitb2 = _limita2 - 1, _limita2 = 0) : _limitb2 = _limita2 + _limitb2 - 1;

                                                                        _calls3 = null;
                                                                        //console.log(2324, orders, table, scorea, scoreb, 'limit', limita, limita + limitb - 1, );

                                                                        if (_orders2 == 'asc') {
                                                                            _calls3 = function _calls3(call) {
                                                                                return __.conn.zpopmin(table, _limita2, _limitb2, "WITHSCORES", call);
                                                                            };
                                                                        } else {
                                                                            _calls3 = function _calls3(call) {
                                                                                return __.conn.zpopmax(table, _limita2, _limitb2, "WITHSCORES", call);
                                                                            };
                                                                        }

                                                                        if (!trans) {
                                                                            _context63.next = 455;
                                                                            break;
                                                                        }

                                                                        transfunc.push(_calls3);
                                                                        _context63.next = 475;
                                                                        break;

                                                                    case 455:
                                                                        _context63.next = 457;
                                                                        return _tool2.default.callback(_calls3);

                                                                    case 457:
                                                                        _res10 = _context63.sent;
                                                                        _context63.prev = 458;

                                                                        //console.log(2350, res, v, key);
                                                                        _v21 = {};

                                                                        _tool2.default.isArray(_res10) ? _v21[_res10[0]] = _res10[1] : _v21 = _res10;
                                                                        data.push(_v21);
                                                                        //console.log(2352, data);
                                                                        _context63.next = 475;
                                                                        break;

                                                                    case 464:
                                                                        _context63.prev = 464;
                                                                        _context63.t40 = _context63['catch'](458);
                                                                        _context63.t41 = _regenerator2.default.keys(v.IDs);

                                                                    case 467:
                                                                        if ((_context63.t42 = _context63.t41()).done) {
                                                                            _context63.next = 475;
                                                                            break;
                                                                        }

                                                                        _k25 = _context63.t42.value;
                                                                        _ret10 = {};

                                                                        _ret10[_k25] = _res10;
                                                                        data.push(_ret10);
                                                                        return _context63.abrupt('break', 475);

                                                                    case 475:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 476:
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);
                                                                        score = parseInt(v.MethodParam.score && v.MethodParam.score.value || v.MethodParam.score) || 0;
                                                                        keys = v.IDs[Object['keys'](v.IDs)[0]];

                                                                        if (!trans) {
                                                                            _context63.next = 484;
                                                                            break;
                                                                        }

                                                                        transprefunc.push(function (call) {
                                                                            return __.conn.watch(table, call);
                                                                        });
                                                                        transfunc.push(function (call) {
                                                                            return __.conn.zadd(table, score, keys, call);
                                                                        });
                                                                        _context63.next = 487;
                                                                        break;

                                                                    case 484:
                                                                        _context63.next = 486;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return __.conn.zadd(table, score, keys, call);
                                                                        });

                                                                    case 486:
                                                                        data.push([{
                                                                            key: keys,
                                                                            value: score
                                                                        }]);

                                                                    case 487:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 488:
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);
                                                                        _score = parseInt(v.MethodParam.score && v.MethodParam.score.value || v.MethodParam.score) || 0;
                                                                        keys = v.IDs[Object['keys'](v.IDs)[0]];

                                                                        if (!trans) {
                                                                            _context63.next = 496;
                                                                            break;
                                                                        }

                                                                        transprefunc.push(function (call) {
                                                                            return __.conn.watch(table, call);
                                                                        });
                                                                        transfunc.push(function (call) {
                                                                            return __.conn.zincrby(table, _score, keys, call);
                                                                        });
                                                                        _context63.next = 500;
                                                                        break;

                                                                    case 496:
                                                                        _context63.next = 498;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return __.conn.zincrby(table, _score, keys, call);
                                                                        });

                                                                    case 498:
                                                                        ret = _context63.sent;

                                                                        data.push([{
                                                                            key: keys,
                                                                            value: ret
                                                                        }]);

                                                                    case 500:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 501:
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);
                                                                        keys = v.IDs[Object['keys'](v.IDs)[0]];

                                                                        if (!trans) {
                                                                            _context63.next = 508;
                                                                            break;
                                                                        }

                                                                        transprefunc.push(function (call) {
                                                                            return __.conn.watch(table, call);
                                                                        });
                                                                        transfunc.push(function (call) {
                                                                            return { value: __.conn.zrem(table, keys, call) };
                                                                        });
                                                                        _context63.next = 515;
                                                                        break;

                                                                    case 508:
                                                                        _context63.t43 = data;
                                                                        _context63.next = 511;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return __.conn.zrem(table, keys, call);
                                                                        });

                                                                    case 511:
                                                                        _context63.t44 = _context63.sent;
                                                                        _context63.t45 = {
                                                                            value: _context63.t44
                                                                        };
                                                                        _context63.t46 = [_context63.t45];

                                                                        _context63.t43.push.call(_context63.t43, _context63.t46);

                                                                    case 515:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 516:
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);

                                                                        if (!trans) {
                                                                            _context63.next = 521;
                                                                            break;
                                                                        }

                                                                        transfunc.push(function (call) {
                                                                            return __.conn.llen(table, call);
                                                                        });
                                                                        _context63.next = 531;
                                                                        break;

                                                                    case 521:
                                                                        _context63.prev = 521;
                                                                        _context63.next = 524;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return __.conn.llen(table, call);
                                                                        });

                                                                    case 524:
                                                                        _res11 = _context63.sent;

                                                                        data.push([{ count: _res11 }]);
                                                                        _context63.next = 531;
                                                                        break;

                                                                    case 528:
                                                                        _context63.prev = 528;
                                                                        _context63.t47 = _context63['catch'](521);

                                                                        data.push([{ count: 0 }]);

                                                                    case 531:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 532:
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);

                                                                        limit = function () {
                                                                            for (var k in v.LimitParam) {
                                                                                return v.LimitParam[k];
                                                                            }
                                                                        }();

                                                                        if (!(typeof limit !== 'undefined')) {
                                                                            _context63.next = 538;
                                                                            break;
                                                                        }

                                                                        limit = limit.value || limit;

                                                                        if (!limit.type) {
                                                                            _context63.next = 538;
                                                                            break;
                                                                        }

                                                                        throw new Error('lselect limit 请输入极限值!');

                                                                    case 538:
                                                                        if (!trans) {
                                                                            _context63.next = 542;
                                                                            break;
                                                                        }

                                                                        transfunc.push(function (call) {
                                                                            return limit ? function () {
                                                                                var index = 0,
                                                                                    datas = [];
                                                                                _tool2.default.whileC(function () {
                                                                                    return index < limit ? index++ : null;
                                                                                }, function (i, call2) {
                                                                                    __.conn.lpop(table, function (e, d) {
                                                                                        d === null ? index = limit : datas.push(d);
                                                                                        call2(e);
                                                                                    });
                                                                                }, true).then(function () {
                                                                                    call(null, datas);
                                                                                }).catch(call);
                                                                            }() : __.conn.lpop(table, call);
                                                                        });
                                                                        _context63.next = 562;
                                                                        break;

                                                                    case 542:
                                                                        _context63.next = 544;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return limit ? function () {
                                                                                var index = 0,
                                                                                    datas = [];
                                                                                _tool2.default.whileC(function () {
                                                                                    return index < limit ? index++ : null;
                                                                                }, function (i, call2) {
                                                                                    __.conn.lpop(table, function (e, d) {
                                                                                        d === null ? index = limit : datas.push(d);
                                                                                        call2(e);
                                                                                    });
                                                                                }, true).then(function () {
                                                                                    call(null, datas);
                                                                                }).catch(call);
                                                                            }() : __.conn.lpop(table, call);
                                                                        });

                                                                    case 544:
                                                                        _res12 = _context63.sent;
                                                                        _context63.prev = 545;

                                                                        !_tool2.default.isArray(_res12) && (_res12 = _res12 === null ? [] : [_res12]);
                                                                        _res12.forEach(function (v, i) {
                                                                            _res12[i] = ('' + v).startsWith('{') ? __.getValues(_tool2.default.json(v), v.MethodParam) : v;
                                                                        });
                                                                        data.push(_res12);
                                                                        _context63.next = 562;
                                                                        break;

                                                                    case 551:
                                                                        _context63.prev = 551;
                                                                        _context63.t48 = _context63['catch'](545);
                                                                        _context63.t49 = _regenerator2.default.keys(v.IDs);

                                                                    case 554:
                                                                        if ((_context63.t50 = _context63.t49()).done) {
                                                                            _context63.next = 562;
                                                                            break;
                                                                        }

                                                                        _k26 = _context63.t50.value;
                                                                        _ret11 = {};

                                                                        _ret11[_k26] = _res12;
                                                                        data.push(_ret11);
                                                                        return _context63.abrupt('break', 562);

                                                                    case 562:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 563:
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);
                                                                        _value4 = key1;

                                                                        if (!trans) {
                                                                            _context63.next = 570;
                                                                            break;
                                                                        }

                                                                        transprefunc.push(function (call) {
                                                                            return __.conn.watch(table, call);
                                                                        });
                                                                        transfunc.push(function (call) {
                                                                            return __.conn.rpush(table, _value4, call);
                                                                        });
                                                                        _context63.next = 573;
                                                                        break;

                                                                    case 570:
                                                                        _context63.next = 572;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return __.conn.rpush(table, _value4, call);
                                                                        });

                                                                    case 572:
                                                                        data.push([{
                                                                            value: 1
                                                                        }]);

                                                                    case 573:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 574:
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);

                                                                        if (!trans) {
                                                                            _context63.next = 580;
                                                                            break;
                                                                        }

                                                                        transprefunc.push(function (call) {
                                                                            return __.conn.watch(table);
                                                                        });
                                                                        transfunc.push(function (call) {
                                                                            return __.conn.lrem(table, 0, key1, call);
                                                                        });
                                                                        _context63.next = 583;
                                                                        break;

                                                                    case 580:
                                                                        _context63.next = 582;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return __.conn.lrem(table, 0, key1, call);
                                                                        });

                                                                    case 582:
                                                                        data.push([{
                                                                            value: 1
                                                                        }]);

                                                                    case 583:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 584:
                                                                        if (!trans) {
                                                                            _context63.next = 588;
                                                                            break;
                                                                        }

                                                                        transfunc.push(function (call) {
                                                                            return __.conn.dbs(call);
                                                                        });
                                                                        _context63.next = 592;
                                                                        break;

                                                                    case 588:
                                                                        _context63.next = 590;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return __.conn.dbs(call);
                                                                        });

                                                                    case 590:
                                                                        _res13 = _context63.sent;

                                                                        data.push([_res13]);

                                                                    case 592:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 593:
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);
                                                                        _values4 = {};
                                                                        _context63.t51 = _regenerator2.default.keys(v.MethodParam);

                                                                    case 596:
                                                                        if ((_context63.t52 = _context63.t51()).done) {
                                                                            _context63.next = 607;
                                                                            break;
                                                                        }

                                                                        _k27 = _context63.t52.value;

                                                                        if (_k27) {
                                                                            _context63.next = 600;
                                                                            break;
                                                                        }

                                                                        return _context63.abrupt('continue', 596);

                                                                    case 600:
                                                                        _v22 = v.MethodParam[_k27];

                                                                        _v22 = typeof _v22.value === 'undefined' ? _v22 : _v22.value;
                                                                        _values4[_k27] = _v22;

                                                                        if (!(typeof _v22 === 'undefined' || _v22.type)) {
                                                                            _context63.next = 605;
                                                                            break;
                                                                        }

                                                                        throw new Error('\u53C2\u6570' + _k27 + '\u4E0D\u80FD\u4E3Aundefined');

                                                                    case 605:
                                                                        _context63.next = 596;
                                                                        break;

                                                                    case 607:
                                                                        _value5 = _values4['_value'];

                                                                        if (/^[1-9]+/.test(_value5)) {
                                                                            _context63.next = 610;
                                                                            break;
                                                                        }

                                                                        throw new Error('\u53C2\u6570_value\u5FC5\u9700\u4E3A\u6B63\u6574\u6570');

                                                                    case 610:
                                                                        if (!trans) {
                                                                            _context63.next = 615;
                                                                            break;
                                                                        }

                                                                        transprefunc.push(function (call) {
                                                                            return __.conn.watch(table, call);
                                                                        });
                                                                        transfunc.push(function (call) {
                                                                            return __.conn.hngcrby(table, key1, -_value5, _value5, call);
                                                                        });
                                                                        _context63.next = 619;
                                                                        break;

                                                                    case 615:
                                                                        _context63.next = 617;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return __.conn.hngcrby(table, key1, -_value5, _value5, call);
                                                                        });

                                                                    case 617:
                                                                        ret = _context63.sent;

                                                                        data.push([{
                                                                            value: ret
                                                                        }]);

                                                                    case 619:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 620:
                                                                        _values5 = {};
                                                                        _context63.t53 = _regenerator2.default.keys(v.MethodParam);

                                                                    case 622:
                                                                        if ((_context63.t54 = _context63.t53()).done) {
                                                                            _context63.next = 631;
                                                                            break;
                                                                        }

                                                                        _k28 = _context63.t54.value;
                                                                        _v23 = v.MethodParam[_k28];

                                                                        _v23 = typeof _v23.value === 'undefined' ? _v23 : _v23.value;
                                                                        _values5[_k28] = _v23;

                                                                        if (!(typeof _v23 === 'undefined' || _v23.type)) {
                                                                            _context63.next = 629;
                                                                            break;
                                                                        }

                                                                        throw new Error('\u53C2\u6570' + _k28 + '\u4E0D\u80FD\u4E3Aundefined');

                                                                    case 629:
                                                                        _context63.next = 622;
                                                                        break;

                                                                    case 631:
                                                                        _key5 = _tool2.default.hash2(_tool2.default.toJsonString(v.IDs)) + "";
                                                                        _value6 = _values5['_value'];

                                                                        if (/^[1-9]+/.test(_value6)) {
                                                                            _context63.next = 635;
                                                                            break;
                                                                        }

                                                                        throw new Error('\u53C2\u6570_value\u5FC5\u9700\u4E3A\u6B63\u6574\u6570');

                                                                    case 635:
                                                                        _majorkey3 = v.Table + _key5;

                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', _majorkey3);
                                                                        _func3 = null;

                                                                        _func3 = function _func3(call) {
                                                                            __.conn.ngcrby(_majorkey3, _value6, call);
                                                                        };

                                                                        if (!trans) {
                                                                            _context63.next = 643;
                                                                            break;
                                                                        }

                                                                        //transprefunc.push(call => __.conn.watch(majorkey2, call)
                                                                        transfunc.push(_func3);
                                                                        _context63.next = 647;
                                                                        break;

                                                                    case 643:
                                                                        _context63.next = 645;
                                                                        return _tool2.default.callback(_func3);

                                                                    case 645:
                                                                        _res14 = _context63.sent;

                                                                        data.push([{
                                                                            value: _res14
                                                                        }]);

                                                                    case 647:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 648:
                                                                        _datetime2 = (0, _values7.default)(v.IDs)[0];

                                                                        if (_datetime2) {
                                                                            _context63.next = 651;
                                                                            break;
                                                                        }

                                                                        throw new Error('\u53C2\u6570' + v.IDs + '\u4E0D\u80FD\u4E3Aundefined');

                                                                    case 651:
                                                                        debug && console.log(v.Method.toLowerCase().trim(), 'key:', v.Table, '=>', table);

                                                                        if (!trans) {
                                                                            _context63.next = 656;
                                                                            break;
                                                                        }

                                                                        transfunc.push(function (call) {
                                                                            return __.conn.expire(table, (parseInt(_datetime2) || 0) / 1000, call);
                                                                        });
                                                                        _context63.next = 660;
                                                                        break;

                                                                    case 656:
                                                                        _context63.next = 658;
                                                                        return _tool2.default.callback(function (call) {
                                                                            return __.conn.expire(table, (parseInt(_datetime2) || 0) / 1000, call);
                                                                        });

                                                                    case 658:
                                                                        _res15 = _context63.sent;

                                                                        data.push([_res15]);

                                                                    case 660:
                                                                        return _context63.abrupt('break', 662);

                                                                    case 661:
                                                                        throw new Error('NiRedisSqlDataFactory2 不支持的命令:' + v.Method);

                                                                    case 662:
                                                                        return _context63.abrupt('return', false);

                                                                    case 663:
                                                                    case 'end':
                                                                        return _context63.stop();
                                                                }
                                                            }
                                                        }, _callee63, _this39, [[17, 22], [136, 140], [161, 165], [182, 189], [201, 206], [227, 233], [334, 341], [397, 403], [427, 431], [458, 464], [521, 528], [545, 551]]);
                                                    }));

                                                    return function (_x55, _x56) {
                                                        return _ref66.apply(this, arguments);
                                                    };
                                                }(), true);

                                            case 10:
                                                if (!trans) {
                                                    _context66.next = 22;
                                                    break;
                                                }

                                                _context66.next = 13;
                                                return _tool2.default.each(transprefunc, function () {
                                                    var _ref67 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee64(v, call) {
                                                        return _regenerator2.default.wrap(function _callee64$(_context64) {
                                                            while (1) {
                                                                switch (_context64.prev = _context64.next) {
                                                                    case 0:
                                                                        _context64.next = 2;
                                                                        return _tool2.default.callback(v);

                                                                    case 2:
                                                                        return _context64.abrupt('return', false);

                                                                    case 3:
                                                                    case 'end':
                                                                        return _context64.stop();
                                                                }
                                                            }
                                                        }, _callee64, _this39);
                                                    }));

                                                    return function (_x57, _x58) {
                                                        return _ref67.apply(this, arguments);
                                                    };
                                                }(), true);

                                            case 13:
                                                _context66.next = 15;
                                                return __.conn.multi({
                                                    pipeline: false
                                                });

                                            case 15:
                                                _context66.next = 17;
                                                return _tool2.default.each(transfunc, function () {
                                                    var _ref68 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee65(v, call) {
                                                        return _regenerator2.default.wrap(function _callee65$(_context65) {
                                                            while (1) {
                                                                switch (_context65.prev = _context65.next) {
                                                                    case 0:
                                                                        _context65.next = 2;
                                                                        return _tool2.default.callback(v);

                                                                    case 2:
                                                                        return _context65.abrupt('return', false);

                                                                    case 3:
                                                                    case 'end':
                                                                        return _context65.stop();
                                                                }
                                                            }
                                                        }, _callee65, _this39);
                                                    }));

                                                    return function (_x59, _x60) {
                                                        return _ref68.apply(this, arguments);
                                                    };
                                                }(), true);

                                            case 17:
                                                _context66.next = 19;
                                                return _tool2.default.callback(function (call) {
                                                    return __.conn.exec(call);
                                                });

                                            case 19:
                                                rets = _context66.sent;
                                                _context66.next = 22;
                                                return _tool2.default.each(rets, function (v2) {
                                                    try {
                                                        var jsdat = ('' + v2[1]).startsWith('{') ? _tool2.default.json(v2[1]) : v2[1];
                                                        if ('' + jsdat == '' + v2[1]) data.push([{ value: jsdat }]);else data.push(jsdat);
                                                    } catch (e) {
                                                        data.push([{ value: v2[1] }]);
                                                    }
                                                    return false;
                                                });

                                            case 22:
                                                return _context66.abrupt('return', data);

                                            case 25:
                                                _context66.prev = 25;
                                                _context66.t0 = _context66['catch'](1);

                                                console.log(command, params);
                                                console.log(_context66.t0.message);
                                                throw _context66.t0;

                                            case 30:
                                            case 'end':
                                                return _context66.stop();
                                        }
                                    }
                                }, _callee66, _this39, [[1, 25]]);
                            }));

                            return function invoke(_x53, _x54) {
                                return _ref65.apply(this, arguments);
                            };
                        }()
                    }),
                        _ = _pri86._,
                        __ = _pri86.__;

                    _.params = {
                        connectionLimit: 10,
                        datetime: -1
                    };
                    return _this38;
                }

                (0, _createClass3.default)(RedisSqlConnection, [{
                    key: 'invoke',
                    value: function () {
                        var _ref69 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee67(cmd) {
                            var _pri88, _, __;

                            return _regenerator2.default.wrap(function _callee67$(_context67) {
                                while (1) {
                                    switch (_context67.prev = _context67.next) {
                                        case 0:
                                            _pri88 = pri(this), _ = _pri88._, __ = _pri88.__;

                                            if (!_.transaction) {
                                                _context67.next = 5;
                                                break;
                                            }

                                            __.cmds.push({
                                                command: cmd.command,
                                                params: cmd.params
                                            });
                                            _context67.next = 8;
                                            break;

                                        case 5:
                                            _context67.next = 7;
                                            return __.invoke(cmd.command, cmd.params);

                                        case 7:
                                            return _context67.abrupt('return', _context67.sent);

                                        case 8:
                                        case 'end':
                                            return _context67.stop();
                                    }
                                }
                            }, _callee67, this);
                        }));

                        function invoke(_x61) {
                            return _ref69.apply(this, arguments);
                        }

                        return invoke;
                    }()
                }, {
                    key: 'commit',
                    value: function () {
                        var _ref70 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee69() {
                            var _this40 = this;

                            var _pri89, _, __, data, cmds;

                            return _regenerator2.default.wrap(function _callee69$(_context69) {
                                while (1) {
                                    switch (_context69.prev = _context69.next) {
                                        case 0:
                                            _pri89 = pri(this), _ = _pri89._, __ = _pri89.__;

                                            if (!_.transaction) {
                                                _context69.next = 10;
                                                break;
                                            }

                                            //事务性处理
                                            data = [];
                                            cmds = __.cmds;

                                            __.cmds = [];
                                            _context69.next = 7;
                                            return _tool2.default.each(cmds, function () {
                                                var _ref71 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee68(v) {
                                                    return _regenerator2.default.wrap(function _callee68$(_context68) {
                                                        while (1) {
                                                            switch (_context68.prev = _context68.next) {
                                                                case 0:
                                                                    _context68.t0 = data;
                                                                    _context68.next = 3;
                                                                    return __.invoke(v.command, v.params);

                                                                case 3:
                                                                    _context68.t1 = _context68.sent;

                                                                    _context68.t0.push.call(_context68.t0, _context68.t1);

                                                                case 5:
                                                                case 'end':
                                                                    return _context68.stop();
                                                            }
                                                        }
                                                    }, _callee68, _this40);
                                                }));

                                                return function (_x62) {
                                                    return _ref71.apply(this, arguments);
                                                };
                                            }(), true);

                                        case 7:
                                            return _context69.abrupt('return', data);

                                        case 10:
                                            throw new Error('非事务条件下不可调用此方法');

                                        case 11:
                                        case 'end':
                                            return _context69.stop();
                                    }
                                }
                            }, _callee69, this);
                        }));

                        function commit() {
                            return _ref70.apply(this, arguments);
                        }

                        return commit;
                    }()
                }, {
                    key: 'open',
                    value: function () {
                        var _ref72 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee70() {
                            var _pri90, _, __, redisargs;

                            return _regenerator2.default.wrap(function _callee70$(_context70) {
                                while (1) {
                                    switch (_context70.prev = _context70.next) {
                                        case 0:
                                            _pri90 = pri(this), _ = _pri90._, __ = _pri90.__;


                                            __.host = _.params.host || '127.0.0.1';
                                            __.port = _.params.port || 6379;
                                            __.password = _.params.password || '';
                                            __.timeout = _.params.timeout || 60000;
                                            __.db = _.params.db || 0;
                                            __.family = _.params.family || 4;

                                            redisargs = {
                                                port: __.port, // Redis port 
                                                host: __.host, // Redis host 
                                                family: __.family, // 4 (IPv4) or 6 (IPv6) 
                                                password: __.password,
                                                db: __.db
                                            };

                                            __.conn = new _ioredis2.default(redisargs);
                                            __.conn.defineCommand('dbs', {
                                                numberOfKeys: 0,
                                                lua: "return redis.call('config','get','databases')[2]"
                                            });
                                            /**
                                             *
                                             * @desc 扣减库存Lua脚本
                                             * 库存（stock）-1：表示不限库存
                                             * 库存（stock）0：表示没有库存
                                             * 库存（stock）大于0：表示剩余库存
                                             *
                                             * @params 库存key
                                             * @return
                                             *      0:库存不足
                                             *      -1:库存未初始化
                                             *      大于0:剩余库存（扣减之前剩余的库存）
                                             *      redis缓存的库存(value)是-1表示不限库存，直接返回1
                                             */
                                            __.conn.defineCommand('hngcrby', {
                                                numberOfKeys: 2,
                                                lua: "if (redis.call('hexists', KEYS[1],KEYS[2]) == 1) then local stock = tonumber(redis.call('hget', KEYS[1],KEYS[2]));if (stock >= tonumber(ARGV[2])) then redis.call('hincrby', KEYS[1],KEYS[2],ARGV[1]);return stock;end;return 0;end;return -1;"
                                            });
                                            __.conn.defineCommand('ngcrby', {
                                                numberOfKeys: 1,
                                                lua: "if (redis.call('exists', KEYS[1]) == 1) then local stock = tonumber(redis.call('get', KEYS[1]));if (stock >= tonumber(ARGV[1])) then redis.call('decrby', KEYS[1],ARGV[1]);return stock;end;return 0;end;return -1;"
                                            });
                                            _context70.next = 14;
                                            return (0, _get3.default)(RedisSqlConnection.prototype.__proto__ || (0, _getPrototypeOf2.default)(RedisSqlConnection.prototype), 'open', this).call(this);

                                        case 14:
                                        case 'end':
                                            return _context70.stop();
                                    }
                                }
                            }, _callee70, this);
                        }));

                        function open() {
                            return _ref72.apply(this, arguments);
                        }

                        return open;
                    }()
                }, {
                    key: 'close',
                    value: function () {
                        var _ref73 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee71() {
                            var _pri91, _, __;

                            return _regenerator2.default.wrap(function _callee71$(_context71) {
                                while (1) {
                                    switch (_context71.prev = _context71.next) {
                                        case 0:
                                            _pri91 = pri(this), _ = _pri91._, __ = _pri91.__;

                                            try {
                                                __.conn.end();
                                            } catch (e) {}
                                            __.cmds = [];
                                            __.conn = null;
                                            _context71.next = 6;
                                            return (0, _get3.default)(RedisSqlConnection.prototype.__proto__ || (0, _getPrototypeOf2.default)(RedisSqlConnection.prototype), 'close', this).call(this);

                                        case 6:
                                        case 'end':
                                            return _context71.stop();
                                    }
                                }
                            }, _callee71, this);
                        }));

                        function close() {
                            return _ref73.apply(this, arguments);
                        }

                        return close;
                    }()
                }]);
                return RedisSqlConnection;
            }(NiDataConnection)
        }),
            _ = _pri85._,
            __ = _pri85.__;

        _.parser = parser;
        return _this37;
    }

    (0, _createClass3.default)(NiRedisSqlDataFactory2, [{
        key: 'createDBConnection',
        value: function createDBConnection() {
            var _pri92 = pri(this),
                _ = _pri92._,
                __ = _pri92.__;

            return new __.RedisSqlConnection();
        }
    }, {
        key: 'backDBConnection',
        value: function backDBConnection(conn) {
            conn.close();
        }
    }]);
    return NiRedisSqlDataFactory2;
}(NiDataFactory);
var NiRedisSqlDataFactory = exports.NiRedisSqlDataFactory = NiRedisSqlDataFactory2;

//todo  wcf

/**
 * NiUrlDataFactory
 * 自动调用远程URL
 */
var NiUrlDataFactory = exports.NiUrlDataFactory = function (_NiDataFactory7) {
    (0, _inherits3.default)(NiUrlDataFactory, _NiDataFactory7);

    function NiUrlDataFactory() {
        (0, _classCallCheck3.default)(this, NiUrlDataFactory);

        var _this41 = (0, _possibleConstructorReturn3.default)(this, (NiUrlDataFactory.__proto__ || (0, _getPrototypeOf2.default)(NiUrlDataFactory)).call(this));

        var that = _this41;
        that.regex = new RegExp('^((http|https):\\/\\/[\\w\\-_]+(\.[\\w\\-_]+)+([\\w\\-\\.,@?^=%&amp;:/~\\+#]*[\\w\\-\\@?^=%&amp;/~\+#])?)$', 'i');

        var _pri93 = pri(that, {
            UrlConnection: function (_NiDataConnection7) {
                (0, _inherits3.default)(UrlConnection, _NiDataConnection7);

                function UrlConnection() {
                    var _this43 = this;

                    (0, _classCallCheck3.default)(this, UrlConnection);

                    var _this42 = (0, _possibleConstructorReturn3.default)(this, (UrlConnection.__proto__ || (0, _getPrototypeOf2.default)(UrlConnection)).call(this));

                    var thats = _this42;

                    var _pri94 = pri(_this42, {
                        cmds: [],
                        host: "",
                        port: "",
                        method: "",
                        timeout: 60000,
                        invoke: function () {
                            var _ref74 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee73(command, params) {
                                var _pri95, _, __, args, i, func, data;

                                return _regenerator2.default.wrap(function _callee73$(_context73) {
                                    while (1) {
                                        switch (_context73.prev = _context73.next) {
                                            case 0:
                                                _pri95 = pri(thats), _ = _pri95._, __ = _pri95.__;
                                                _context73.prev = 1;
                                                args = params.args ? params.args.value : params;

                                                for (i in args) {
                                                    if (args[i].value) args[i] = args[i].value;
                                                }

                                                func = function () {
                                                    switch ((args['_method'] || __.method).toLowerCase()) {
                                                        case 'get':
                                                            delete args['_method'];
                                                            args = _querystring2.default.stringify(args);
                                                            return _tool4.default.get;
                                                        case 'post':
                                                        default:
                                                            delete args['_method'];
                                                            args = _querystring2.default.stringify(args);
                                                            return _tool4.default.post;
                                                        case 'postjson':
                                                            delete args['_method'];
                                                            return _tool4.default.postJson;
                                                    }
                                                }(); //立即执行函数获取返回值


                                                data = [];
                                                _context73.next = 8;
                                                return _tool2.default.each(command.split(';'), function () {
                                                    var _ref75 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee72(v) {
                                                        var text;
                                                        return _regenerator2.default.wrap(function _callee72$(_context72) {
                                                            while (1) {
                                                                switch (_context72.prev = _context72.next) {
                                                                    case 0:
                                                                        v = v.trim();
                                                                        if (v.indexOf(':') < 0 && v.indexOf('//') < 0) v = function () {
                                                                            var h = __.host.length > 0 ? __.host[_tool2.default.random() % __.host.length] : __.host[0];
                                                                            if (h.indexOf(':') < 0 && h.indexOf('//') < 0) h = 'http://' + h;
                                                                            return h;
                                                                        }() + (_tool2.default.isValid(__.port) && __.port + "" != '80' ? ":" + __.port : "") + v;

                                                                        if (!that.regex.test(v)) {
                                                                            _context72.next = 12;
                                                                            break;
                                                                        }

                                                                        _context72.next = 5;
                                                                        return func(v, args);

                                                                    case 5:
                                                                        _context72.t0 = _context72.sent;

                                                                        if (_context72.t0) {
                                                                            _context72.next = 8;
                                                                            break;
                                                                        }

                                                                        _context72.t0 = '';

                                                                    case 8:
                                                                        text = _context72.t0;

                                                                        try {
                                                                            data.push([_tool2.default.json(text)]);
                                                                        } catch (e) {
                                                                            data.push([{ text: text }]);
                                                                        }
                                                                        _context72.next = 13;
                                                                        break;

                                                                    case 12:
                                                                        throw new Error('\u9519\u8BEF\u7684\u8DEF\u5F84' + v);

                                                                    case 13:
                                                                        return _context72.abrupt('return', false);

                                                                    case 14:
                                                                    case 'end':
                                                                        return _context72.stop();
                                                                }
                                                            }
                                                        }, _callee72, _this43);
                                                    }));

                                                    return function (_x65) {
                                                        return _ref75.apply(this, arguments);
                                                    };
                                                }(), true);

                                            case 8:
                                                return _context73.abrupt('return', data);

                                            case 11:
                                                _context73.prev = 11;
                                                _context73.t0 = _context73['catch'](1);

                                                console.log(command, params);
                                                console.log(_context73.t0.message);
                                                throw _context73.t0;

                                            case 16:
                                            case 'end':
                                                return _context73.stop();
                                        }
                                    }
                                }, _callee73, _this43, [[1, 11]]);
                            }));

                            return function invoke(_x63, _x64) {
                                return _ref74.apply(this, arguments);
                            };
                        }()
                    }),
                        _ = _pri94._,
                        __ = _pri94.__;

                    return _this42;
                }

                (0, _createClass3.default)(UrlConnection, [{
                    key: 'open',
                    value: function () {
                        var _ref76 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee74() {
                            var _pri96, _, __;

                            return _regenerator2.default.wrap(function _callee74$(_context74) {
                                while (1) {
                                    switch (_context74.prev = _context74.next) {
                                        case 0:
                                            _pri96 = pri(this), _ = _pri96._, __ = _pri96.__;

                                            __.host = (_.params.host || '').split(';');
                                            __.port = _.params.port || 80;
                                            __.method = _.params.method || 'POST';
                                            __.timeout = _.params.timeout || 60000;
                                            _context74.next = 7;
                                            return (0, _get3.default)(UrlConnection.prototype.__proto__ || (0, _getPrototypeOf2.default)(UrlConnection.prototype), 'open', this).call(this);

                                        case 7:
                                        case 'end':
                                            return _context74.stop();
                                    }
                                }
                            }, _callee74, this);
                        }));

                        function open() {
                            return _ref76.apply(this, arguments);
                        }

                        return open;
                    }()
                }, {
                    key: 'close',
                    value: function () {
                        var _ref77 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee75() {
                            return _regenerator2.default.wrap(function _callee75$(_context75) {
                                while (1) {
                                    switch (_context75.prev = _context75.next) {
                                        case 0:
                                            _context75.next = 2;
                                            return (0, _get3.default)(UrlConnection.prototype.__proto__ || (0, _getPrototypeOf2.default)(UrlConnection.prototype), 'close', this).call(this);

                                        case 2:
                                        case 'end':
                                            return _context75.stop();
                                    }
                                }
                            }, _callee75, this);
                        }));

                        function close() {
                            return _ref77.apply(this, arguments);
                        }

                        return close;
                    }()
                }, {
                    key: 'invoke',
                    value: function () {
                        var _ref78 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee76(cmd) {
                            var _pri97, _, __;

                            return _regenerator2.default.wrap(function _callee76$(_context76) {
                                while (1) {
                                    switch (_context76.prev = _context76.next) {
                                        case 0:
                                            _pri97 = pri(this), _ = _pri97._, __ = _pri97.__;

                                            if (!_.transaction) {
                                                _context76.next = 5;
                                                break;
                                            }

                                            __.cmds.push({
                                                command: cmd.command,
                                                params: cmd.params
                                            });
                                            _context76.next = 8;
                                            break;

                                        case 5:
                                            _context76.next = 7;
                                            return __.invoke(cmd.command, cmd.params);

                                        case 7:
                                            return _context76.abrupt('return', _context76.sent);

                                        case 8:
                                        case 'end':
                                            return _context76.stop();
                                    }
                                }
                            }, _callee76, this);
                        }));

                        function invoke(_x66) {
                            return _ref78.apply(this, arguments);
                        }

                        return invoke;
                    }()
                }, {
                    key: 'commit',
                    value: function () {
                        var _ref79 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee78() {
                            var _this44 = this;

                            var _pri98, _, __, data, cmds;

                            return _regenerator2.default.wrap(function _callee78$(_context78) {
                                while (1) {
                                    switch (_context78.prev = _context78.next) {
                                        case 0:
                                            _pri98 = pri(this), _ = _pri98._, __ = _pri98.__;

                                            if (!_.transaction) {
                                                _context78.next = 10;
                                                break;
                                            }

                                            //事务性处理
                                            data = [];
                                            cmds = __.cmds;

                                            __.cmds = [];
                                            _context78.next = 7;
                                            return _tool2.default.each(cmds, function () {
                                                var _ref80 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee77(v) {
                                                    return _regenerator2.default.wrap(function _callee77$(_context77) {
                                                        while (1) {
                                                            switch (_context77.prev = _context77.next) {
                                                                case 0:
                                                                    _context77.t0 = data;
                                                                    _context77.next = 3;
                                                                    return __.invoke(v.command, v.params);

                                                                case 3:
                                                                    _context77.t1 = _context77.sent;

                                                                    _context77.t0.push.call(_context77.t0, _context77.t1);

                                                                    return _context77.abrupt('return', false);

                                                                case 6:
                                                                case 'end':
                                                                    return _context77.stop();
                                                            }
                                                        }
                                                    }, _callee77, _this44);
                                                }));

                                                return function (_x67) {
                                                    return _ref80.apply(this, arguments);
                                                };
                                            }(), true);

                                        case 7:
                                            return _context78.abrupt('return', data);

                                        case 10:
                                            throw new Error('非事务条件下不可调用此方法');

                                        case 11:
                                        case 'end':
                                            return _context78.stop();
                                    }
                                }
                            }, _callee78, this);
                        }));

                        function commit() {
                            return _ref79.apply(this, arguments);
                        }

                        return commit;
                    }()
                }]);
                return UrlConnection;
            }(NiDataConnection)
        }),
            _ = _pri93._,
            __ = _pri93.__;

        return _this41;
    }

    (0, _createClass3.default)(NiUrlDataFactory, [{
        key: 'createDBConnection',
        value: function createDBConnection() {
            var _pri99 = pri(this),
                _ = _pri99._,
                __ = _pri99.__;

            return new __.UrlConnection();
        }
    }]);
    return NiUrlDataFactory;
}(NiDataFactory);

/**
 * NiSoapDataFactory
 * soap数据源支持
 */
var NiSoapDataFactory = exports.NiSoapDataFactory = function (_NiDataFactory8) {
    (0, _inherits3.default)(NiSoapDataFactory, _NiDataFactory8);

    function NiSoapDataFactory() {
        (0, _classCallCheck3.default)(this, NiSoapDataFactory);

        var _this45 = (0, _possibleConstructorReturn3.default)(this, (NiSoapDataFactory.__proto__ || (0, _getPrototypeOf2.default)(NiSoapDataFactory)).call(this));

        var that = _this45;

        var _pri100 = pri(that, {
            SoapConnection: function (_NiDataConnection8) {
                (0, _inherits3.default)(SoapConnection, _NiDataConnection8);

                function SoapConnection() {
                    var _this47 = this;

                    (0, _classCallCheck3.default)(this, SoapConnection);

                    var _this46 = (0, _possibleConstructorReturn3.default)(this, (SoapConnection.__proto__ || (0, _getPrototypeOf2.default)(SoapConnection)).call(this));

                    var thats = _this46;

                    var _pri101 = pri(_this46, {
                        cmds: [],
                        host: "",
                        port: "",
                        method: "",
                        // control: "",
                        timeout: 60000,
                        invoke: function () {
                            var _ref81 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee79(command, params) {
                                var _pri102, _, __, wcfurl, wcfmethod, wcfargs, args, i, client, ret;

                                return _regenerator2.default.wrap(function _callee79$(_context79) {
                                    while (1) {
                                        switch (_context79.prev = _context79.next) {
                                            case 0:
                                                _pri102 = pri(thats), _ = _pri102._, __ = _pri102.__;
                                                wcfurl = __.host;
                                                wcfmethod = command;
                                                wcfargs = {};
                                                args = params.args ? params.args.value : params;

                                                for (i in args) {
                                                    wcfargs[i] = args[i].value;
                                                }
                                                _context79.next = 8;
                                                return _tool2.default.callback2(_soap2.default.createClient, _soap2.default, wcfurl);

                                            case 8:
                                                client = _context79.sent;

                                                if (!(client && client[wcfmethod])) {
                                                    _context79.next = 20;
                                                    break;
                                                }

                                                _context79.next = 12;
                                                return _tool2.default.callback2(client[wcfmethod], client, wcfargs);

                                            case 12:
                                                _context79.t0 = _context79.sent;

                                                if (_context79.t0) {
                                                    _context79.next = 15;
                                                    break;
                                                }

                                                _context79.t0 = {};

                                            case 15:
                                                ret = _context79.t0;

                                                if (_tool2.default.getType(ret).toLowerCase() != 'array') ret = [[ret]];
                                                return _context79.abrupt('return', ret);

                                            case 20:
                                                throw new Error('\u83B7\u53D6client\u5931\u8D25\u6216\u8005\u6CA1\u6709\u627E\u5230' + wcfmethod + '\u65B9\u6CD5');

                                            case 21:
                                            case 'end':
                                                return _context79.stop();
                                        }
                                    }
                                }, _callee79, _this47);
                            }));

                            return function invoke(_x68, _x69) {
                                return _ref81.apply(this, arguments);
                            };
                        }()
                    }),
                        _ = _pri101._,
                        __ = _pri101.__;

                    return _this46;
                }

                (0, _createClass3.default)(SoapConnection, [{
                    key: 'open',
                    value: function () {
                        var _ref82 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee80() {
                            var _pri103, _, __;

                            return _regenerator2.default.wrap(function _callee80$(_context80) {
                                while (1) {
                                    switch (_context80.prev = _context80.next) {
                                        case 0:
                                            _pri103 = pri(this), _ = _pri103._, __ = _pri103.__;


                                            __.host = _.params.host || null;
                                            __.port = _.params.port || 80;
                                            __.timeout = __.timeout || 60000;
                                            _context80.next = 6;
                                            return (0, _get3.default)(SoapConnection.prototype.__proto__ || (0, _getPrototypeOf2.default)(SoapConnection.prototype), 'open', this).call(this);

                                        case 6:
                                        case 'end':
                                            return _context80.stop();
                                    }
                                }
                            }, _callee80, this);
                        }));

                        function open() {
                            return _ref82.apply(this, arguments);
                        }

                        return open;
                    }()
                }, {
                    key: 'close',
                    value: function () {
                        var _ref83 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee81() {
                            return _regenerator2.default.wrap(function _callee81$(_context81) {
                                while (1) {
                                    switch (_context81.prev = _context81.next) {
                                        case 0:
                                            _context81.next = 2;
                                            return (0, _get3.default)(SoapConnection.prototype.__proto__ || (0, _getPrototypeOf2.default)(SoapConnection.prototype), 'close', this).call(this);

                                        case 2:
                                        case 'end':
                                            return _context81.stop();
                                    }
                                }
                            }, _callee81, this);
                        }));

                        function close() {
                            return _ref83.apply(this, arguments);
                        }

                        return close;
                    }()
                }, {
                    key: 'invoke',
                    value: function () {
                        var _ref84 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee82(cmd) {
                            var _pri104, _, __;

                            return _regenerator2.default.wrap(function _callee82$(_context82) {
                                while (1) {
                                    switch (_context82.prev = _context82.next) {
                                        case 0:
                                            _pri104 = pri(this), _ = _pri104._, __ = _pri104.__;

                                            if (!_.transaction) {
                                                _context82.next = 5;
                                                break;
                                            }

                                            __.cmds.push({
                                                command: cmd.command,
                                                params: cmd.params
                                            });
                                            _context82.next = 8;
                                            break;

                                        case 5:
                                            _context82.next = 7;
                                            return __.invoke(cmd.command, cmd.params);

                                        case 7:
                                            return _context82.abrupt('return', _context82.sent);

                                        case 8:
                                        case 'end':
                                            return _context82.stop();
                                    }
                                }
                            }, _callee82, this);
                        }));

                        function invoke(_x70) {
                            return _ref84.apply(this, arguments);
                        }

                        return invoke;
                    }()
                }, {
                    key: 'commit',
                    value: function () {
                        var _ref85 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee84() {
                            var _this48 = this;

                            var _pri105, _, __, data;

                            return _regenerator2.default.wrap(function _callee84$(_context84) {
                                while (1) {
                                    switch (_context84.prev = _context84.next) {
                                        case 0:
                                            _pri105 = pri(this), _ = _pri105._, __ = _pri105.__;

                                            if (!_.transaction) {
                                                _context84.next = 9;
                                                break;
                                            }

                                            //事务性处理
                                            data = [];
                                            _context84.next = 5;
                                            return _tool2.default.each(__.cmds, function () {
                                                var _ref86 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee83(v) {
                                                    return _regenerator2.default.wrap(function _callee83$(_context83) {
                                                        while (1) {
                                                            switch (_context83.prev = _context83.next) {
                                                                case 0:
                                                                    _context83.t0 = data;
                                                                    _context83.next = 3;
                                                                    return __.invoke(v.command, v.params);

                                                                case 3:
                                                                    _context83.t1 = _context83.sent;

                                                                    _context83.t0.push.call(_context83.t0, _context83.t1);

                                                                    return _context83.abrupt('return', false);

                                                                case 6:
                                                                case 'end':
                                                                    return _context83.stop();
                                                            }
                                                        }
                                                    }, _callee83, _this48);
                                                }));

                                                return function (_x71) {
                                                    return _ref86.apply(this, arguments);
                                                };
                                            }(), true);

                                        case 5:
                                            __.cmds = [];
                                            return _context84.abrupt('return', data);

                                        case 9:
                                            throw new Error('非事务条件下不可调用此方法');

                                        case 10:
                                        case 'end':
                                            return _context84.stop();
                                    }
                                }
                            }, _callee84, this);
                        }));

                        function commit() {
                            return _ref85.apply(this, arguments);
                        }

                        return commit;
                    }()
                }]);
                return SoapConnection;
            }(NiDataConnection)
        }),
            _ = _pri100._,
            __ = _pri100.__;

        return _this45;
    }

    (0, _createClass3.default)(NiSoapDataFactory, [{
        key: 'createDBConnection',
        value: function createDBConnection() {
            var _pri106 = pri(this),
                _ = _pri106._,
                __ = _pri106.__;

            return new __.SoapConnection();
        }
    }]);
    return NiSoapDataFactory;
}(NiDataFactory);

/**
 * NiMailDataFactory
 * 自动调用Mail服务器发送邮件
 * https://www.npmjs.com/package/emailjs
 * {
            text: '测试内容2', // text of the email 
            from: '26342049@qq.com', // sender of the format (address or name <address> or "name" <address>)
            to: 'baibing0004@sohu.com', // recipients (same format as above), multiple recipients are separated by a comma
            cc: '', // carbon copied recipients (same format as above)
            bcc: '', // blind carbon copied recipients (same format as above)
            subject: '测试邮件', // string subject of the email
            attachment: [
                    { data: "<html>i <i>测试啊测试</i> this works!</html>", alternative: true },
                    { path: "/Users/&&&/Downloads/福岛核辐射.jpg", type: M2.get("福岛核辐射2.jpg"), name: "福岛核辐射2.jpg" }
                ]
                // one attachment or array of attachments
        }
 */
var NiMailDataFactory = exports.NiMailDataFactory = function (_NiDataFactory9) {
    (0, _inherits3.default)(NiMailDataFactory, _NiDataFactory9);

    function NiMailDataFactory() {
        (0, _classCallCheck3.default)(this, NiMailDataFactory);

        var _this49 = (0, _possibleConstructorReturn3.default)(this, (NiMailDataFactory.__proto__ || (0, _getPrototypeOf2.default)(NiMailDataFactory)).call(this));

        var that = _this49;

        var _pri107 = pri(that, {
            MailConnection: function (_NiDataConnection9) {
                (0, _inherits3.default)(MailConnection, _NiDataConnection9);

                function MailConnection() {
                    var _this51 = this;

                    (0, _classCallCheck3.default)(this, MailConnection);

                    var _this50 = (0, _possibleConstructorReturn3.default)(this, (MailConnection.__proto__ || (0, _getPrototypeOf2.default)(MailConnection)).call(this));

                    var thats = _this50;

                    var _pri108 = pri(_this50, {
                        cmds: [],
                        invoke: function () {
                            var _ref87 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee85(command, params) {
                                var _pri109, _, __, args, i, data;

                                return _regenerator2.default.wrap(function _callee85$(_context85) {
                                    while (1) {
                                        switch (_context85.prev = _context85.next) {
                                            case 0:
                                                _pri109 = pri(thats), _ = _pri109._, __ = _pri109.__;

                                                if (__.conn) {
                                                    _context85.next = 3;
                                                    break;
                                                }

                                                throw new Error('请先连接Mail服务器');

                                            case 3:
                                                args = params.args ? params.args.value : params;

                                                for (i in args) {
                                                    if (args[i].value) args[i] = args[i].value;
                                                }
                                                _context85.prev = 5;
                                                data = [];
                                                _context85.next = 9;
                                                return _tool2.default.callback(__.conn.send, __.conn, args);

                                            case 9:
                                                data.push([{
                                                    success: true
                                                }]);
                                                return _context85.abrupt('return', data);

                                            case 13:
                                                _context85.prev = 13;
                                                _context85.t0 = _context85['catch'](5);

                                                console.log(command, params);
                                                console.log(_context85.t0.message);
                                                throw _context85.t0;

                                            case 18:
                                            case 'end':
                                                return _context85.stop();
                                        }
                                    }
                                }, _callee85, _this51, [[5, 13]]);
                            }));

                            return function invoke(_x72, _x73) {
                                return _ref87.apply(this, arguments);
                            };
                        }()
                    }),
                        _ = _pri108._,
                        __ = _pri108.__;

                    return _this50;
                }

                (0, _createClass3.default)(MailConnection, [{
                    key: 'open',
                    value: function () {
                        var _ref88 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee86() {
                            var _pri110, _, __;

                            return _regenerator2.default.wrap(function _callee86$(_context86) {
                                while (1) {
                                    switch (_context86.prev = _context86.next) {
                                        case 0:
                                            _pri110 = pri(this), _ = _pri110._, __ = _pri110.__;
                                            //user:	"username",   password:"password",  host:	"smtp.your-email.com",

                                            __.conn = _emailjs2.default.server.connect(_tool2.default.merge({
                                                ssl: true
                                            }, _.params));
                                            _context86.next = 4;
                                            return (0, _get3.default)(MailConnection.prototype.__proto__ || (0, _getPrototypeOf2.default)(MailConnection.prototype), 'open', this).call(this);

                                        case 4:
                                        case 'end':
                                            return _context86.stop();
                                    }
                                }
                            }, _callee86, this);
                        }));

                        function open() {
                            return _ref88.apply(this, arguments);
                        }

                        return open;
                    }()
                }, {
                    key: 'close',
                    value: function () {
                        var _ref89 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee87() {
                            return _regenerator2.default.wrap(function _callee87$(_context87) {
                                while (1) {
                                    switch (_context87.prev = _context87.next) {
                                        case 0:
                                            __.conn = null;
                                            _context87.next = 3;
                                            return (0, _get3.default)(MailConnection.prototype.__proto__ || (0, _getPrototypeOf2.default)(MailConnection.prototype), 'close', this).call(this);

                                        case 3:
                                        case 'end':
                                            return _context87.stop();
                                    }
                                }
                            }, _callee87, this);
                        }));

                        function close() {
                            return _ref89.apply(this, arguments);
                        }

                        return close;
                    }()
                }, {
                    key: 'invoke',
                    value: function () {
                        var _ref90 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee88(cmd) {
                            var _pri111, _, __;

                            return _regenerator2.default.wrap(function _callee88$(_context88) {
                                while (1) {
                                    switch (_context88.prev = _context88.next) {
                                        case 0:
                                            _pri111 = pri(this), _ = _pri111._, __ = _pri111.__;

                                            if (!_.transaction) {
                                                _context88.next = 5;
                                                break;
                                            }

                                            __.cmds.push({
                                                command: cmd.command,
                                                params: cmd.params
                                            });
                                            _context88.next = 8;
                                            break;

                                        case 5:
                                            _context88.next = 7;
                                            return __.invoke(cmd.command, cmd.params);

                                        case 7:
                                            return _context88.abrupt('return', _context88.sent);

                                        case 8:
                                        case 'end':
                                            return _context88.stop();
                                    }
                                }
                            }, _callee88, this);
                        }));

                        function invoke(_x74) {
                            return _ref90.apply(this, arguments);
                        }

                        return invoke;
                    }()
                }, {
                    key: 'commit',
                    value: function () {
                        var _ref91 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee90() {
                            var _this52 = this;

                            var _pri112, _, __, data, cmds;

                            return _regenerator2.default.wrap(function _callee90$(_context90) {
                                while (1) {
                                    switch (_context90.prev = _context90.next) {
                                        case 0:
                                            _pri112 = pri(this), _ = _pri112._, __ = _pri112.__;

                                            if (!_.transaction) {
                                                _context90.next = 10;
                                                break;
                                            }

                                            //事务性处理
                                            data = [];
                                            cmds = __.cmds;

                                            __.cmds = [];
                                            _context90.next = 7;
                                            return _tool2.default.each(cmds, function () {
                                                var _ref92 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee89(v) {
                                                    return _regenerator2.default.wrap(function _callee89$(_context89) {
                                                        while (1) {
                                                            switch (_context89.prev = _context89.next) {
                                                                case 0:
                                                                    _context89.t0 = data;
                                                                    _context89.next = 3;
                                                                    return __.invoke(v.command, v.params);

                                                                case 3:
                                                                    _context89.t1 = _context89.sent;

                                                                    _context89.t0.push.call(_context89.t0, _context89.t1);

                                                                case 5:
                                                                case 'end':
                                                                    return _context89.stop();
                                                            }
                                                        }
                                                    }, _callee89, _this52);
                                                }));

                                                return function (_x75) {
                                                    return _ref92.apply(this, arguments);
                                                };
                                            }(), true);

                                        case 7:
                                            return _context90.abrupt('return', data);

                                        case 10:
                                            throw new Error('非事务条件下不可调用此方法');

                                        case 11:
                                        case 'end':
                                            return _context90.stop();
                                    }
                                }
                            }, _callee90, this);
                        }));

                        function commit() {
                            return _ref91.apply(this, arguments);
                        }

                        return commit;
                    }()
                }]);
                return MailConnection;
            }(NiDataConnection)
        }),
            _ = _pri107._,
            __ = _pri107.__;

        return _this49;
    }

    (0, _createClass3.default)(NiMailDataFactory, [{
        key: 'createDBConnection',
        value: function createDBConnection() {
            var _pri113 = pri(this),
                _ = _pri113._,
                __ = _pri113.__;

            return new __.MailConnection();
        }
    }]);
    return NiMailDataFactory;
}(NiDataFactory);

/**
 * es 池连接方式工厂
 */
var NiElasticSearchDataFactory = exports.NiElasticSearchDataFactory = function (_NiDataFactory10) {
    (0, _inherits3.default)(NiElasticSearchDataFactory, _NiDataFactory10);

    function NiElasticSearchDataFactory() {
        (0, _classCallCheck3.default)(this, NiElasticSearchDataFactory);

        var _this53 = (0, _possibleConstructorReturn3.default)(this, (NiElasticSearchDataFactory.__proto__ || (0, _getPrototypeOf2.default)(NiElasticSearchDataFactory)).call(this));

        var that = _this53;
        that.idic = {};

        var _pri114 = pri(that, {
            ElasticSearchConnection: function (_NiDataConnection10) {
                (0, _inherits3.default)(ElasticSearchConnection, _NiDataConnection10);

                function ElasticSearchConnection() {
                    var _this55 = this;

                    (0, _classCallCheck3.default)(this, ElasticSearchConnection);

                    var _this54 = (0, _possibleConstructorReturn3.default)(this, (ElasticSearchConnection.__proto__ || (0, _getPrototypeOf2.default)(ElasticSearchConnection)).call(this));

                    var that = _this54;

                    var _pri115 = pri(_this54, {
                        cmds: [],
                        conn: null,
                        invoke: function () {
                            var _ref93 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee91(command, params) {
                                var _pri116, _10, _11, args, i, result, data;

                                return _regenerator2.default.wrap(function _callee91$(_context91) {
                                    while (1) {
                                        switch (_context91.prev = _context91.next) {
                                            case 0:
                                                _context91.prev = 0;
                                                _pri116 = pri(that), _10 = _pri116._, _11 = _pri116.__;
                                                args = params.args ? params.args.value : params;

                                                for (i in args) {
                                                    if (args[i].value) args[i] = args[i].value;
                                                }

                                                _context91.next = 6;
                                                return _tool2.default.callback(_11.conn.create, _11.conn, _tool2.default.merge({
                                                    index: '',
                                                    type: 'logs',
                                                    id: '',
                                                    body: {
                                                        title: '',
                                                        message: ''
                                                    }
                                                }, args));

                                            case 6:
                                                result = _context91.sent;
                                                data = [];

                                                data.push([{
                                                    success: true
                                                }]);

                                                return _context91.abrupt('return', data);

                                            case 12:
                                                _context91.prev = 12;
                                                _context91.t0 = _context91['catch'](0);

                                                console.log(command, params);
                                                console.log(_context91.t0.message);
                                                throw _context91.t0;

                                            case 17:
                                            case 'end':
                                                return _context91.stop();
                                        }
                                    }
                                }, _callee91, _this55, [[0, 12]]);
                            }));

                            return function invoke(_x76, _x77) {
                                return _ref93.apply(this, arguments);
                            };
                        }()
                    }),
                        _ = _pri115._,
                        __ = _pri115.__;

                    _.params = {
                        host: ''
                    };
                    return _this54;
                }

                (0, _createClass3.default)(ElasticSearchConnection, [{
                    key: 'invoke',
                    value: function () {
                        var _ref94 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee92(cmd) {
                            var _pri117, _, __;

                            return _regenerator2.default.wrap(function _callee92$(_context92) {
                                while (1) {
                                    switch (_context92.prev = _context92.next) {
                                        case 0:
                                            //需要处理单条与多条s
                                            _pri117 = pri(this), _ = _pri117._, __ = _pri117.__;

                                            if (!_.transaction) {
                                                _context92.next = 5;
                                                break;
                                            }

                                            __.cmds.push({
                                                command: cmd.command,
                                                params: cmd.params
                                            });
                                            _context92.next = 8;
                                            break;

                                        case 5:
                                            _context92.next = 7;
                                            return __.invoke(cmd.command, cmd.params);

                                        case 7:
                                            return _context92.abrupt('return', _context92.sent);

                                        case 8:
                                        case 'end':
                                            return _context92.stop();
                                    }
                                }
                            }, _callee92, this);
                        }));

                        function invoke(_x78) {
                            return _ref94.apply(this, arguments);
                        }

                        return invoke;
                    }()
                }, {
                    key: 'commit',
                    value: function () {
                        var _ref95 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee94() {
                            var _this56 = this;

                            var _pri118, _, __, data, cmds;

                            return _regenerator2.default.wrap(function _callee94$(_context94) {
                                while (1) {
                                    switch (_context94.prev = _context94.next) {
                                        case 0:
                                            _pri118 = pri(this), _ = _pri118._, __ = _pri118.__;

                                            if (!_.transaction) {
                                                _context94.next = 16;
                                                break;
                                            }

                                            _context94.prev = 2;
                                            data = [];
                                            cmds = __.cmds;

                                            __.cmds = [];
                                            _context94.next = 8;
                                            return _tool2.default.each(cmds, function () {
                                                var _ref96 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee93(v) {
                                                    return _regenerator2.default.wrap(function _callee93$(_context93) {
                                                        while (1) {
                                                            switch (_context93.prev = _context93.next) {
                                                                case 0:
                                                                    _context93.t0 = data;
                                                                    _context93.next = 3;
                                                                    return __.invoke(v.command, v.params);

                                                                case 3:
                                                                    _context93.t1 = _context93.sent;

                                                                    _context93.t0.push.call(_context93.t0, _context93.t1);

                                                                    return _context93.abrupt('return', false);

                                                                case 6:
                                                                case 'end':
                                                                    return _context93.stop();
                                                            }
                                                        }
                                                    }, _callee93, _this56);
                                                }));

                                                return function (_x79) {
                                                    return _ref96.apply(this, arguments);
                                                };
                                            }(), true);

                                        case 8:
                                            return _context94.abrupt('return', data);

                                        case 11:
                                            _context94.prev = 11;
                                            _context94.t0 = _context94['catch'](2);
                                            throw _context94.t0;

                                        case 14:
                                            _context94.next = 17;
                                            break;

                                        case 16:
                                            throw new Error('非事务条件下不可调用此方法');

                                        case 17:
                                        case 'end':
                                            return _context94.stop();
                                    }
                                }
                            }, _callee94, this, [[2, 11]]);
                        }));

                        function commit() {
                            return _ref95.apply(this, arguments);
                        }

                        return commit;
                    }()
                }, {
                    key: 'open',
                    value: function () {
                        var _ref97 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee95() {
                            var _pri119, _, __;

                            return _regenerator2.default.wrap(function _callee95$(_context95) {
                                while (1) {
                                    switch (_context95.prev = _context95.next) {
                                        case 0:
                                            _pri119 = pri(this), _ = _pri119._, __ = _pri119.__;

                                            __.conn = new _elasticsearch2.default.Client(_tool2.default.merge({
                                                log: 'trace'
                                            }, _.params));
                                            _context95.next = 4;
                                            return (0, _get3.default)(ElasticSearchConnection.prototype.__proto__ || (0, _getPrototypeOf2.default)(ElasticSearchConnection.prototype), 'open', this).call(this);

                                        case 4:
                                        case 'end':
                                            return _context95.stop();
                                    }
                                }
                            }, _callee95, this);
                        }));

                        function open() {
                            return _ref97.apply(this, arguments);
                        }

                        return open;
                    }()
                }, {
                    key: 'close',
                    value: function () {
                        var _ref98 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee96() {
                            var _pri120, _, __;

                            return _regenerator2.default.wrap(function _callee96$(_context96) {
                                while (1) {
                                    switch (_context96.prev = _context96.next) {
                                        case 0:
                                            _pri120 = pri(this), _ = _pri120._, __ = _pri120.__;

                                            try {
                                                if (__.conn && __.conn.release) __.conn.release();else if (__.conn && __.conn.end) __.conn.end();else if (__.conn && __.conn.dispose) __.conn.dispose();
                                            } catch (e) {}
                                            __.cmds = [];
                                            __.conn = null;
                                            _context96.next = 6;
                                            return (0, _get3.default)(ElasticSearchConnection.prototype.__proto__ || (0, _getPrototypeOf2.default)(ElasticSearchConnection.prototype), 'close', this).call(this);

                                        case 6:
                                        case 'end':
                                            return _context96.stop();
                                    }
                                }
                            }, _callee96, this);
                        }));

                        function close() {
                            return _ref98.apply(this, arguments);
                        }

                        return close;
                    }()
                }]);
                return ElasticSearchConnection;
            }(NiDataConnection)
        }),
            _ = _pri114._,
            __ = _pri114.__;

        return _this53;
    }

    (0, _createClass3.default)(NiElasticSearchDataFactory, [{
        key: 'createDBConnection',
        value: function createDBConnection() {
            var _pri121 = pri(this),
                _ = _pri121._,
                __ = _pri121.__;

            return new __.ElasticSearchConnection();
        }
    }, {
        key: 'dispose',
        value: function dispose() {
            var _pri122 = pri(this),
                _ = _pri122._,
                __ = _pri122.__;

            _tool2.default.tryC(function () {
                __.conn.dispose();
            });
        }
    }]);
    return NiElasticSearchDataFactory;
}(NiDataFactory);

exports.default = {
    NiDataConfig: NiDataConfig,
    NiDataConfigConvert: NiDataConfigConvert,
    NiTemplate: NiTemplate,
    NiTemplateManager: NiTemplateManager,
    NiDataResult: NiDataResult,
    NiDataResource: NiDataResource,
    NiInstanceDataResource: NiInstanceDataResource,
    NiStaticDataResource: NiStaticDataResource,
    NiPoolDataResource: NiPoolDataResource,
    NiDataFactory: NiDataFactory,
    NiDataConnection: NiDataConnection,
    NiDataCommand: NiDataCommand,
    NiTemplateDecorator: NiTemplateDecorator,
    NiMultiTemplateDecorator: NiMultiTemplateDecorator,
    NiMySQLDataFactory: NiMySQLDataFactory,
    NiMsSQLDataFactory: NiMsSQLDataFactory,
    NiObjectDataFactory: NiObjectDataFactory,
    NiUrlDataFactory: NiUrlDataFactory,
    NiMailDataFactory: NiMailDataFactory,
    NiRedisSqlDataFactory: NiRedisSqlDataFactory,
    NiRedisSqlDataFactory2: NiRedisSqlDataFactory2,
    NiSoapDataFactory: NiSoapDataFactory,
    NiMemSQLDataFactory: NiMemSQLDataFactory
};
//# sourceMappingURL=ni.js.map