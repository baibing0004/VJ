{"version":3,"sources":["../../../src/coooders/io/config.js"],"names":["Config","_","data","key","value","config","merge","ConfigConvert","needConfig","AppSettingsConfigConvert","val","getValue","k","v","AppSettings","cm","getConfigValue","ProxyConfig","confkey","pri","__","setConfigValue","shoeException","ConfigManager","parent","resource","dic","hasUpdate","___","adapter","getConfigAdapter","fill","setValue","update","ConfigAdapter","load","eval","i","convert","showException","toConfig","console","log","toString","save","toJsonString","getConfigManagerFromObj","obj","getConfigManagerFromJS","path","include","getConfigManagerFromFile","cm2","paths","isArray","split","each","_v","startWith","execDir","environment","splitChar","trim","formatPath","callback","readFile","cont","replace","watchFile","message","Error","then","refill","getConfigManagerFromFileSync","forEach","readFileSync","e","getConfigManagerFromDir","regex","parse","resolve","normalize","process","mainModule","filename","dir","readdir","reg","RegExp","test","getConfigManagerFromDirSync","readdirSync","getBaseConfigManager","baseConfig","getApplicationConfigManager","appConfig","getApplicationConfigManagerFromFile","name","getApplicationConfigManagerFromJS","getApplicationConfigManagerFromObj","getApplicationConfigManagerFromDir","getBaseConfigManagerSync","getApplicationConfigManagerSync","getApplicationConfigManagerFromFileSync","getApplicationConfigManagerFromDirSync","Configs","ConfigConverts","type","basepath","base","conf","cls","create2","instance","pris"],"mappings":"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","file":"config.js","sourcesContent":["import V from '../common/tool';\nimport F from 'fs';\nimport I from './tool';\nimport P from 'path';\n\n/**\n * todo\n * Config基础存储类 拥有getValue(k),setValue(k,v),merge(config)等方法\n * @param\n */\nexport const Config = class {\n    constructor() {\n        let _ = this;\n        _.data = {};\n    }\n    getValue(key) {\n        return this.data[key];\n    }\n    setValue(key, value) {\n        this.data[key] = value;\n    }\n    merge(config) {\n        this.data = V.merge(this.data, config.data);\n    }\n};\n/**\n * ConfigConvert的基础类模型说明 基本上只有接口定义 未实现任何功能\n * \n */\nexport const ConfigConvert = class {\n    constructor() {\n        this.needConfig = false;\n    }\n    toConfig() { return null }\n    toStrings(config) {\n        return \"\";\n    }\n};\n/**\n * ConfigConvert的基本定义负责将一个KeyValueMap转换成真实的config\n */\nexport const AppSettingsConfigConvert = class extends ConfigConvert {\n    constructor() {\n        super();\n    }\n    toConfig(val) {\n        let config = new Config();\n        val = V.getValue(val, {});\n        for (let k in val) {\n            let v = val[k];\n            config.data[k] = v;\n        }\n        return config;\n    }\n};\nexport const AppSettings = (cm, key) => cm.getConfigValue('AppSettings', key);\n/**\n * Config的代理，用于调用configmanger完成config的获取与赋值操作,保护ConfigManager的调用完整逻辑\n */\nexport const ProxyConfig = class extends Config {\n    constructor(config, confkey) {\n        super();\n        const { _, __ } = pri(this, { config: config, confkey: confkey });\n    }\n    getValue(key) {\n        const { _, __ } = pri(this);\n        return __.config.getConfigValue(__.confkey, key);\n    }\n    setValue(key, value) {\n        const { _, __ } = pri(this);\n        return __.config.setConfigValue(__.confkey, key, value);\n    }\n    merge(config) {\n        V.shoeException(\"不支持的功能merge\")\n    }\n};\n/**\n * ConfigManager Config类库的核心类，负责完成链式连接，提供统一的接口供ConfigManager 获取值，并监控配置的变更\n */\nexport const ConfigManager = class extends Config {\n    constructor(parent, resource) {\n        super();\n        const { _, __ } = pri(this, { dic: {}, data: {}, hasUpdate: false, parent, resource });\n        if (!parent) {\n            __.dic['ConfigConverts'] = new ___.ConfigConvert();\n        }\n        _.adapter = ___.getConfigAdapter();\n        _.adapter.fill(_, __.dic, __.resource);\n    }\n    getConfig(key) {\n        const { _, __ } = pri(this);\n        __.data[key] = __.data[key] || new ProxyConfig(_, key);\n        return __.data[key];\n    }\n    getConfigValue(config, key) {\n        const { _, __ } = pri(this);\n        if (!__.dic[config]) return ___.getValue(__.parent, config, key);\n        else {\n            return __.dic[config].getValue(key);\n        }\n    }\n    setConfigValue(config, key, value) {\n        const { _, __ } = pri(this);\n        __.hasUpdate = true;\n        if (!__.dic[config])\n            ___.setValue(__.parent, config, key, value);\n        else\n            __.dic[config].setValue(key, value);\n    }\n    update() {\n        const { _, __ } = pri(this);\n        if (__.hasUpdate) _.adapter.update(_, __.dic, __.resource);\n    }\n    refill() {\n        const { _, __ } = pri(this);\n        __.dic = {};\n        _.adapter.fill(_, __.dic, __.resource);\n    }\n};\nexport const ConfigAdapter = class {\n    constructor() {}\n    fill(cm, dic, resource) {\n        resource = resource.load();\n        if (typeof(resource) == 'string') {\n            //拿到配置的JSON数据 比JSON不要求严格格式\n            resource = eval('(' + resource + ')');\n        }\n        for (var i in resource) {\n            if (i == 'base') continue; //放置base属性被误读\n            var convert = cm.getConfigValue('ConfigConverts', i);\n            if (!convert) {\n                V.showException('ConfigConverts 没有找到对应的解析器' + i);\n            } else {\n                var val = convert.toConfig(resource[i], convert.needConfig ? cm : null);\n                if (!val) {\n                    console.log('ConfigConverts 解析失败' + i + ':');\n                    console.log(resource[i]);\n                } else {\n                    if (dic[i]) {\n                        dic[i].merge(val);\n                    } else {\n                        dic[i] = val;\n                    }\n                }\n            }\n        }\n    }\n    update(cm, dic, resource) {\n        var data = {};\n        for (var i in dic) {\n            var convert = cm.getConfigValue('ConfigConverts', i);\n            if (!convert) {\n                V.showException('ConfigConverts 没有找到对应的解析器' + i);\n            } else {\n                var val = convert.toString(dic[i]);\n                if (!val) {\n                    console.log('ConfigConverts 解析失败' + i + ':');\n                    console.log(dic[i]);\n                } else {\n                    data[i] = val;\n                }\n            }\n        }\n        resource.save(V.toJsonString(data));\n    }\n};\nexport const getConfigManagerFromObj = function(cm, obj) {\n    if (!obj) return cm;\n    return new ConfigManager(cm, (function() {\n        return new class {\n            constructor() {\n                const { __ } = pri(this);\n                if (typeof(obj) === 'string') {\n                    obj = eval('(' + obj + ')');\n                }\n            }\n            load() { return obj; }\n            save() { V.showException('getConfigManagerFromObj不支持此方式'); }\n        };\n    })());\n};\nexport const getConfigManagerFromJS = function(cm, path) {\n    if (!path) return cm;\n    return new ConfigManager(cm, (function() {\n        return new class {\n            constructor() {\n                if (typeof(path) === 'string') {\n                    path = V.include(path);\n                }\n            }\n            load() { return path; }\n            save() { V.showException('getConfigManagerFromJS不支持此方式'); }\n        };\n    })());\n};\n/**\n * 异步获取配置文件\n * @param {*} cm \n * @param {*} path \n */\nexport const getConfigManagerFromFile = async function(cm, path) {\n    if (!path) return cm;\n    let config = {};\n    let cm2 = null;\n    let fill = async() => {\n        var paths = V.isArray(path) ? path : path.split(';');\n        await V.each(paths, async v => {\n            try {\n                const _v = v;\n                if (!(v.startWith('/') || v.startWith('\\\\')))\n                    v = (I.execDir() + V.environment.splitChar + v.trim('/').trim('\\\\'));\n                else\n                    v = I.formatPath(v);\n\n                let cont = (await V.callback(F.readFile, F, v) || '{}');\n                cont = eval('(' + cont.toString('utf-8').replace(/(\\s+\\/\\/[^\\r\\n]*[\\r\\n]*)+|[\\r\\n\\s]+/g, ' ') + ')');\n                V.merge(config, cont, true);\n                F.watchFile(_v, fill);\n                return false;\n            } catch (e) {\n                console.log(`读取文件${v}错误:` + e.message);\n                throw new Error(`读取文件${path + '\\\\' + v}错误:` + e.message);\n            }\n        }, true).then(() => {\n            if (cm2) cm2.refill();\n            else cm2 = new ConfigManager(cm, new class {\n                load() { return config; };\n                save() { V.showException('getConfigManagerFromFile不支持此方式'); }\n            });\n        });\n        return cm2;\n    };\n    await fill();\n    return cm2;\n};\n/**\n * 同步获取配置文件\n * @param {*} cm \n * @param {*} path \n */\nexport const getConfigManagerFromFileSync = function(cm, path) {\n    if (!path) return cm;\n    let config = {};\n    let cm2 = null;\n    let fill = () => {\n        let paths = V.isArray(path) ? path : path.split(';');\n        paths.forEach(v => {\n            try {\n                const _v = v;\n                if (!(v.startWith('/') || v.startWith('\\\\')))\n                    v = (I.execDir() + V.environment.splitChar + v.trim('/').trim('\\\\'));\n                else\n                    v = I.formatPath(v);\n                let cont = F.readFileSync(v) || '{}';\n                cont = eval('(' + cont.toString('utf-8').replace(/(\\s+\\/\\/[^\\r\\n]*[\\r\\n]*)+|[\\r\\n\\s]+/g, ' ') + ')');\n                V.merge(config, cont, true);\n                F.watchFile(_v, fill);\n                return;\n            } catch (e) {\n                console.log(`读取文件${v}错误:` + e.message);\n                throw new Error(`读取文件${path + '\\\\' + v}错误:` + e.message);\n            }\n        });\n        if (cm2) cm2.refill();\n        else cm2 = new ConfigManager(cm, new class {\n            load() { return config; };\n            save() { V.showException('getConfigManagerFromFileSync不支持此方式'); }\n        });\n        return cm2;\n    };\n    fill();\n    return cm2;\n};\nexport const getConfigManagerFromDir = async function(cm, path, regex = '^\\\\S+\\\\.npcf$') {\n    if (!path) return cm;\n    if (path.startWith('/') || path.startWith('\\\\'))\n        path = (P.parse(P.resolve(P.normalize(process.mainModule.filename))).dir + V.environment.splitChar + path.trim('/').trim('\\\\'));\n    else\n        path = I.formatPath(path);\n    let config = {};\n    let cm2 = null;\n    let fill = async() => {\n        var data = await V.callback(F.readdir, F, path) || [];\n        const reg = new RegExp(regex);\n        await V.each(data, async v => {\n            try {\n                if (!reg.test(v)) return false;\n                let cont = (await V.callback(F.readFile, F, path + V.environment.splitChar + v) || '{}');\n                cont = eval('(' + cont.toString('utf-8').replace(/(\\s+\\/\\/[^\\r\\n]*[\\r\\n]*)+|[\\r\\n\\s]+/g, ' ') + ')');\n                V.merge(config, cont, true);\n                return false;\n            } catch (e) {\n                console.log(`读取文件${path + V.environment.splitChar  + v}错误:` + e.message);\n                throw new Error(`读取文件${path + V.environment.splitChar  + v}错误:` + e.message);\n            }\n        }, true).then(() => {\n            if (cm2) cm2.refill();\n            else cm2 = new ConfigManager(cm, new class {\n                load() { return config; };\n                save() { V.showException('getConfigManagerFromFileSync不支持此方式'); }\n            });\n        });\n        return cm2;\n    };\n    F.watchFile(path, fill);\n    await fill();\n    return cm2;\n};\n\nexport const getConfigManagerFromDirSync = function(cm, path, regex = '^\\\\S+\\\\.npcf$') {\n    if (!path) return cm;\n    if (path.startWith('/') || path.startWith('\\\\'))\n        path = (P.parse(P.resolve(P.normalize(process.mainModule.filename))).dir + V.environment.splitChar + path.trim('/').trim('\\\\'));\n    else\n        path = I.formatPath(path);\n    let config = {};\n    let cm2 = null;\n    let fill = () => {\n        let data = F.readdirSync(path) || [];\n        const reg = new RegExp(regex);\n        data.forEach(v => {\n            try {\n                if (!reg.test(v)) return;\n                let cont = F.readFileSync(path + V.environment.splitChar + v) || '{}';\n                cont = eval('(' + cont.toString('utf-8').replace(/(\\s+\\/\\/[^\\r\\n]*[\\r\\n]*)+|[\\r\\n\\s]+/g, ' ') + ')');\n                V.merge(config, cont, true);\n                return;\n            } catch (e) {\n                console.log(`读取文件${path + V.environment.splitChar + v}错误:` + e.message);\n                throw new Error(`读取文件${path + '\\\\' + v}错误:` + e.message);\n            }\n        });\n        if (cm2) cm2.refill();\n        else cm2 = new ConfigManager(cm, new class {\n            load() { return config; };\n            save() { V.showException('getConfigManagerFromFileSync不支持此方式'); }\n        });\n        return cm2;\n    };\n    F.watchFile(path, fill);\n    fill();\n    return cm2;\n};\nexport const getBaseConfigManager = async() => {\n    if (___.baseConfig) {} else ___.baseConfig = await getConfigManagerFromFile(null, 'base.npcf');\n    return ___.baseConfig;\n};\nexport const getApplicationConfigManager = async() => {\n    if (___.appConfig) {} else ___.appConfig = await getApplicationConfigManagerFromFile(P.parse(process.mainModule.filename).name + '.npcf');\n    return ___.appConfig;\n};\nexport const getApplicationConfigManagerFromJS = async path => getConfigManagerFromJS(await getBaseConfigManager(), path);\nexport const getApplicationConfigManagerFromObj = async obj => getConfigManagerFromObj(await getBaseConfigManager(), obj);\nexport const getApplicationConfigManagerFromFile = async path => getConfigManagerFromFile(await getBaseConfigManager(), path);\nexport const getApplicationConfigManagerFromDir = async path => getConfigManagerFromDir(await getBaseConfigManager(), path);\n\nexport const getBaseConfigManagerSync = () => {\n    if (___.baseConfig) {} else ___.baseConfig = getConfigManagerFromFileSync(null, 'base.npcf');\n    return ___.baseConfig;\n};\nexport const getApplicationConfigManagerSync = () => {\n    if (___.appConfig) {} else ___.appConfig = getApplicationConfigManagerFromFileSync(P.parse(process.mainModule.filename).name + '.npcf');\n    return ___.appConfig;\n};\n\n\nexport const getApplicationConfigManagerFromFileSync = path => getConfigManagerFromFileSync(getBaseConfigManagerSync(), path);\nexport const getApplicationConfigManagerFromDirSync = path => getConfigManagerFromDirSync(getBaseConfigManagerSync(), path);\n\nconst ___ = {\n    Configs: {\n        ConfigConverts: {\n            AppSettings: { type: 'AppSettingsConfigConvert', path: '/com/coooders/io/config' }\n        }\n    },\n    getValue: (parent, config, key) => parent ? parent.getConfigValue(config, key) : null,\n    setValue: (parent, config, key, value) => parent ? parent.setConfigValue(config, key, value) : null,\n    ConfigConvert: class extends Config {\n        constructor() {\n            super();\n            this.data['ConfigConverts'] = this;\n        }\n        toConfig(val) {\n            return new class extends Config {\n                constructor() {\n                    super();\n                    let _ = this;\n                    for (var i in val) {\n                        if (i == 'base') {\n                            _.basepath = val.base ? val.base : null;\n                            ___.Configs.base = _.basepath;\n                            continue;\n                        }\n                        _.data[i] = (function() {\n                            const conf = val[i];\n                            //create要求是类定义 不能是 类名！！\n                            //require 如何获取全局的参数或者npm后的参数 全文件地址可以不带盘符 或者相对路径查找文件\n                            //注意使用了地址的类方法\n                            const cls = V.include(conf.path, _.basepath);\n                            if (conf.type && cls[conf.type])\n                                return V.create2(cls[conf.type], []);\n                            else return V.create2(cls, []);\n                        })();\n                    }\n                }\n\n            };\n        }\n        toStrings(config) {\n            V.showException('基础解析器不支持此功能');\n        }\n    },\n    getConfigAdapter: function() {\n        if (!ConfigAdapter.instance) {\n            ConfigAdapter.instance = new ConfigAdapter();\n        }\n        return ConfigAdapter.instance;\n    }\n};\nexport const Configs = ___.Configs;\nexport default { Configs, Config, ConfigConvert, AppSettingsConfigConvert, ProxyConfig, AppSettings, ConfigManager, ConfigAdapter, getConfigManagerFromJS, getConfigManagerFromObj, getConfigManagerFromFile, getConfigManagerFromDir, getBaseConfigManager, getApplicationConfigManager, getApplicationConfigManagerFromDir, getApplicationConfigManagerFromFile, getApplicationConfigManagerFromJS, getApplicationConfigManagerFromObj, getBaseConfigManagerSync, getApplicationConfigManagerSync, getConfigManagerFromFileSync, getConfigManagerFromDirSync };\nconst pri = V.pris();"]}