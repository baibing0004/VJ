{"version":3,"sources":["../../../src/coooders/io/log.js"],"names":["LogType","RELEASE","ERROR","WARN","INFO","DEBUG","TEST","All","LogRecord","logtype","needDateTime","needDiscript","needSeparator","pri","separator","params","recordTime","Date","data","num","source","_","__","toLowerCase","ret","record","rec","toString","map","join","Array","prototype","slice","apply","length","val","Logger","logrecord","event","EventEmitter","enable","lisener","on","tryC","log","close","emit","removeAllListeners","clone","args","unshift","LogLisener","triggers","formatter","resources","isAnd","tri","res","Error","isLog","forEach","v","test","content","each","write","ATrigger","AFormatter","AResource","RegexTrigger","reg","RegExp","match","LogTypeTrigger","min","max","FileResource","path","environment","splitChar","name","nameformat","waittime","sb","hasCreate","append","once","format","split","k","i","indexOf","createDir","then","appendFile","clear","DicResource","dic","NiResource","templatename","methodname","middler","NiTemplateManager","execute","pris"],"mappings":"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","file":"log.js","sourcesContent":["import V from '../common/tool';\nimport N from '../db/ni';\nimport F from 'fs';\nimport I from './tool';\nimport P from 'path';\nimport E from 'events';\nexport const LogType = {\n    /// <summary>\n    /// 最终的需要显示的正确结果\n    ///</summary>\n    RELEASE: 0,\n\n    /// <summary>\n    /// 程序错误\n    ///</summary>\n    ERROR: 1,\n\n    /// <summary>\n    /// 可能引发错误的警告\n    ///</summary>\n    WARN: 2,\n\n    /// <summary>\n    /// 程序日志信息（默认信息）\n    ///</summary>\n    INFO: 3,\n\n    /// <summary>\n    /// 程序调试信息\n    ///</summary>\n    DEBUG: 4,\n\n    /// <summary>\n    /// 测试信息说明\n    ///</summary>\n    TEST: 5,\n\n    /// <summary>\n    /// 全部的，一般作为默认参数使用\n    /// </summary>\n    All: 255\n};\nexport const LogRecord = class {\n    constructor(logtype = LogType.INFO, needDateTime = true, needDiscript = true, needSeparator = false) {\n        const { _, __ } = pri(this, { separator: '==================================================================\\r\\n', params: [], recordTime: new Date(), data: \"\", num: 0, source: \"\" });\n        _.needDateTime = 'true' == ('' + needDateTime).toLowerCase();\n        _.needDiscript = 'true' == ('' + needDiscript).toLowerCase();\n        _.needSeparator = 'true' == ('' + needSeparator).toLowerCase();\n    }\n    get params() {\n        const { _, __ } = pri(this);\n        return __.params;\n    }\n    set params(data = []) {\n        const { _, __ } = pri(this);\n        __.params = Array.prototype.slice.apply(data, [0, data.length]);\n    }\n    get recordTime() {\n        const { _, __ } = pri(this);\n        return __.recordTime;\n    }\n    get data() {\n        const { _, __ } = pri(this);\n        return __.data;\n    }\n    set data(val = '') {\n        const { _, __ } = pri(this);\n        __.data = val;\n    }\n    get num() {\n        const { _, __ } = pri(this);\n        return __.num;\n    }\n    set num(val = 0) {\n        const { _, __ } = pri(this);\n        __.num = val;\n    }\n    get source() {\n        const { _, __ } = pri(this);\n        return __.source;\n    }\n    set source(val = '') {\n        const { _, __ } = pri(this);\n        __.source = val;\n    }\n    clone() {\n        const { _, __ } = pri(this);\n        const ret = new LogRecord(_.logtype, _.needDateTime, _.needDiscript, _.needSeparator);\n        ret.source = _.source;\n        ret.num = _.num;\n        ret.data = _.data\n        ret.params = _.params;\n        return ret;\n    }\n    toString(record) {\n        const { _, __ } = pri(this);\n        let rec = record || _;\n        return [\n            rec.needSeparator ? __.separator :\n            ' ',\n            rec.needDateTime ? rec.recordTime.toString('yyyy-MM-dd HH:mm:ss:S ') : '',\n            rec.needDiscript ? LogType.map[rec.logtype] + \" \" : '',\n            rec.num > 0 ? rec.num + \" \" : '',\n            rec.data ? rec.data + \" \" : '',\n            rec.params ? rec.params.join(' ') : '',\n            rec.needSeparator ? `\\r\\n${__.separator}\\r\\n` : '\\r\\n',\n        ].join('');\n    }\n};\nexport const Logger = class {\n    constructor(logrecord = new LogRecord()) {\n        const { _, __ } = pri(this, { record: logrecord, event: new E.EventEmitter(), enable: true });\n    }\n    get enable() {\n        const { _, __ } = pri(this);\n        return __.enable;\n    }\n    set enable(data = true) {\n        const { _, __ } = pri(this);\n        __.enable = data;\n    }\n    setLisener(lisener) {\n        const { _, __ } = pri(this);\n        __.event.on('log', record => V.tryC(() => lisener.log(record)));\n        __.event.on('close', () => V.tryC(() => lisener.close()));\n    }\n    dispose() {\n        const { _, __ } = pri(this);\n        __.event.emit('close');\n        __.event.removeAllListeners();\n    }\n    log(logtype, data, params, num) {\n        const { _, __ } = pri(this);\n        if (_.enable) {\n            let record = __.record.clone();\n            record.logtype = logtype;\n            record.data = data + '';\n            record.params = params;\n            record.num = num;\n            __.event.emit('log', record);\n        }\n    }\n    error(...args) {\n        args.unshift(LogType.ERROR);\n        this.log.apply(this, args);\n    }\n    warn(...args) {\n        args.unshift(LogType.WARN);\n        this.log.apply(this, args);\n    }\n    release(...args) {\n        args.unshift(LogType.RELEASE);\n        this.log.apply(this, args);\n    }\n    info(...args) {\n        args.unshift(LogType.INFO);\n        this.log.apply(this, args);\n    }\n    debug(...args) {\n        args.unshift(LogType.DEBUG);\n        this.log.apply(this, args);\n    }\n    test(...args) {\n        args.unshift(LogType.TEST);\n        this.log.apply(this, args);\n    }\n};\nexport const LogLisener = class {\n    constructor(triggers = [], formatter, resources = [], isAnd = true) {\n        const [...tri] = triggers, [...res] = resources;\n        const { _, __ } = pri(this, { triggers: tri, formatter: formatter, resources: res, isAnd: isAnd });\n        if (__.triggers.length == 0) throw new Error('triggers数组不能为空');\n        if (!__.formatter) throw new Error('formatter不能为空');\n        if (__.resources.length == 0) throw new Error('resources数组不能为空');\n    }\n    log(record) {\n        const { _, __ } = pri(this);\n        let isLog = __.isAnd;\n        __.triggers.forEach((v) => {\n            if (__.isAnd)\n                isLog &= v.test(record);\n            else\n                isLog |= v.test(record);\n            //if ((__.isAnd ? isLog > 0 : isLog == 0)) return false;\n        });\n        if (isLog > 0) {\n            let content = __.formatter.toString(record);\n            V.each(__.resources, v => { v.write(content); return false; });\n        }\n    }\n    close() {\n        const { _, __ } = pri(this);\n        V.each(__.resources, v => { if (v.close) v.close(); return false; });\n    }\n};\nexport const ATrigger = class {\n    constructor() {}\n    test(record) { return true; }\n}\nexport const AFormatter = class {\n    constructor() {}\n    toString(data) {\n        return data ? data.toString() : super.toString();\n    }\n};\nexport const AResource = class {\n    constructor() {}\n    write(data) {}\n    close() {}\n}\nexport const RegexTrigger = class extends ATrigger {\n    constructor(reg) {\n        super();\n        const { _, __ } = pri(this);\n        __.reg = new RegExp(reg);\n    }\n    test(record) {\n        const { _, __ } = pri(this);\n        return record.data.match(__.reg) != null || record.params.join(' ').match(__.reg) != null;\n    }\n};\nexport const LogTypeTrigger = class extends ATrigger {\n    constructor(min = 0, max = LogType.INFO) {\n        super();\n        pri(this, { min, max });\n    }\n\n    test(record) {\n        const { _, __ } = pri(this);\n        return record.logtype >= __.min && record.logtype <= __.max;\n    }\n};\n/**\n * 文件源服务\n * @param {路径定义 会传入name参数} path \n * @param {传入Date.toString参数生成文件名} nameformat \n * @param {两次记录的等待时间} waittime \n */\nexport const FileResource = class extends AResource {\n    constructor(path = `.${V.environment.splitChar}log${name}.log`, nameformat = 'yyyyMMddHH', waittime = 20000) {\n        super();\n        pri(this, { path: path, nameformat: nameformat, sb: V.sb(), waittime, hasCreate: false });\n    }\n    write(data) {\n        const { _, __ } = pri(this);\n        if (data) {\n            if (__.sb.length == 0) {\n                __.sb.append(data);\n                V.once(() => V.tryC(() => {\n                    const name = V.format(__.path, { name: new Date().toString(__.nameformat) });\n                    if (!__.hasCreate) {\n                        __.hasCreate = true;\n                        var path = __.path.split(V.environment.splitChar);\n                        path.forEach((k, i) => path[i] = k.indexOf('.') < 1 ? k : null);\n                        I.createDir(path.join(V.environment.splitChar)).then(() => {\n                            F.appendFile(name, __.sb.clear(), () => {});\n                        });\n                    } else\n                        F.appendFile(name, __.sb.clear(), () => {});\n                }), __.waittime);\n            } else {\n                __.sb.append(data);\n            }\n        }\n    };\n};\n\n\n/**\n * 文件夹源服务\n * @param {文件夹定义 会传入dic参数} dic \n * @param {路径定义 会传入name参数} path \n * @param {传入Date.toString参数生成文件名} nameformat \n * @param {两次记录的等待时间} waittime \n */\nexport const DicResource = class extends FileResource {\n    constructor(dic = '', path, nameformat, waittime) {\n        super(dic + path, nameformat, waittime);\n    }\n};\n\n/**\n * 用于使用ni方法调用中间操作对象发送日志信息\n * @param {模板名} templatename \n * @param {方法名} methodname \n * @param {中介者对象} middler \n */\nexport const NiResource = class extends AResource {\n    constructor(templatename, methodname, middler) {\n        super();\n        pri(this, { NiTemplateManager: new N.NiTemplateManager(middler), templatename, methodname });\n    }\n    write(data) {\n        const { _, __ } = pri(this);\n        if (data) {\n            V.tryC(() => __.NiTemplateManager.execute(__.templatename, __.methodname, { data }));\n        }\n    };\n};\nexport default { LogType, LogRecord, Logger, LogLisener, ATrigger, AFormatter, AResource, RegexTrigger, LogTypeTrigger, FileResource, DicResource, NiResource };\nconst pri = V.pris();\nLogType.map = (() => {\n    let ret = {};\n    for (let k in LogType) {\n        const v = LogType[k];\n        ret[v] = k;\n    }\n    return ret;\n})();"]}