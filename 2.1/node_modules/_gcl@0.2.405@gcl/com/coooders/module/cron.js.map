{"version":3,"sources":["../../../src/coooders/module/cron.js"],"names":["IDateTimePart","name","time","data","YearDateTimePart","getFullYear","add","WeekDateTimePart","getDay","MonthDateTimePart","getMonth","DayDateTimePart","getDate","Date","HourDateTimePart","getHours","MinuteDateTimePart","getMinutes","SecondDateTimePart","getSeconds","DateTimeContainer","pri","__","CronNode","nodeIdentify","par","dateTime","ndeIdentify","RegExp","parent","datePart","container","_","changeValue","partRegen","GetDateTime","SetDateTime","AddTime","Next","changeFirst","partGetFirst","CommonCronNode","part","DayRegen","GetTime","GetMaxDate","Regen","DayGetFirst","GetFirst","maxDate","nextMaxDate","XCronNode","text","QCronNode","NCronNode","num","parseInt","DCronNode","nums","_n","split","w","length","sort","l","r","m","order","GetSmallNum","SCronNode","PCronNode","value","GetBigNum","ACronNode","GetMaxDay","weekDay","firstDay","GetRightDay","_t","WCronNode","toUpperCaseCase","substr","_l","Math","min","LCronNode","last","lastDay","CCronNode","RegExpS","format","FIELDLIMIT","PARTS","TYPES","CRONRegExp","CreateCronNode","node","lastIndex","test","create2","Error","NUMRegExp","MatchCronExpression","id","desc","matchs","match","i","Cron","expression","nodes","trim","exp","toUpperCase","pris"],"mappings":"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","file":"cron.js","sourcesContent":["//使用require('cron-parser')进行封装\nimport V from '../common/tool';\n/// <summary>\n/// 用于分别获取年/月/星期/日/时/分/秒实现\n/// </summary>\nclass IDateTimePart {\n    constructor(name) { this.name = name; }\n    GetTime(time) {}\n    GetMaxDate(time) {}\n    AddTime(time, data) {}\n}\n\n/// <summary>\n/// 年\n/// </summary>\nclass YearDateTimePart extends IDateTimePart {\n    constructor() { super('YearDateTimePart'); }\n    GetTime(time) {\n        return time.getFullYear();\n    }\n    GetMaxDate(time) {\n        return 10000;\n    }\n    AddTime(time, data) {\n        return time.add('y', data);\n    }\n}\n\n/// <summary>\n/// 星期\n/// </summary>\nclass WeekDateTimePart extends IDateTimePart {\n    constructor() { super('WeekDateTimePart'); }\n    GetTime(time) {\n        return time.getDay();\n    }\n\n    GetMaxDate(time) {\n        //limit=new Date(time.getFullYear(), time.getMonth() + 1, 1).add('d', -1).getDate();\n        //return (limit - time.getDate() < 7) ? (limit - time.getDate() + GetTime(time)) : 6;\n        return 7;\n    }\n    AddTime(time, data) {\n        return time.add('d', data);\n    }\n}\n\n/// <summary>\n/// 月\n/// </summary>\nclass MonthDateTimePart extends IDateTimePart {\n    constructor() { super('MonthDateTimePart'); }\n    GetTime(time) {\n        return time.getMonth() + 1;\n    }\n    GetMaxDate(time) {\n        return 12;\n    }\n    AddTime(time, data) {\n        return time.add('m', data);\n    }\n}\n\n\n\n/// <summary>\n/// 日\n/// </summary>\nclass DayDateTimePart extends IDateTimePart {\n    constructor() { super('DayDateTimePart'); }\n    GetTime(time) {\n        return time.getDate();\n    }\n    GetMaxDate(time = new Date()) {\n        return new Date(time.getFullYear(), time.getMonth() + 1, 1).add('d', -1).getDate();\n    }\n    AddTime(time, data) {\n        return time.add('d', data);\n    }\n}\n\n/// <summary>\n/// 时\n/// </summary>\nclass HourDateTimePart extends IDateTimePart {\n    constructor() { super('HourDateTimePart'); }\n    GetTime(time) {\n        return time.getHours();\n    }\n    GetMaxDate(time) {\n        return 24;\n    }\n    AddTime(time, data) {\n        return time.add('h', data);\n    }\n}\n\n/// <summary>\n/// 分\n/// </summary>\nclass MinuteDateTimePart extends IDateTimePart {\n    constructor() { super('MinuteDateTimePart'); }\n    GetTime(time) {\n        return time.getMinutes();\n    }\n    GetMaxDate(time) {\n        return 60;\n    }\n    AddTime(time, data) {\n        return time.add('n', data);\n    }\n}\n\n/// <summary>\n/// 秒\n/// </summary>\nclass SecondDateTimePart extends IDateTimePart {\n    constructor() { super('SecondDateTimePart'); }\n    GetTime(time) {\n        return time.getSeconds();\n    }\n    GetMaxDate(time) {\n        return 60;\n    }\n    AddTime(time, data) {\n        return time.add('s', data);\n    }\n}\nclass DateTimeContainer {\n    constructor() {\n        pri(this, { time: null })\n    }\n    SetDateTime(time) {\n        pri(this).__.time = time;\n    }\n    GetDateTime() {\n        return pri(this).__.time;\n    }\n}\n/**\n     * \n各种Cron标记的基类a,b:a或者b\n    data a/b:a为底b的倍数\n    data a-b:从a到b\n    data a#b:允许在星期域中出现。这个字符用于指定本月的某某天。例如：“6#3”表示本月第三周的星期五星期日为1 注意这里DayOfWeek 中星期日为0\n    data aL：在日期和星期意思不同，例如day-of-month域中表示一个月的最后一天。如果在day-of-week域表示周六，如果在day-of-week域中前面加上数字，它表示一个月的最后第几天，例如‘6L’就表示一个月的最后一个星期五\n    data aW：只允许日期域出现。这个字符用于指定日期的最近工作日。例如：如果你在日期域中写 “15W”，表示：这个月15号最近的工作日\n    data aC:\n     */\nclass CronNode {\n    constructor(nodeIdentify, par, dateTime) {\n        pri(this, {\n            //todo 正则待验证\n            ndeIdentify: new RegExp(nodeIdentify),\n            parent: par,\n            datePart: dateTime\n        });\n    }\n    get NodeIdentify() {\n        return pri(this).__.ndeIdentify;\n    }\n    Next(container) {\n        const { _, __ } = pri(this);\n        let changeValue = _.partRegen(container.GetDateTime(), __.datePart);\n        if (changeValue != 0)\n            container.SetDateTime(__.datePart.AddTime(container.GetDateTime(), changeValue));\n        //console.log(__.datePart.name, changeValue + \":\" + container.GetDateTime().toString('yyyy MM dd HH mm ss'));\n        //if ((parent != null && parent.Next(container)) || (parent == null && changeValue != 0)) {\n        if ((__.parent != null && __.parent.Next(container) && __.datePart.name != 'DayDateTimePart')) {\n            //特例处理Day和Week\n            //清零\n            let changeFirst = this.partGetFirst(container.GetDateTime(), __.datePart);\n            //console.log('first ' + __.datePart.name, changeFirst);\n            container.SetDateTime(__.datePart.AddTime(container.GetDateTime(), changeFirst));\n            return true;\n        }\n        //console.log(__.datePart.name);\n        return changeValue != 0;\n    }\n}\n\nclass CommonCronNode extends CronNode {\n    constructor(nodeIdentify, par, dateTime) { super(nodeIdentify, par, dateTime) }\n    partRegen(time, part) {\n        if (part.name == 'DayDateTimePart')\n            return this.DayRegen(part.GetTime(time), part.GetMaxDate(time), part.GetMaxDate(time.add('m', 1)));\n        else\n            return this.Regen(part.GetTime(time), part.GetMaxDate(time));\n    }\n\n    partGetFirst(time, part) {\n        if (part.name == 'DayDateTimePart')\n            return this.DayGetFirst(part.GetTime(time), part.GetMaxDate(time), part.GetMaxDate(time.add('m', 1)));\n        else\n            return this.GetFirst(part.GetTime(time), part.GetMaxDate(time));\n    }\n\n    /**\n     * 29，30，31号必然可以设置在本月或者下下个月 一般的这里的条件只对2月有用\n     * @param {*} time \n     * @param {*} maxDate \n     * @param {*} nextMaxDate \n     */\n    DayRegen(time, maxDate, nextMaxDate) {}\n        /**\n         * 29，30，31号必然可以设置在本月或者下下个月 一般的这里的条件只对2月有用\n         * @param {*} time \n         * @param {*} maxDate \n         * @param {*} nextMaxDate \n         */\n    DayGetFirst(time, maxDate, nextMaxDate) {}\n\n    /**\n     * 仅仅用于处理数字\n     * @param {*} time \n     * @param {*} maxDate \n     */\n    Regen(time, maxDate) {}\n\n    /**\n     * 仅仅用于处理数字\n     * @param {*} time \n     * @param {*} maxDate \n     */\n    GetFirst(time, maxDate) {}\n}\n\n\n/// <summary>\n/// 处理*号\n/// </summary>\nclass XCronNode extends CommonCronNode {\n    constructor(text, par, part) { super(\"\\\\*\", par, part); }\n    DayRegen(time, maxDate, nextMaxDate) {\n        return 0;\n    }\n\n    DayGetFirst(time, maxDate, nextMaxDate) {\n        return 1 - time;\n    }\n\n    Regen(time, maxDate) {\n        return 0;\n    }\n\n    GetFirst(time, maxDate) {\n        return -1 * time;\n    }\n}\n\n/// <summary>\n/// 处理？号\n/// </summary>\nclass QCronNode extends CronNode {\n    constructor(text, par, part) { super(\"\\\\?\", par, part); }\n    partRegen(time, part) {\n        return 0;\n    }\n    partGetFirst(time, part) {\n        return 0;\n    }\n}\n\n/// <summary>\n/// 处理具体数字 \n/// 请注意星期中1-7需要改为0-6\n/// </summary>\nclass NCronNode extends CommonCronNode {\n    constructor(num, par, datePart) {\n        super(\"\\\\d+\", par, datePart);\n        const { _, __ } = pri(this, { num: 0 });\n        __.num = parseInt(num);\n        if (datePart.name == 'WeekDateTimePart')\n            __.num--;\n    }\n\n    Regen(time, maxDate) {\n        const { _, __ } = pri(this);\n        return (time > __.num) ? (maxDate - time + __.num) : (__.num - time);\n    }\n\n    GetFirst(time, maxDate) {\n        const { _, __ } = pri(this);\n        return __.num - time;\n    }\n\n    DayRegen(time, maxDate, nextMaxDate) {\n        const { _, __ } = pri(this);\n        //29，30，31号必然可以设置在本月或者下下个月 一般的这里的条件只对2月有用\n        return this.Regen(time, maxDate) + ((time > __.num && __.num > nextMaxDate) ? nextMaxDate : 0);\n    }\n\n    DayGetFirst(time, maxDate, nextMaxDate) {\n        const { _, __ } = pri(this);\n        if (__.num > maxDate)\n        //说明本月无法设置 设置为下个月\n            return maxDate - time + __.num;\n        return this.GetFirst(time, maxDate);\n    }\n}\n\n/// <summary>\n/// 处理逗号\n/// </summary>\nclass DCronNode extends CommonCronNode {\n    constructor(num, par, datePart) {\n        super(\"\\\\d+[,\\\\d+]+\", par, datePart);\n        const { _, __ } = pri(this, { nums: [] });\n        let _n = num.split(',');\n        for (let w = 0; w < _n.length; w++)\n            if (datePart.name == 'WeekDateTimePart')\n                __.nums[w] = parseInt(_n[w]) - 1;\n            else\n                __.nums[w] = parseInt(_n[w]);\n        __.nums.sort((l, r) => l > r);\n    }\n    GetSmallNum(time) {\n        const { _, __ } = pri(this);\n        if (time <= __.nums[0])\n            return 0;\n        if (time >= __.nums[__.nums.length - 1])\n            return __.nums.length - 1;\n        let l = 0,\n            r, m;\n        r = __.nums.length;\n        while (r - l > 1) {\n            m = parseInt((l + r) / 2);\n            if (time >= __.nums[m])\n                l = m;\n            else\n                r = m;\n        }\n        return l;\n    }\n\n    Regen(time, maxDate) {\n        const { _, __ } = pri(this);\n        //当前数字已经大于最大的数\n        if (time > __.nums[__.nums.length - 1])\n            return maxDate - time + __.nums[0]; //maxDate - time +\n        let order = _.GetSmallNum(time);\n        return (time > __.nums[order]) ? (__.nums[order + 1] - time) : __.nums[order] - time;\n    }\n\n    GetFirst(time, maxDate) {\n        const { _, __ } = pri(this);\n        return __.nums[0] - time;\n    }\n\n    DayRegen(time, maxDate, nextMaxDate) {\n        const { _, __ } = pri(this);\n        if (time > __.nums[__.nums.length - 1]) {\n            //说明下个月也无法设置 设置为下下个月\n            //29，30，31号必然可以设置在本月或者下下个月 一般的这里的条件只对2月有用\n            return maxDate - time + __.nums[0] + (__.nums[0] > nextMaxDate ? nextMaxDate : 0);\n        }\n        let order = this.GetSmallNum(time);\n        return (time > __.nums[order]) ? (__.nums[order + 1] - time) : __.nums[order] - time;\n    }\n\n    DayGetFirst(time, maxDate, nextMaxDate) {\n        const { _, __ } = pri(this);\n        if (__.nums[0] > maxDate)\n        //说明本月无法设置 设置为下个月\n            return maxDate - time + __.nums[0];\n        return this.GetFirst(time, maxDate);\n    }\n}\n\n/// <summary>\n/// -号 //todo\n/// </summary>\nclass SCronNode extends CommonCronNode {\n    constructor(num, par, datePart) {\n        super(\"\\\\d+-\\\\d+\", par, datePart);\n        const { _, __ } = pri(this, { nums: [] });\n        const _n = num.split('-');\n        let l = parseInt(_n[0]);\n        let r = parseInt(_n[1]);\n        for (let w = 0; w < r - l + 1; w++)\n            if (datePart.name == 'WeekDateTimePart')\n                __.nums[w] = w + l - 1;\n            else\n                __.nums[w] = w + l;\n    }\n    GetSmallNum(time) {\n        const { _, __ } = pri(this);\n        if (time <= __.nums[0])\n            return 0;\n        if (time >= __.nums[__.nums.length - 1])\n            return __.nums.length - 1;\n        let l = 0,\n            r, m;\n        r = __.nums.length;\n        while (r - l > 1) {\n            m = parseInt((l + r) / 2);\n            if (time >= __.nums[m])\n                l = m;\n            else\n                r = m;\n        }\n        return l;\n    }\n\n    Regen(time, maxDate) {\n        const { _, __ } = pri(this);\n        //当前数字已经大于最大的数\n        if (time > __.nums[__.nums.length - 1])\n            return maxDate - time + __.nums[0];\n        let order = _.GetSmallNum(time);\n        return (time > __.nums[order]) ? (__.nums[order + 1] - time) : __.nums[order] - time;\n    }\n    GetFirst(time, maxDate) {\n        const { _, __ } = pri(this);\n        return __.nums[0] - time;\n    }\n    DayRegen(time, maxDate, nextMaxDate) {\n        const { _, __ } = pri(this);\n        if (time > __.nums[__.nums.length - 1]) {\n            //说明下个月也无法设置 设置为下下个月\n            //29，30，31号必然可以设置在本月或者下下个月 一般的这里的条件只对2月有用\n            return maxDate - time + __.nums[0] + (__.nums[0] > nextMaxDate ? nextMaxDate : 0);\n        }\n        let order = _.GetSmallNum(time);\n        //当前数字已经大于最大的数\n        return (time > __.nums[order]) ? (__.nums[order + 1] - time) : __.nums[order] - time;\n    }\n    DayGetFirst(time, maxDate, nextMaxDate) {\n        const { _, __ } = pri(this);\n        if (__.nums[0] > maxDate)\n        //说明本月无法设置 设置为下个月\n            return maxDate - time + __.nums[0];\n        return _.GetFirst(time, maxDate);\n    }\n}\n\n/// <summary>\n/// 除号\n/// </summary>\nclass PCronNode extends CommonCronNode {\n    constructor(num, par, part) {\n        super(\"\\\\d+/\\\\d+\", par, part);\n        const { _, __ } = pri(this);\n        _.l = 0;\n        _.r = 0;\n        let _n = num.split('/');\n        _.l = parseInt(_n[0]);\n        _.r = parseInt(_n[1]);\n        if (part.name == 'WeekDateTimePart') { _.l--; }\n    }\n\n    GetBigNum(time) {\n        const { _, __ } = pri(this);\n        return (parseInt((time - _.l) / _.r) + 1) * _.r + _.l;\n    }\n\n    DayRegen(time, maxDate, nextMaxDate) {\n        const { _, __ } = pri(this);\n        if (time > _.l && (time - _.l) % _.r == 0)\n            return 0;\n        let value = _.GetBigNum(time);\n        if (value > maxDate)\n        //如果下个月不能设置那么就设置到下下个月\n            return maxDate - time + _.l + (_.l > nextMaxDate ? nextMaxDate : 0);\n        else\n            return value - time;\n    }\n\n    DayGetFirst(time, maxDate, nextMaxDate) {\n        const { _, __ } = pri(this);\n        if (_.l > maxDate)\n        //如果本月设置不了那么下个月肯定可以设置\n            return maxDate - time + _.l;\n        return _.l - time;\n    }\n\n    Regen(time, maxDate) {\n        const { _, __ } = pri(this);\n        if (time >= _.l && (time - _.l) % _.r == 0)\n            return 0;\n        let value = _.GetBigNum(time);\n        if (value > maxDate)\n            return maxDate - time + _.l;\n        else\n            return value - time;\n    }\n\n    GetFirst(time, maxDate) {\n        const { _, __ } = pri(this);\n        return _.l - time;\n    }\n}\n\n/// <summary>\n/// #号 注意将1-7转为0-6\n/// </summary>\nclass ACronNode extends CronNode {\n    constructor(num, par, part) {\n        super(\"[1-7]#[1-5]\", par, part);\n        const { _, __ } = pri(this, {\n            GetMaxDay(time, part) {\n                if (part.name == 'WeekDateTimePart')\n                    return new Date(time.getFullYear(), time.getMonth() + 1, 1).add('d', -1).getDate();\n                else\n                    return part.GetMaxDate(time);\n            }\n        });\n        _.l = 0;\n        _.r = 0;\n        let _n = num.split('#');\n        _.l = parseInt(_n[0]);\n        _.r = parseInt(_n[1]);\n    }\n\n\n    /// <summary>\n    /// 得到第r个星期l是几号\n    /// </summary>\n    /// <param name=\"time\"></param>\n    /// <param name=\"weekDay\"></param>\n    /// <returns></returns>\n    GetRightDay(time, weekDay) {\n        const { _, __ } = pri(this);\n        //firstDay=7- (time - weekDay-1) % 7;\n        //if (firstDay == 7)\n        //    firstDay = 0;\n        //firstDay = Math.Abs((time - weekDay - 1) % 7);\n        const firstDay = ((1 - time + weekDay) % 7 + 7) % 7;\n        return 7 * (this.r - 1) + 1 + _.l - firstDay + (this.l < firstDay ? 7 : 0);\n    }\n\n    partRegen(time, part) {\n        const { _, __ } = pri(this);\n        let num = _.GetRightDay(time.getDate(), time.getDay());\n        let maxDate = __.GetMaxDay(time, part);\n        //判断如果正确的时间还未发生\n        if (time.getDate() <= num && num <= maxDate) {\n            return num - time.getDate();\n        } else {\n            let value = 0;\n            //判断如果正确的时间已经过期\n            while (time.getDate() > num || maxDate < num) {\n                //下个月1号\n                let _t = maxDate - time.getDate() + 1;\n                value += _t;\n                time = time.add('d', _t);\n                num = _.GetRightDay(time.getDate(), time.getDay());\n                maxDate = __.GetMaxDay(time, part);\n            }\n            return value + num - time.getDate();\n        }\n    }\n\n    partGetFirst(time, part) {\n        const { _, __ } = pri(this);\n        let num = _.GetRightDay(time.getDate(), time.getDay());\n        let maxDate = __.GetMaxDay(time, part);\n        if (time.getDate() <= num && num <= maxDate) {\n            return time.getDate() - num;\n        } else {\n            let value = 0;\n            while (time.getDate() > num || maxDate < num) {\n                //下个月1号\n                let _t = maxDate - time.getDate() + 1;\n                value += _t;\n                time = time.add('d', _t);\n                num = _.GetRightDay(time.getDate(), time.getDay());\n                maxDate = __.GetMaxDay(time, part);\n            }\n            return value + num - time.getDate();\n        }\n    }\n}\n\n/// <summary>\n/// W号\n/// </summary>\nclass WCronNode extends CronNode {\n    constructor(num = '', par, part) {\n        super(\"(\\\\d+|L)W\", par, part);\n        const { _, __ } = pri(this);\n        _.l = 0;\n        if (num.toUpperCaseCase() == \"LW\")\n            _.l = 31;\n        else\n            _.l = parseInt(num.substr(0, num.length - 1));\n    }\n\n    /// <summary>\n    /// 得到l日附近的工作日是几号\n    /// </summary>\n    /// <param name=\"time\"></param>\n    /// <param name=\"weekDay\"></param>\n    /// <returns></returns>\n    GetRightDay(time, maxDate, weekDay) {\n        //firstDay = 7 - (time - weekDay - 1) % 7;\n        //if (firstDay == 7)\n        //    firstDay = 0;\n        //return ((time-1)%7+firstDay)%7;\n        const { _, __ } = pri(this);\n        let _l = Math.min(_.l, maxDate);\n        let r = ((_l - time + weekDay) % 7 + 7) % 7;\n        if (r > 5)\n            return _l - 1;\n        if (r < 1)\n            return _l + 1;\n        return _l;\n    }\n\n    partRegen(time, part) {\n        let maxDate = part.GetMaxDate(time);\n        let num = _.GetRightDay(time.getDate(), maxDate, time.getDay());\n        if (time.getDate() <= num && maxDate >= num)\n            return num - time.getDate();\n        else {\n            return maxDate - time.getDate() + _.GetRightDay(1, part.GetMaxDate(time.add('m', 1)), ((1 + maxDate - time.getDate() + time.getDay()) % 7 + 7) % 7);\n        }\n    }\n\n    partGetFirst(time, part) {\n        return this.GetRightDay(time.getDate(), part.GetMaxDate(time), time.getDay()) - time.getDate();\n    }\n}\n\n/// <summary>\n/// 处理最后几天，或者最后一个星期几的问题\n/// </summary>\nclass LCronNode extends CronNode {\n    constructor(num, par, part) {\n        super(\"\\\\d*L\", par, part);\n        const { _, __ } = pri(this, {\n            GetMaxDay: function(time, part) {\n                if (part.name == 'WeekDateTimePart')\n                    return new Date(time.getFullYear(), time.getMonth() + 1, 1).add('d', -1).getDate();\n                else\n                    return part.GetMaxDate(time);\n            }\n        });\n        _.l = 0;\n        if (num.length > 1)\n            _.l = parseInt(num.substr(0, num.length - 1));\n        if (part.name == 'WeekDateTimePart' && _.l > 0) { _.l--; }\n    }\n\n    /// <summary>\n    /// 得到l日附近的工作日是几号\n    /// </summary>\n    /// <param name=\"time\"></param>\n    /// <param name=\"weekDay\"></param>\n    /// <returns></returns>\n    GetRightDay(time, part) {\n        const { _, __ } = pri(this);\n        if (part.name == 'WeekDateTimePart') {\n            let last = __.GetMaxDay(time, part);\n            //得到最后一天是星期几\n            let lastDay = ((last - time.getDate() + time.getDay()) % 7 + 7) % 7;\n            return last + _.l - lastDay - (_.l < lastDay ? 0 : 7);\n        } else\n            return part.GetMaxDate(time) - _.l;\n    }\n\n    partRegen(time, part) {\n        const { _, __ } = pri(this);\n        let maxDate = __.GetMaxDay(time, part);\n\n        let num = _.GetRightDay(time, part);\n        if (time.getDate() <= num && maxDate >= num)\n            return num - time.getDate();\n        else\n            return maxDate - time.getDate() + _.GetRightDay(time.add('m', 1), part);\n    }\n\n    partGetFirst(time, part) {\n        const { _, __ } = pri(this);\n        let maxDate = __.GetMaxDay(time, part);\n        let num = _.GetRightDay(time, part);\n        if (time.getDate() <= num && maxDate >= num)\n            return time.getDate() - num;\n        else\n            return maxDate - time.getDate() + _.GetRightDay(time.add('m', 1), part);\n    }\n}\n/// <summary>\n/// 处理几号以后 或者星期几以后\n/// </summary>\nclass CCronNode extends CommonCronNode {\n    constructor(num, par, part) {\n        super(\"\\\\d+C\", par, part);\n        const { _, __ } = pri(this);\n        _.l = 0;\n        if (num.length > 1)\n            _.l = parseInt(num.substr(0, num.length - 1));\n        if (part.name == 'WeekDateTimePart') { _.l--; }\n    }\n    DayRegen(time, maxDate, nextMaxDate) {\n        const { _, __ } = pri(this);\n        if (time >= _.l)\n            return 0;\n        else\n            return _.l - time + ((_.l > maxDate) ? maxDate : 0);\n    }\n    DayGetFirst(time, maxDate, nextMaxDate) {\n        const { _, __ } = pri(this);\n        return _.l - time;\n    }\n    Regen(time, maxDate) {\n        const { _, __ } = pri(this);\n        if (time >= _.l)\n            return 0;\n        else\n            return _.l - time;\n    }\n    GetFirst(time, maxDate) {\n        const { _, __ } = pri(this);\n        return _.l - time;\n    }\n}\n\nconst RegExpS = [\n    new RegExp(V.format(\"(^\\\\*$)|(^{data}([-/]{data})?$)|(^{data}(,{data})+$)\", { data: \"[1-5]?[0-9]\" }), 'i'), new RegExp(V.format(\"(^\\\\*$)|(^{data}([-/]{data})?$)|(^{data}(,{data})+$)\", { data: \"[1-5]?[0-9]\" }), 'i'), new RegExp(V.format(\"(^\\\\*$)|(^{data}([-/]{data})?$)|(^{data}(,{data})+$)\", { data: \"[1-2]?[0-9]\" }), 'i'), new RegExp(V.format(\"(^[\\\\*\\\\?]$)|(^{data}([-/]{data})?$)|(^{data}?[LWC]$)|(^{data}(,{data})+$)|(^LW$)\", { data: \"[1-3]?[0-9]\" }), 'i'), new RegExp(V.format(\"(^\\\\*$)|(^{data}([-/]{data})?$)|(^{data}(,{data})+$)\", { data: \"1?[0-9]\" }), 'i'), new RegExp(V.format(\"(^[\\\\*\\\\?]$)|(^{data}([-/#]{data})?$)|(^{data}?[LC]$)|(^{data}(,{data})+$)\", { data: \"[1-7]\" }), 'i'), new RegExp(V.format(\"(^\\\\*$)|(^{data}([-/]{data})?$)|(^{data}(,{data})+$)\", { data: \"[0-9]{4}\" }), 'i')\n];\nconst FIELDLIMIT = [\n    [0, 59],\n    [0, 59],\n    [0, 23],\n    [1, 31],\n    [1, 12],\n    [1, 7],\n    [1, 9999]\n];\nconst PARTS = [new SecondDateTimePart(), new MinuteDateTimePart(), new HourDateTimePart(), new DayDateTimePart(), new WeekDateTimePart(), new MonthDateTimePart(), new YearDateTimePart()];\n\nconst TYPES = [XCronNode, QCronNode, NCronNode, DCronNode, SCronNode, PCronNode, ACronNode, WCronNode, LCronNode, CCronNode];\nconst CRONRegExp = [new RegExp(\"^\\\\*$\", 'gi'), new RegExp(\"^\\\\?$\", 'gi'), new RegExp(\"^\\\\d+$\", 'gi'), new RegExp(\"^\\\\d+[,\\\\d+]+$\", 'gi'), new RegExp(\"^\\\\d+-\\\\d+$\", 'gi'), new RegExp(\"^\\\\d+/\\\\d+$\", 'gi'), new RegExp(\"^[1-7]#[1-5]$\", 'gi'), new RegExp(\"^(\\\\d+|L)W$\", 'gi'), new RegExp(\"^\\\\d*L$\", 'gi'), new RegExp(\"^\\\\d+C$\", 'gi')];\nconst CreateCronNode = function(text, node, part) {\n    for (let w = 0; w < CRONRegExp.length; w++) {\n        CRONRegExp[w].lastIndex = 0; //每次调用test回调指针\n        if (CRONRegExp[w].test(text) ? true : false) return V.create2(TYPES[w], [text, node, part]);\n    }\n    throw new Error(text + \"没有找到合适的表示式元素!\");\n}\n\nconst NUMRegExp = new RegExp(\"\\\\d+\", 'g');\nconst MatchCronExpression = function(text) {\n        for (let w = 0; w < 7; w++) {\n            if (!RegExpS[w].test(text[w]))\n                throw new Error(V.format(\"第{id}项不符合要求:{desc}\", { id: w + 1, desc: text[w] }));\n            const matchs = text[w].match(NUMRegExp) || [];\n            for (let i = 0; i < matchs.length; i++) {\n                const num = parseInt(matchs[i]);\n                if (!(FIELDLIMIT[w][0] <= num & FIELDLIMIT[w][1] >= num))\n                    throw new Error(V.format(\"第{id}项超出范围:{desc}\", { id: w + 1, desc: text[w] }));\n            }\n        }\n        return true;\n    }\n    /**\n     * 使用require('cron-parser')进行克隆表达式封装\n     * @param {*} 克隆表达式 \n     * @param {*} 当前时间 \n     */\nexport const Cron = class {\n    constructor(expression) {\n            const { _, __ } = pri(this, { nodes: null });\n            expression = expression.trim();\n            if (expression.split(' ').length < 7)\n                expression += \" *\";\n            let exp = expression.toUpperCase().split(' ');\n\n            MatchCronExpression(exp);\n\n            //替换月与星期的位置 理顺嵌套关系！\n            const _t = exp[5];\n            exp[5] = exp[4];\n            exp[4] = _t;\n            for (let w = 6; w >= 0; w--) {\n                __.nodes = CreateCronNode(exp[w], __.nodes, PARTS[w]);\n            }\n        }\n        /*\n         *(^\\*$)|(^[1-5]?[0-9]([-/][1-5]?[0-9])?$)|(^[1-5]?[0-9](,[1-5]?[0-9])+$)\n        (^\\*$)|(^[1-5]?[0-9]([-/][1-5]?[0-9])?$)|(^[1-5]?[0-9](,[1-5]?[0-9])+$)\n        (^\\*$)|(^[1-2]?[0-9]([-/][1-2]?[0-9])?$)|(^[1-2]?[0-9](,[1-2]?[0-9])+$)\n        (^[\\*\\?]$)|(^[1-3]?[0-9]([-/][1-3]?[0-9])?$)|(^[1-3]?[0-9]?[LWC]$)|(^[1-3]?[0-9](,[1-3]?[0-9])+$)\n        (^\\*$)|(^1?[0-9]([-/]1?[0-9])?$)|(^1?[0-9](,1?[0-9])+$)\n        (^[\\*\\?]$)|(^[1-7]([-/#][1-7])?$)|(^[1-7]?[LC]$)|(^[1-7](,[1-7])+$)\n        (^\\*$)|(^[0-9]{4}([-/][0-9]{4})?$)|(^[0-9]{4}(,[0-9]{4})+$)\n                FieldName = new String[] { \"秒\", \"分\", \"小时\", \"日期\", \"月\", \"星期\", \"年\" };\n         */\n    next(time = new Date()) {\n        const { _, __ } = pri(this);\n        const container = new DateTimeContainer();\n        container.SetDateTime(time.add('s', 1));\n        while (__.nodes.Next(container));\n        return container.GetDateTime();\n    }\n}\n\nexport default { Cron };\nconst pri = V.pris();"]}