{"version":3,"sources":["../../../src/coooders/module/des3xcrypt.js"],"names":["_createKey","length","ret","i","push","Math","floor","random","Buffer","toString","des3xcrypt","key","iv","pri","enc","Base64","parse","val","_","__","TripleDES","encrypt","Utf8","mode","CBC","padding","pad","Pkcs7","decrypt","createKey","createIV","pris"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;AACA,IAAMA,aAAa,SAAbA,UAAa,CAASC,MAAT,EAAiB;AAChC,QAAMC,MAAM,EAAZ;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,MAApB,EAA4BE,GAA5B,EAAiC;AAC7BD,YAAIE,IAAJ,CAASC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,GAA3B,CAAT;AACH;AACD,WAAO,IAAIC,MAAJ,CAAWN,GAAX,EAAgBO,QAAhB,CAAyB,QAAzB,CAAP;AACH,CAND;;AAQO,IAAMC;AACT,wBAAYC,GAAZ,EAAiBC,EAAjB,EAAqB;AAAA;;AACjBC,YAAI,IAAJ,EAAU,EAAEF,KAAK,mBAAEG,GAAF,CAAMC,MAAN,CAAaC,KAAb,CAAmBL,GAAnB,CAAP,EAAgCC,IAAI,mBAAEE,GAAF,CAAMC,MAAN,CAAaC,KAAb,CAAmBJ,EAAnB,CAApC,EAAV;AACH;;AAHQ;AAAA;AAAA,gCAIDK,GAJC,EAII;AAAA,uBACSJ,IAAI,IAAJ,CADT;AAAA,gBACDK,CADC,QACDA,CADC;AAAA,gBACEC,EADF,QACEA,EADF;;AAET,mBAAO,mBAAEC,SAAF,CAAYC,OAAZ,CAAoB,mBAAEP,GAAF,CAAMQ,IAAN,CAAWN,KAAX,CAAiBC,GAAjB,CAApB,EAA2CE,GAAGR,GAA9C,EAAmD,EAAEC,IAAIO,GAAGP,EAAT,EAAaW,MAAM,mBAAEA,IAAF,CAAOC,GAA1B,EAA+BC,SAAS,mBAAEC,GAAF,CAAMC,KAA9C,EAAnD,EAA0GlB,QAA1G,EAAP;AACH;AAPQ;AAAA;AAAA,gCAQDQ,GARC,EAQI;AAAA,wBACSJ,IAAI,IAAJ,CADT;AAAA,gBACDK,CADC,SACDA,CADC;AAAA,gBACEC,EADF,SACEA,EADF;;AAET,mBAAO,mBAAEC,SAAF,CAAYQ,OAAZ,CAAoBX,GAApB,EAAyBE,GAAGR,GAA5B,EAAiC,EAAEC,IAAIO,GAAGP,EAAT,EAAaW,MAAM,mBAAEA,IAAF,CAAOC,GAA1B,EAA+BC,SAAS,mBAAEC,GAAF,CAAMC,KAA9C,EAAjC,EAAwFlB,QAAxF,CAAiG,mBAAEK,GAAF,CAAMQ,IAAvG,CAAP;AACH;AAXQ;AAAA;AAAA,GAAN;AAaA,IAAMO,gCAAY,SAAZA,SAAY;AAAA,WAAM7B,WAAW,EAAX,CAAN;AAAA,CAAlB;AACA,IAAM8B,8BAAW,SAAXA,QAAW;AAAA,WAAM9B,WAAW,CAAX,CAAN;AAAA,CAAjB;AACP;kBACe,EAAEU,sBAAF,EAAcmB,oBAAd,EAAyBC,kBAAzB,E;;AACf,IAAMjB,MAAM,eAAEkB,IAAF,EAAZ","file":"des3xcrypt.js","sourcesContent":["import C from 'crypto-js';\nimport V from '../common/tool';\nconst _createKey = function(length) {\n    const ret = [];\n    for (let i = 0; i < length; i++) {\n        ret.push(Math.floor(Math.random() * 256));\n    }\n    return new Buffer(ret).toString('base64');\n};\n\nexport const des3xcrypt = class {\n    constructor(key, iv) {\n        pri(this, { key: C.enc.Base64.parse(key), iv: C.enc.Base64.parse(iv) });\n    }\n    encrypt(val) {\n        const { _, __ } = pri(this);\n        return C.TripleDES.encrypt(C.enc.Utf8.parse(val), __.key, { iv: __.iv, mode: C.mode.CBC, padding: C.pad.Pkcs7 }).toString();\n    }\n    decrypt(val) {\n        const { _, __ } = pri(this);\n        return C.TripleDES.decrypt(val, __.key, { iv: __.iv, mode: C.mode.CBC, padding: C.pad.Pkcs7 }).toString(C.enc.Utf8);\n    }\n}\nexport const createKey = () => _createKey(24);\nexport const createIV = () => _createKey(8);\n//暂时抛弃官方crypto方法因为其未支持Des3-ECB\nexport default { des3xcrypt, createKey, createIV };\nconst pri = V.pris();"]}