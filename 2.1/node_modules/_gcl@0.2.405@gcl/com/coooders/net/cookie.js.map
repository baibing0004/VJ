{"version":3,"sources":["../../../src/coooders/net/cookie.js"],"names":["Cookie","opts","pri","_","__","merge","name","value","expires","path","domain","max_age","httpOnly","comment","secure","indexOf","parse","Date","sb","append","toString","trim","toUTCString","ret","clear","format","i","getType","toJsonString","stringify","now","diff","ret2","k","v","url","IsExpire","isValid","host","toLowerCase","val","cookies","forEach","split","filter","kv","v2","length","substr","toHeaderArray","vals","toServerString","push","serverParse","str","pris"],"mappings":"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","file":"cookie.js","sourcesContent":["import V from '../common/tool';\nimport Q from 'querystring';\nimport U from 'url';\n/**\n * cookie 包含属性,toString与解析方法 cookiecollection 特别注意Cookie中保持的时间戳会在返回时编程字符串，不会自动转换\n * @property(name,value,expires,path,domain,max_age,httpOnly,secure)\n */\nexport const Cookie = class {\n        constructor(opts = {}) {\n                const { _, __ } = pri(this);\n                opts = V.merge({\n                    name: '',\n                    value: '',\n                    expires: null,\n                    path: '/',\n                    domain: null,\n                    max_age: null,\n                    httpOnly: false,\n                    comment: null,\n                    secure: false\n                }, opts);\n                _.name = opts.name;\n                _.value = opts.value.indexOf('=') >= 0 ? Q.parse((opts.value)) : (opts.value);\n                _.expires = opts.expires ? new Date(opts.expires) : null;\n                _.path = opts.path || '';\n                _.domain = opts.domain || '';\n                _.max_age = opts.max_age ? new Date(opts.max_age) : null;\n                _.httpOnly = !!opts.httpOnly;\n                _.comment = opts.comment || '';\n                _.secure = !!opts.secure;\n            }\n            /**\n             * 判断Cookie是否过期\n             */\n        get IsExpire() {\n                const { _, __ } = pri(this);\n                const now = new Date();\n                return (_.expires ? now.diff('ms', _.expires) > 0 : false) || (_.max_age ? now.diff('ms', _.max_age) > 0 : false);\n            }\n            /**\n             * 用于服务端使用产生Set-Cookie返回字段\n             */\n        toServerString() {\n                const { _, __ } = pri(this);\n                let sb = V.sb();\n                sb.append(_.toString().trim(';'));\n                if (_.path) sb.append(\";path=\" + _.path);\n                if (_.expires) sb.append(\"; expires=\" + _.expires.toUTCString());\n                if (_.max_age) sb.append(\"; max-age=\" + _.max_age.toUTCString());\n                if (_.domain) sb.append(\"; domain=\" + _.domain);\n                if (_.secure) sb.append(\"; secure\");\n                if (_.httpOnly) sb.append(\"; httponly\");\n                const ret = sb.clear();\n                sb = null;\n                return ret;\n            }\n            /**\n             * 用于客户端使用产生Cookie上传字段内容\n             */\n        toString() {\n            const { _, __ } = pri(this);\n            return V.format('{name}={value};', {\n                name: _.name,\n                value: (function() {\n                    if (typeof(_.value) == 'string') return (_.value);\n                    else {\n                        for (let i in _.value) {\n                            if (_.value[i] && V.getType(_.value[i]) != 'string') _.value[i] = V.toJsonString(_.value[i]);\n                        }\n                        return Q.stringify(_.value);\n                    }\n                })()\n            });\n        }\n    }\n    /**\n     * 广度优先的字典合并\n     */\nexport const merge = function(ret, ret2) {\n    for (let k in ret2) {\n        let v = ret2[k];\n        if (v.toString && v.name) {\n            ret[k] = v;\n        }\n    }\n};\n/** \n * 用于生成request({\"Cookie\",toString(url)})的参数') \n */\nexport const toString = function(ret, url) {\n    var opts = url ? U.parse(url) : {};\n    var sb = V.sb();\n    for (let k in ret) {\n        let v = ret[k];\n        if (v.toString && v.name) {\n            if (!v.IsExpire && (!V.isValid(v.domain) || !V.isValid(opts.host) || (v.domain && opts.host.toLowerCase().indexOf(v.domain.toLowerCase()) >= 0)))\n                sb.append(v.toString());\n        }\n    }\n    var val = sb.clear();\n    sb = null;\n    return val;\n};\n/**\n *  parse:用于客户端使用获取resp.headers[\\'set-cookie\\']信息\n */\nexport const parse = (cookies = []) => {\n    let ret = {};\n    if (cookies) {\n        cookies.forEach(v => {\n            let val = {};\n            v.split(';').filter(v => V.isValid(v)).forEach(v2 => {\n                var kv = v2.split('=');\n                if (V.toJsonString(val).length == 2) {\n                    val.name = kv[0].trim();\n                    val.value = v2.substr(kv[0].length + 1);\n                } else val[kv[0].trim()] = v2.substr(kv[0].length).trim('=');\n            });\n            ret[val.name] = new Cookie(val);\n        });\n    }\n    return ret;\n};\n/** \n * toHeaderArray:用于生成response.setHeader(\"Set-Cookie\",toHeaderArray);的参数' \n * \n */\nexport const toHeaderArray = function(ret) {\n    var vals = [];\n    for (let k in ret) {\n        let v = ret[k];\n        if (v && v.toServerString)\n            vals.push(v.toServerString());\n    }\n    return vals;\n};\n/** serverParse:用于服务端使用获取Cookie信息'*/\nexport const serverParse = str => {\n    var ret = {};\n    if (str)\n        str.split(';').filter(v => V.isValid(v)).forEach(v => {\n            var vals = v.split('=');\n            if (vals.length >= 2) {\n                ret[vals[0].trim()] = new Cookie({ name: vals[0], value: (v.substr(vals[0].length + 1)) });\n            }\n        });\n    return ret;\n};\nexport default { Cookie, merge, toString, toHeaderArray, serverParse, parse };\nconst pri = V.pris();"]}